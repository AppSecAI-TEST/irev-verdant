<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.eclipse.org/birt/2005/design" version="3.2.23" id="1">
    <property name="createdBy">Eclipse BIRT Designer Version 4.3.2.v20140211-1400 Build &lt;4.3.2.v20140218-1056></property>
    <text-property name="title">Linear-Elevation-Roll</text-property>
    <list-property name="propertyBindings">
        <structure>
            <property name="name">queryText</property>
            <property name="id">13</property>
        </structure>
        <structure>
            <property name="name">queryTimeOut</property>
            <property name="id">13</property>
        </structure>
        <structure>
            <property name="name">rowFetchSize</property>
            <property name="id">13</property>
        </structure>
    </list-property>
    <property name="units">in</property>
    <property name="iconFile">/templates/blank_report.gif</property>
    <property name="layoutPreference">auto layout</property>
    <property name="bidiLayoutOrientation">ltr</property>
    <property name="imageDPI">96</property>
    <parameters>
        <scalar-parameter name="freq1" id="10">
            <property name="hidden">false</property>
            <text-property name="helpText">Enter the frequency</text-property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="3db" id="1357">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="3dbDeg" id="1355">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="testid" id="12">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="type" id="767">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="lgain" id="768">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="img" id="1028">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="rpth" id="1124">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="rptf" id="1125">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="scale" id="1128">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq2" id="1131">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq3" id="1132">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="10db" id="1386">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="10dbDeg" id="1387">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq5" id="1458">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq4" id="1457">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq6" id="1459">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq7" id="1460">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq8" id="1461">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq9" id="1462">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq10" id="1463">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="polar" id="2061">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="pc" id="2767">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">integer</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
    </parameters>
    <data-sources>
        <oda-data-source extensionID="org.eclipse.birt.report.data.oda.jdbc" name="VerdantProfile" id="7">
            <list-property name="privateDriverProperties">
                <ex-property>
                    <name>metadataBidiFormatStr</name>
                    <value>ILYNN</value>
                </ex-property>
                <ex-property>
                    <name>disabledMetadataBidiFormatStr</name>
                </ex-property>
                <ex-property>
                    <name>contentBidiFormatStr</name>
                    <value>ILYNN</value>
                </ex-property>
                <ex-property>
                    <name>disabledContentBidiFormatStr</name>
                </ex-property>
            </list-property>
            <property name="odaDriverClass">com.mysql.jdbc.Driver</property>
            <property name="odaURL">jdbc:mysql://localhost:3306/verdant</property>
            <property name="odaUser">root</property>
            <property name="OdaConnProfileName">VerdantProfile</property>
            <property name="OdaConnProfileStorePath">VerdantProfile</property>
        </oda-data-source>
    </data-sources>
    <data-sets>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="Data SetGrid" id="13">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression">params["freq1"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MyDataHeader</property>
                    <expression name="expression">params["type"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency2</property>
                    <expression name="expression">params["freq2"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency3</property>
                    <expression name="expression">params["freq3"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency4</property>
                    <expression name="expression">params["freq4"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency5</property>
                    <expression name="expression">params["freq5"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency6</property>
                    <expression name="expression">params["freq6"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency7</property>
                    <expression name="expression">params["freq7"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency8</property>
                    <expression name="expression">params["freq8"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency9</property>
                    <expression name="expression">params["freq9"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency10</property>
                    <expression name="expression">params["freq10"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">testproc</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">testproc</text-property>
                    <text-property name="heading">testproc</text-property>
                </structure>
                <structure>
                    <property name="columnName">TestDesc</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">TestDesc</text-property>
                    <text-property name="heading">TestDesc</text-property>
                </structure>
                <structure>
                    <property name="columnName">TestDate</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">TestDate</text-property>
                    <text-property name="heading">TestDate</text-property>
                </structure>
                <structure>
                    <property name="columnName">frequnit</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">frequnit</text-property>
                    <text-property name="heading">frequnit</text-property>
                </structure>
                <structure>
                    <property name="columnName">testcenter</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">testcenter</text-property>
                    <text-property name="heading">testcenter</text-property>
                </structure>
                <structure>
                    <property name="columnName">instruments</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">instruments</text-property>
                    <text-property name="heading">instruments</text-property>
                </structure>
                <structure>
                    <property name="columnName">calibration</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">calibration</text-property>
                    <text-property name="heading">calibration</text-property>
                </structure>
                <structure>
                    <property name="columnName">SerialNo</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">SerialNo</text-property>
                    <text-property name="heading">SerialNo</text-property>
                </structure>
                <structure>
                    <property name="columnName">Productname</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">Productname</text-property>
                    <text-property name="heading">Productname</text-property>
                </structure>
                <structure>
                    <property name="columnName">Version</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">version</text-property>
                    <text-property name="heading">version</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">testidGrid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">testproc</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">TestDesc</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">TestDate</property>
                        <property name="dataType">date-time</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">frequnit</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">testcenter</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">instruments</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">calibration</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">SerialNo</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">Productname</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">Version</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">11</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">12</property>
                        <property name="name">MyDataHeader</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">13</property>
                        <property name="name">frequency2</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">14</property>
                        <property name="name">frequency3</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">15</property>
                        <property name="name">frequency4</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">16</property>
                        <property name="name">frequency5</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">17</property>
                        <property name="name">frequency6</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">18</property>
                        <property name="name">frequency7</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">19</property>
                        <property name="name">frequency8</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">20</property>
                        <property name="name">frequency9</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">21</property>
                        <property name="name">frequency10</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">testproc</property>
                    <property name="nativeName">testproc</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">TestDesc</property>
                    <property name="nativeName">TestDesc</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">TestDate</property>
                    <property name="nativeName">TestDate</property>
                    <property name="dataType">date-time</property>
                    <property name="nativeDataType">93</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">frequnit</property>
                    <property name="nativeName">frequnit</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">testcenter</property>
                    <property name="nativeName">testcenter</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">instruments</property>
                    <property name="nativeName">instruments</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">calibration</property>
                    <property name="nativeName">calibration</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">SerialNo</property>
                    <property name="nativeName">SerialNo</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">9</property>
                    <property name="name">Productname</property>
                    <property name="nativeName">Productname</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">10</property>
                    <property name="name">Version</property>
                    <property name="nativeName">Version</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[SELECT distinct TD.testproc,TD.TestDesc,TD.TestDate,TD.frequnit,TD.testcenter,TD.instruments,TD.calibration ,s.SerialNo,p.Productname,p.version
FROM testdata TD inner join product_serial s on td.ProdSerial_id=S.Prodserial_id 
inner join product p on s.Product_id=p.Product_id   where TD.Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>Test_id</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
            <design:precision>11</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>NotNullable</design:nullability>
            <design:uiHints>
              <design:displayName>Test_id</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>Test_id</design:label>
            <design:formattingHints>
              <design:displaySize>11</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>TestName</design:name>
              <design:position>2</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
            <design:precision>50</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>TestName</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>TestName</design:label>
            <design:formattingHints>
              <design:displaySize>50</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>TestDesc</design:name>
              <design:position>3</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
            <design:precision>100</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>TestDesc</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>TestDesc</design:label>
            <design:formattingHints>
              <design:displaySize>100</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>ProdSerial_id</design:name>
              <design:position>4</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
            <design:precision>11</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>ProdSerial_id</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>ProdSerial_id</design:label>
            <design:formattingHints>
              <design:displaySize>11</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>TestDate</design:name>
              <design:position>5</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>93</design:nativeDataTypeCode>
            <design:precision>19</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>TestDate</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>TestDate</design:label>
            <design:formattingHints>
              <design:displaySize>19</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="3Db_BW_BMaxR" id="748">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">3Db_BW_BMax</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">3Db_BW_BMax</text-property>
                    <text-property name="heading">3Db_BW_BMax</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[SELECT round(3Db_BW_BMax,?) as 3Db_BW_BMax FROM rollcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="3dB90R" id="750">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">3Db_BW_90</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">3Db_BW_90</text-property>
                    <text-property name="heading">3Db_BW_90</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_90</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_90</property>
                    <property name="nativeName">3Db_BW_90</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[SELECT round(3Db_BW_90,?) as 3Db_BW_90 FROM rollcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BW_90</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BW_90</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BW_90</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="3dBR0" id="749">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">3Db_BW_0</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">3Db_BW_0</text-property>
                    <text-property name="heading">3Db_BW_0</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_0</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_0</property>
                    <property name="nativeName">3Db_BW_0</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[SELECT round(3Db_BW_0,?) as 3Db_BW_0 FROM rollcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BW_0</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BW_0</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BW_0</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="fqR" id="924">
            <list-property name="computedColumns">
                <structure>
                    <property name="name">Hide2</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">RUNNINGCOUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["frequency"]</expression>
                        </structure>
                    </list-property>
                </structure>
                <structure>
                    <property name="name">ff</property>
                    <expression name="expression">params["type"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">frequency</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">frequency</text-property>
                    <text-property name="heading">frequency</text-property>
                </structure>
                <structure>
                    <property name="columnName">frequnit</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">frequnit</text-property>
                    <text-property name="heading">frequnit</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">frequency</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">frequnit</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Hide2</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">ff</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">frequency</property>
                    <property name="nativeName">frequency</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">frequnit</property>
                    <property name="nativeName">frequnit</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[SELECT case t.frequnit when 'GHz' then frequency/1000 else frequency end frequency,t.frequnit FROM rollcalculated ar inner join testdata t on ar.test_id=t.test_id  where ar.Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>frequency</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>24</design:precision>
            <design:scale>14</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>frequency</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>frequency</design:label>
            <design:formattingHints>
              <design:displaySize>26</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>frequnit</design:name>
              <design:position>2</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
            <design:precision>5</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>frequnit</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>frequnit</design:label>
            <design:formattingHints>
              <design:displaySize>5</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="10Db_BW_BMaxR" id="2122">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">10Db_BW_BMax</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">10Db_BW_BMax</text-property>
                    <text-property name="heading">10Db_BW_BMax</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[SELECT round(10Db_BW_BMax,?) as 10Db_BW_BMax FROM rollcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="10dB90R" id="2123">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">10Db_BW_90</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">10Db_BW_90</text-property>
                    <text-property name="heading">10Db_BW_90</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">10Db_BW_90</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">10Db_BW_90</property>
                    <property name="nativeName">10Db_BW_90</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[SELECT round(10Db_BW_90,?) as 10Db_BW_90 FROM rollcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BW_90</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BW_90</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BW_90</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="10dBR0" id="2124">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">10Db_BW_0</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">10Db_BW_0</text-property>
                    <text-property name="heading">10Db_BW_0</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">10Db_BW_0</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">10Db_BW_0</property>
                    <property name="nativeName">10Db_BW_0</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[SELECT round(10Db_BW_0,?) as 10Db_BW_0 FROM rollcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BW_0</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BW_0</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BW_0</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="fqR10db" id="2125">
            <list-property name="computedColumns">
                <structure>
                    <property name="name">Hide2</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">RUNNINGCOUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["frequency"]</expression>
                        </structure>
                    </list-property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">frequency</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">frequency</text-property>
                    <text-property name="heading">frequency</text-property>
                </structure>
                <structure>
                    <property name="columnName">frequnit</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">frequnit</text-property>
                    <text-property name="heading">frequnit</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">frequency</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">frequnit</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Hide2</property>
                        <property name="dataType">integer</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">frequency</property>
                    <property name="nativeName">frequency</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">frequnit</property>
                    <property name="nativeName">frequnit</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[SELECT case t.frequnit when 'GHz' then frequency/1000 else frequency end frequency,t.frequnit FROM rollcalculated ar inner join testdata t on ar.test_id=t.test_id  where ar.Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>frequency</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>24</design:precision>
            <design:scale>14</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>frequency</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>frequency</design:label>
            <design:formattingHints>
              <design:displaySize>26</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>frequnit</design:name>
              <design:position>2</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
            <design:precision>5</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>frequnit</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>frequnit</design:label>
            <design:formattingHints>
              <design:displaySize>5</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid1" id="496">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq1</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid10" id="2462">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq10</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid2" id="2463">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq2</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid3" id="2464">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq3</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid4" id="2465">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq4</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid5" id="2466">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq5</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid6" id="2467">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq6</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid7" id="2468">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq7</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid8" id="2469">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq8</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid9" id="2470">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq9</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset" id="4883">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq1</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lgain</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX1", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN1", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset10" id="4882">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq10</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lgain</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX10", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN10", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset2" id="4884">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq2</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lgain</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX2", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN2", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset3" id="4875">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq3</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lgain</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX3", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN3", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset4" id="4876">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq4</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lgain</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX4", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN4", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset5" id="4877">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq5</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lgain</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX5", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN5", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset6" id="4878">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq6</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lgain</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX6", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN6", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset7" id="4879">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq7</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lgain</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX7", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN7", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset8" id="4880">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq8</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lgain</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX8", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN8", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset9" id="4881">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq9</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lgain</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX9", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN9", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
    </data-sets>
    <cubes>
        <tabular-cube name="Data CubeTestGrid" id="14">
            <property name="dimensions">
                <tabular-dimension name="Group1" id="18">
                    <property name="defaultHierarchy">NewTabularHierarchy1</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy1" id="19">
                            <property name="levels">
                                <tabular-level name="TestDesc" id="20">
                                    <property name="dataType">string</property>
                                    <property name="columnName">TestDesc</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group2" id="21">
                    <property name="isTimeType">false</property>
                    <property name="defaultHierarchy">NewTabularHierarchy3</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy3" id="22">
                            <property name="levels">
                                <tabular-level name="TestDate" id="23">
                                    <property name="dataType">date-time</property>
                                    <property name="columnName">TestDate</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group3" id="56">
                    <property name="defaultHierarchy">NewTabularHierarchy2</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy2" id="57">
                            <property name="levels">
                                <tabular-level name="frequnit" id="58">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequnit</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group4" id="59">
                    <property name="defaultHierarchy">NewTabularHierarchy4</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy4" id="60">
                            <property name="levels">
                                <tabular-level name="calibration" id="61">
                                    <property name="dataType">string</property>
                                    <property name="columnName">calibration</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group5" id="62">
                    <property name="defaultHierarchy">NewTabularHierarchy5</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy5" id="63">
                            <property name="levels">
                                <tabular-level name="instruments" id="64">
                                    <property name="dataType">string</property>
                                    <property name="columnName">instruments</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group6" id="65">
                    <property name="defaultHierarchy">NewTabularHierarchy6</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy6" id="66">
                            <property name="levels">
                                <tabular-level name="testcenter" id="67">
                                    <property name="dataType">string</property>
                                    <property name="columnName">testcenter</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group7" id="270">
                    <property name="defaultHierarchy">NewTabularHierarchy7</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy7" id="271">
                            <property name="levels">
                                <tabular-level name="Productname" id="272">
                                    <property name="dataType">string</property>
                                    <property name="columnName">Productname</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group8" id="273">
                    <property name="defaultHierarchy">NewTabularHierarchy8</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy8" id="274">
                            <property name="levels">
                                <tabular-level name="SerialNo" id="275">
                                    <property name="dataType">string</property>
                                    <property name="columnName">SerialNo</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group9" id="282">
                    <property name="defaultHierarchy">NewTabularHierarchy9</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy9" id="283">
                            <property name="levels">
                                <tabular-level name="version" id="284">
                                    <property name="dataType">string</property>
                                    <property name="columnName">Version</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group10" id="297">
                    <property name="defaultHierarchy">NewTabularHierarchy10</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy10" id="298">
                            <property name="levels">
                                <tabular-level name="Frequency" id="299">
                                    <property name="dataType">string</property>
                                    <property name="columnName">Frequency</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group11" id="755">
                    <property name="defaultHierarchy">NewTabularHierarchy11</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy11" id="756">
                            <property name="levels">
                                <tabular-level name="testproc" id="757">
                                    <property name="dataType">string</property>
                                    <property name="columnName">testproc</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group" id="1283">
                    <property name="defaultHierarchy">NewTabularHierarchy</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy" id="1284">
                            <property name="levels">
                                <tabular-level name="frequency2" id="1285">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequency2</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group12" id="1286">
                    <property name="defaultHierarchy">NewTabularHierarchy12</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy12" id="1287">
                            <property name="levels">
                                <tabular-level name="frequency3" id="1288">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequency3</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group13" id="1464">
                    <property name="defaultHierarchy">NewTabularHierarchy13</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy13" id="1465">
                            <property name="levels">
                                <tabular-level name="frequency4" id="1466">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequency4</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group14" id="1467">
                    <property name="defaultHierarchy">NewTabularHierarchy14</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy14" id="1468">
                            <property name="levels">
                                <tabular-level name="frequency5" id="1469">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequency5</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group15" id="1470">
                    <property name="defaultHierarchy">NewTabularHierarchy15</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy15" id="1471">
                            <property name="levels">
                                <tabular-level name="frequency6" id="1472">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequency6</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group16" id="1473">
                    <property name="defaultHierarchy">NewTabularHierarchy16</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy16" id="1474">
                            <property name="levels">
                                <tabular-level name="frequency7" id="1475">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequency7</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group17" id="1476">
                    <property name="defaultHierarchy">NewTabularHierarchy17</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy17" id="1477">
                            <property name="levels">
                                <tabular-level name="frequency8" id="1478">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequency8</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group18" id="1479">
                    <property name="defaultHierarchy">NewTabularHierarchy18</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy18" id="1480">
                            <property name="levels">
                                <tabular-level name="frequency9" id="1481">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequency9</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group19" id="1482">
                    <property name="defaultHierarchy">NewTabularHierarchy19</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy19" id="1483">
                            <property name="levels">
                                <tabular-level name="frequency10" id="1484">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequency10</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
            </property>
            <property name="dataSet">Data SetGrid</property>
        </tabular-cube>
    </cubes>
    <styles>
        <style name="report" id="4">
            <property name="fontFamily">sans-serif</property>
            <property name="fontSize">10pt</property>
        </style>
        <style name="NewStyle" id="1122">
            <property name="height">1cm</property>
        </style>
        <style name="borderstylegrid" id="1351">
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">thin</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">thin</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">thin</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">thin</property>
        </style>
        <style name="table-cell" id="1352">
            <property name="backgroundColor">#FFFFFF</property>
            <property name="borderBottomColor">#000000</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1px</property>
            <property name="borderLeftColor">#000000</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1px</property>
            <property name="borderRightColor">#000000</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1px</property>
            <property name="borderTopColor">#000000</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1px</property>
        </style>
        <style name="table" id="1353">
            <property name="backgroundColor">#FFFFFF</property>
            <property name="borderBottomColor">#000000</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1px</property>
            <property name="borderLeftColor">#000000</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1px</property>
            <property name="borderRightColor">#000000</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1px</property>
            <property name="borderTopColor">#000000</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1px</property>
        </style>
        <style name="BorderStyle" id="1354">
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">thin</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">thin</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">thin</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">thin</property>
        </style>
    </styles>
    <page-setup>
        <simple-master-page name="Simple MasterPage" id="2">
            <property name="leftMargin">0.2604166666666667in</property>
            <property name="rightMargin">0.22916666666666666in</property>
            <page-header>
                <text-data id="1126">
                    <property name="style">NewStyle</property>
                    <property name="fontFamily">sans-serif</property>
                    <property name="fontSize">12pt</property>
                    <property name="fontWeight">bold</property>
                    <property name="borderBottomStyle">none</property>
                    <property name="borderLeftStyle">none</property>
                    <property name="borderRightStyle">none</property>
                    <property name="borderTopStyle">none</property>
                    <property name="textAlign">center</property>
                    <expression name="valueExpr">params["rpth"].value</expression>
                    <property name="contentType">html</property>
                </text-data>
            </page-header>
            <page-footer>
                <grid id="1272">
                    <column id="1273">
                        <property name="width">1.9in</property>
                    </column>
                    <column id="1274">
                        <property name="width">4.3in</property>
                    </column>
                    <column id="4885">
                        <property name="width">1.9in</property>
                    </column>
                    <row id="1275">
                        <cell id="1276">
                            <text id="1278">
                                <property name="width">6cm</property>
                                <property name="contentType">html</property>
                                <text-property name="content"><![CDATA[<html>
<body>
<style>
.outer{
  text-align: center;
}
.outer img{
  display: inline-block;
}
</style>
<table>
<tr>
<td>
<div class="outer">

<img src="\img\Verdantlogo.png" height="50px" width="175px" align="baseline" name="myimage">

</div>
</td>
</tr>
</table>
</body>
</html>]]></text-property>
                            </text>
                        </cell>
                        <cell id="1277">
                            <property name="textAlign">center</property>
                            <text-data id="1279">
                                <property name="fontWeight">normal</property>
                                <expression name="valueExpr">params["rptf"].value</expression>
                                <property name="contentType">html</property>
                            </text-data>
                            <text-data id="4886">
                                <property name="textAlign">center</property>
                                <expression name="valueExpr">"Verdant Telemetry and Antenna Systems Pvt. Ltd., Cochin, India"</expression>
                                <property name="contentType">html</property>
                            </text-data>
                        </cell>
                        <cell id="4887"/>
                    </row>
                </grid>
            </page-footer>
        </simple-master-page>
    </page-setup>
    <body>
        <label id="1356">
            <property name="fontWeight">bold</property>
            <property name="textAlign">left</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">(params["3db"].value!='yes')</expression>
                </structure>
            </list-property>
            <text-property name="text">3dB beamwidth</text-property>
        </label>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="2661">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="2662">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="2663">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View20" id="2664">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2665">
                                            <property name="content">
                                                <data name="testproc2" id="2666">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2667">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View82" id="2668">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2669">
                                            <property name="content">
                                                <data name="TestDesc12" id="2670">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2671">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View92" id="2672">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2673">
                                            <property name="content">
                                                <data name="instruments12" id="2674">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2675">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View102" id="2676">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2677">
                                            <property name="content">
                                                <data name="calibration12" id="2678">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2679">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View112" id="2680">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2681">
                                            <property name="content">
                                                <data name="testcenter12" id="2682">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2683">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View122" id="2684">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2685">
                                            <property name="content">
                                                <data name="Productname2" id="2686">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2687">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View132" id="2688">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2689">
                                            <property name="content">
                                                <data name="version2" id="2690">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2691">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View142" id="2692">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2693">
                                            <property name="content">
                                                <data name="SerialNo2" id="2694">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="2699">
                    <property name="content">
                        <label id="2700">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2701">
                    <property name="content">
                        <label id="2702">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2703">
                    <property name="content">
                        <label id="2704">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2705">
                    <property name="content">
                        <label id="2706">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2707">
                    <property name="content">
                        <label id="2708">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2709">
                    <property name="content">
                        <label id="2710">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2711">
                    <property name="content">
                        <label id="2712">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2715">
                    <property name="content">
                        <label id="2716">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">auto</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["3db"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="335">
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">medium</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">medium</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">medium</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">medium</property>
            <property name="canShrink">true</property>
            <property name="dataSet">fqR</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">( (row["Hide2"]&lt;1) || (params["3dbDeg"].value!="0d90d") || (params["3db"].value!='yes'))</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Hide2</property>
                    <text-property name="displayName">Hide2</text-property>
                    <expression name="expression" type="javascript">dataSetRow["Hide2"]</expression>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <column id="336"/>
            <row id="337">
                <cell id="338">
                    <label id="341">
                        <property name="fontSize">medium</property>
                        <property name="fontWeight">bold</property>
                        <property name="textAlign">center</property>
                        <text-property name="text">3dB Beamwidth </text-property>
                    </label>
                </cell>
            </row>
            <row id="339">
                <cell id="340">
                    <grid id="532">
                        <column id="533">
                            <property name="style">BorderStyle</property>
                        </column>
                        <column id="534">
                            <property name="style">BorderStyle</property>
                        </column>
                        <column id="535">
                            <property name="style">BorderStyle</property>
                        </column>
                        <column id="536">
                            <property name="style">BorderStyle</property>
                        </column>
                        <row id="537">
                            <cell id="538">
                                <grid id="565">
                                    <expression name="bookmark" type="javascript">"BMHP"</expression>
                                    <column id="566"/>
                                    <row id="567">
                                        <cell id="568">
                                            <label id="581">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Spot Freq.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="569">
                                        <cell id="570">
                                            <table id="571">
                                                <property name="dataSet">fqR</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">frequency</property>
                                                        <text-property name="displayName">frequency</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["frequency"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">frequnit</property>
                                                        <text-property name="displayName">frequnit</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["frequnit"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">Hide2</property>
                                                        <expression name="expression" type="javascript">dataSetRow["Hide2"]</expression>
                                                        <property name="dataType">integer</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">ff</property>
                                                        <expression name="expression" type="javascript">dataSetRow["ff"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                </list-property>
                                                <column id="580"/>
                                                <header>
                                                    <row id="572">
                                                        <cell id="573">
                                                            <data id="634">
                                                                <property name="fontSize">small</property>
                                                                <property name="resultSetColumn">frequnit</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="575">
                                                        <cell id="576">
                                                            <data id="577">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">frequency</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="578">
                                                        <cell id="579"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="539">
                                <grid id="542">
                                    <column id="543"/>
                                    <row id="544">
                                        <cell id="545">
                                            <label id="564">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Beam Max.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="546">
                                        <cell id="547">
                                            <table id="548">
                                                <property name="dataSet">3Db_BW_BMaxR</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">3Db_BW_BMax</property>
                                                        <text-property name="displayName">3Db_BW_BMax</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="562"/>
                                                <header>
                                                    <row id="549">
                                                        <cell id="550">
                                                            <label id="551">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">3dB BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="554">
                                                        <cell id="555">
                                                            <data id="556">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">3Db_BW_BMax</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="559">
                                                        <cell id="560"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="540">
                                <grid id="584">
                                    <expression name="bookmark" type="javascript">"3db0hp"</expression>
                                    <column id="585"/>
                                    <row id="586">
                                        <cell id="587">
                                            <label id="607">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">0</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="588">
                                        <cell id="589">
                                            <table id="590">
                                                <property name="dataSet">3dBR0</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">3Db_BW_0</property>
                                                        <text-property name="displayName">3Db_BW_0</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["3Db_BW_0"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="604"/>
                                                <header>
                                                    <row id="591">
                                                        <cell id="592">
                                                            <label id="593">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">3dB BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="596">
                                                        <cell id="597">
                                                            <data id="598">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">3Db_BW_0</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="601">
                                                        <cell id="602"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="541">
                                <grid id="609">
                                    <expression name="bookmark" type="javascript">"3dbhp90"</expression>
                                    <column id="610"/>
                                    <row id="611">
                                        <cell id="612">
                                            <label id="631">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">90</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="613">
                                        <cell id="614">
                                            <table id="615">
                                                <property name="dataSet">3dB90R</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">3Db_BW_90</property>
                                                        <text-property name="displayName">3Db_BW_90</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["3Db_BW_90"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="629"/>
                                                <header>
                                                    <row id="616">
                                                        <cell id="617">
                                                            <label id="618">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">3dB BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="621">
                                                        <cell id="622">
                                                            <data id="623">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">3Db_BW_90</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="626">
                                                        <cell id="627"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                        </row>
                    </grid>
                </cell>
            </row>
        </grid>
        <grid id="940">
            <property name="style">BorderStyle</property>
            <property name="canShrink">true</property>
            <property name="dataSet">fqR</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">( (row["Hide2"]&lt;1) || ((params["3dbDeg"].value!="bm")  || (params["3db"].value!="yes")))</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Hide2</property>
                    <text-property name="displayName">Hide2</text-property>
                    <expression name="expression" type="javascript">dataSetRow["Hide2"]</expression>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <column id="941"/>
            <row id="942">
                <cell id="943">
                    <label id="986">
                        <property name="fontSize">medium</property>
                        <property name="fontWeight">bold</property>
                        <property name="textAlign">center</property>
                        <text-property name="text">3dB Beamwidth </text-property>
                    </label>
                </cell>
            </row>
            <row id="944">
                <cell id="945">
                    <grid id="946">
                        <column id="947">
                            <property name="style">BorderStyle</property>
                        </column>
                        <column id="948">
                            <property name="style">BorderStyle</property>
                        </column>
                        <row id="949">
                            <cell id="950">
                                <grid id="952">
                                    <expression name="bookmark" type="javascript">"BMHP"</expression>
                                    <column id="953"/>
                                    <row id="954">
                                        <cell id="955">
                                            <label id="956">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Spot Freq.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="957">
                                        <cell id="958">
                                            <table id="2601">
                                                <property name="dataSet">fqR</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">frequency</property>
                                                        <text-property name="displayName">frequency</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["frequency"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">frequnit</property>
                                                        <text-property name="displayName">frequnit</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["frequnit"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">Hide2</property>
                                                        <expression name="expression" type="javascript">dataSetRow["Hide2"]</expression>
                                                        <property name="dataType">integer</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">ff</property>
                                                        <expression name="expression" type="javascript">dataSetRow["ff"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                </list-property>
                                                <column id="2610"/>
                                                <header>
                                                    <row id="2602">
                                                        <cell id="2603">
                                                            <data id="2604">
                                                                <property name="fontSize">small</property>
                                                                <property name="resultSetColumn">frequnit</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="2605">
                                                        <cell id="2606">
                                                            <data id="2607">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">frequency</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="2608">
                                                        <cell id="2609"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="951">
                                <grid id="969">
                                    <column id="970"/>
                                    <row id="971">
                                        <cell id="972">
                                            <label id="973">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Beam Max.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="974">
                                        <cell id="975">
                                            <table id="2611">
                                                <property name="dataSet">3Db_BW_BMaxR</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">3Db_BW_BMax</property>
                                                        <text-property name="displayName">3Db_BW_BMax</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="2620"/>
                                                <header>
                                                    <row id="2612">
                                                        <cell id="2613">
                                                            <label id="2614">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">3dB BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="2615">
                                                        <cell id="2616">
                                                            <data id="2617">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">3Db_BW_BMax</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="2618">
                                                        <cell id="2619"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                        </row>
                    </grid>
                </cell>
            </row>
        </grid>
        <grid id="640">
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">medium</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">medium</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">medium</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">medium</property>
            <property name="canShrink">true</property>
            <property name="dataSet">fqR</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">( (row["Hide2"]&lt;1) || ((params["3dbDeg"].value=="0d90d") || (params["3dbDeg"].value=="bm") || (params["3db"].value!="yes")))</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Hide2</property>
                    <text-property name="displayName">Hide2</text-property>
                    <expression name="expression" type="javascript">dataSetRow["Hide2"]</expression>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <column id="641"/>
            <row id="642">
                <cell id="643">
                    <label id="644">
                        <property name="fontSize">medium</property>
                        <property name="fontWeight">bold</property>
                        <property name="textAlign">center</property>
                        <text-property name="text">3dB Beamwidth</text-property>
                    </label>
                </cell>
            </row>
            <row id="645">
                <cell id="646">
                    <grid id="647">
                        <column id="648">
                            <property name="style">BorderStyle</property>
                        </column>
                        <column id="650">
                            <property name="style">BorderStyle</property>
                        </column>
                        <column id="651">
                            <property name="style">BorderStyle</property>
                        </column>
                        <row id="652">
                            <cell id="653">
                                <grid id="654">
                                    <expression name="bookmark" type="javascript">"BMHP"</expression>
                                    <column id="655"/>
                                    <row id="656">
                                        <cell id="657">
                                            <label id="658">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Spot Freq.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="659">
                                        <cell id="660">
                                            <table id="2621">
                                                <property name="dataSet">fqR</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">frequency</property>
                                                        <text-property name="displayName">frequency</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["frequency"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">frequnit</property>
                                                        <text-property name="displayName">frequnit</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["frequnit"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">Hide2</property>
                                                        <expression name="expression" type="javascript">dataSetRow["Hide2"]</expression>
                                                        <property name="dataType">integer</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">ff</property>
                                                        <expression name="expression" type="javascript">dataSetRow["ff"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                </list-property>
                                                <column id="2630"/>
                                                <header>
                                                    <row id="2622">
                                                        <cell id="2623">
                                                            <data id="2624">
                                                                <property name="fontSize">small</property>
                                                                <property name="resultSetColumn">frequnit</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="2625">
                                                        <cell id="2626">
                                                            <data id="2627">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">frequency</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="2628">
                                                        <cell id="2629"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="695">
                                <property name="colSpan">2</property>
                                <property name="rowSpan">1</property>
                                <grid id="696">
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">params["3dbDeg"].value=="90d"</expression>
                                        </structure>
                                    </list-property>
                                    <expression name="bookmark" type="javascript">"3db0hp"</expression>
                                    <column id="697"/>
                                    <row id="698">
                                        <cell id="699">
                                            <label id="700">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">0</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="701">
                                        <cell id="702">
                                            <table id="2641">
                                                <property name="dataSet">3dBR0</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">3Db_BW_0</property>
                                                        <text-property name="displayName">3Db_BW_0</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["3Db_BW_0"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="2650"/>
                                                <header>
                                                    <row id="2642">
                                                        <cell id="2643">
                                                            <label id="2644">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">3dB BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="2645">
                                                        <cell id="2646">
                                                            <data id="2647">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">3Db_BW_0</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="2648">
                                                        <cell id="2649"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                                <grid id="720">
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">params["3dbDeg"].value=="0d"</expression>
                                        </structure>
                                    </list-property>
                                    <expression name="bookmark" type="javascript">"3dbhp90"</expression>
                                    <column id="721"/>
                                    <row id="722">
                                        <cell id="723">
                                            <label id="724">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">90</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="725">
                                        <cell id="726">
                                            <table id="2651">
                                                <property name="dataSet">3dB90R</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">3Db_BW_90</property>
                                                        <text-property name="displayName">3Db_BW_90</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["3Db_BW_90"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="2660"/>
                                                <header>
                                                    <row id="2652">
                                                        <cell id="2653">
                                                            <label id="2654">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">3dB BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="2655">
                                                        <cell id="2656">
                                                            <data id="2657">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">3Db_BW_90</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="2658">
                                                        <cell id="2659"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                        </row>
                    </grid>
                </cell>
            </row>
        </grid>
        <label id="1388">
            <property name="fontWeight">bold</property>
            <property name="pageBreakBefore">always</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["10db"].value!='yes'</expression>
                </structure>
            </list-property>
            <text-property name="text">10dB beamwidth</text-property>
        </label>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="2717">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="2718">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="2719">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View201" id="2720">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2721">
                                            <property name="content">
                                                <data name="testproc21" id="2722">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2723">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View821" id="2724">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2725">
                                            <property name="content">
                                                <data name="TestDesc121" id="2726">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2727">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View921" id="2728">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2729">
                                            <property name="content">
                                                <data name="instruments121" id="2730">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2731">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1021" id="2732">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2733">
                                            <property name="content">
                                                <data name="calibration121" id="2734">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2735">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1121" id="2736">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2737">
                                            <property name="content">
                                                <data name="testcenter121" id="2738">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2739">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1221" id="2740">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2741">
                                            <property name="content">
                                                <data name="Productname21" id="2742">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2743">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1321" id="2744">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2745">
                                            <property name="content">
                                                <data name="version21" id="2746">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2747">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1421" id="2748">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2749">
                                            <property name="content">
                                                <data name="SerialNo21" id="2750">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="2751">
                    <property name="content">
                        <label id="2752">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2753">
                    <property name="content">
                        <label id="2754">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2755">
                    <property name="content">
                        <label id="2756">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2757">
                    <property name="content">
                        <label id="2758">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2759">
                    <property name="content">
                        <label id="2760">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2761">
                    <property name="content">
                        <label id="2762">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2763">
                    <property name="content">
                        <label id="2764">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2765">
                    <property name="content">
                        <label id="2766">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">auto</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["10db"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2271">
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">medium</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">medium</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">medium</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">medium</property>
            <property name="canShrink">true</property>
            <property name="dataSet">fqR10db</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">( (row["Hide2"]&lt;1) || ((params["10dbDeg"].value=="0d90d") || (params["10dbDeg"].value=="bm") || (params["10db"].value!="yes")))</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Hide2</property>
                    <text-property name="displayName">Hide2</text-property>
                    <expression name="expression" type="javascript">dataSetRow["Hide2"]</expression>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <column id="2272"/>
            <row id="2273">
                <cell id="2274">
                    <label id="2275">
                        <property name="fontSize">medium</property>
                        <property name="fontWeight">bold</property>
                        <property name="textAlign">center</property>
                        <text-property name="text">10dB Beamwidth</text-property>
                    </label>
                </cell>
            </row>
            <row id="2276">
                <cell id="2277">
                    <grid id="2278">
                        <column id="2279">
                            <property name="style">BorderStyle</property>
                        </column>
                        <column id="2281">
                            <property name="style">BorderStyle</property>
                        </column>
                        <column id="2282">
                            <property name="style">BorderStyle</property>
                        </column>
                        <row id="2283">
                            <cell id="2284">
                                <grid id="2285">
                                    <expression name="bookmark" type="javascript">"BMHP"</expression>
                                    <column id="2286"/>
                                    <row id="2287">
                                        <cell id="2288">
                                            <label id="2289">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Spot Freq.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="2290">
                                        <cell id="2291">
                                            <table id="2355">
                                                <property name="dataSet">fqR10db</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">frequency</property>
                                                        <text-property name="displayName">frequency</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["frequency"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">frequnit</property>
                                                        <text-property name="displayName">frequnit</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["frequnit"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">Hide2</property>
                                                        <expression name="expression" type="javascript">dataSetRow["Hide2"]</expression>
                                                        <property name="dataType">integer</property>
                                                    </structure>
                                                </list-property>
                                                <column id="2364"/>
                                                <header>
                                                    <row id="2356">
                                                        <cell id="2357">
                                                            <data id="2358">
                                                                <property name="fontSize">small</property>
                                                                <property name="resultSetColumn">frequnit</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="2359">
                                                        <cell id="2360">
                                                            <data id="2361">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">frequency</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="2362">
                                                        <cell id="2363"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="2320">
                                <property name="colSpan">2</property>
                                <property name="rowSpan">1</property>
                                <grid id="2321">
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">params["10dbDeg"].value=="90d"</expression>
                                        </structure>
                                    </list-property>
                                    <expression name="bookmark" type="javascript">"3db0hp"</expression>
                                    <column id="2322"/>
                                    <row id="2323">
                                        <cell id="2324">
                                            <label id="2325">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">0</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="2326">
                                        <cell id="2327">
                                            <table id="2375">
                                                <property name="dataSet">10dBR0</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">10Db_BW_0</property>
                                                        <text-property name="displayName">10Db_BW_0</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BW_0"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="2384"/>
                                                <header>
                                                    <row id="2376">
                                                        <cell id="2377">
                                                            <label id="2378">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">10dB BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="2379">
                                                        <cell id="2380">
                                                            <data id="2381">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">10Db_BW_0</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="2382">
                                                        <cell id="2383"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                                <grid id="2338">
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">params["10dbDeg"].value=="0d"</expression>
                                        </structure>
                                    </list-property>
                                    <expression name="bookmark" type="javascript">"3dbhp90"</expression>
                                    <column id="2339"/>
                                    <row id="2340">
                                        <cell id="2341">
                                            <label id="2342">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">90</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="2343">
                                        <cell id="2344">
                                            <table id="2385">
                                                <property name="dataSet">10dB90R</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">10Db_BW_90</property>
                                                        <text-property name="displayName">10Db_BW_90</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BW_90"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="2394"/>
                                                <header>
                                                    <row id="2386">
                                                        <cell id="2387">
                                                            <label id="2388">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">10dB BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="2389">
                                                        <cell id="2390">
                                                            <data id="2391">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">10Db_BW_90</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="2392">
                                                        <cell id="2393"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                        </row>
                    </grid>
                </cell>
            </row>
        </grid>
        <grid id="2395">
            <property name="style">BorderStyle</property>
            <property name="canShrink">true</property>
            <property name="dataSet">fqR10db</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">( (row["Hide2"]&lt;1) || ((params["10dbDeg"].value!="bm")  || (params["10db"].value!="yes")))</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Hide2</property>
                    <text-property name="displayName">Hide2</text-property>
                    <expression name="expression" type="javascript">dataSetRow["Hide2"]</expression>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <column id="2396"/>
            <row id="2397">
                <cell id="2398">
                    <label id="2399">
                        <property name="fontSize">medium</property>
                        <property name="fontWeight">bold</property>
                        <property name="textAlign">center</property>
                        <text-property name="text">10dB Beamwidth </text-property>
                    </label>
                </cell>
            </row>
            <row id="2400">
                <cell id="2401">
                    <grid id="2402">
                        <column id="2403">
                            <property name="style">BorderStyle</property>
                        </column>
                        <column id="2404">
                            <property name="style">BorderStyle</property>
                        </column>
                        <row id="2405">
                            <cell id="2406">
                                <grid id="2407">
                                    <expression name="bookmark" type="javascript">"BMHP"</expression>
                                    <column id="2408"/>
                                    <row id="2409">
                                        <cell id="2410">
                                            <label id="2411">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Spot Freq.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="2412">
                                        <cell id="2413">
                                            <table id="2442">
                                                <property name="dataSet">fqR10db</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">frequency</property>
                                                        <text-property name="displayName">frequency</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["frequency"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">frequnit</property>
                                                        <text-property name="displayName">frequnit</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["frequnit"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">Hide2</property>
                                                        <expression name="expression" type="javascript">dataSetRow["Hide2"]</expression>
                                                        <property name="dataType">integer</property>
                                                    </structure>
                                                </list-property>
                                                <column id="2451"/>
                                                <header>
                                                    <row id="2443">
                                                        <cell id="2444">
                                                            <data id="2445">
                                                                <property name="fontSize">small</property>
                                                                <property name="resultSetColumn">frequnit</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="2446">
                                                        <cell id="2447">
                                                            <data id="2448">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">frequency</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="2449">
                                                        <cell id="2450"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="2424">
                                <grid id="2425">
                                    <column id="2426"/>
                                    <row id="2427">
                                        <cell id="2428">
                                            <label id="2429">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Beam Max.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="2430">
                                        <cell id="2431">
                                            <table id="2452">
                                                <property name="dataSet">10Db_BW_BMaxR</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">10Db_BW_BMax</property>
                                                        <text-property name="displayName">10Db_BW_BMax</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="2461"/>
                                                <header>
                                                    <row id="2453">
                                                        <cell id="2454">
                                                            <label id="2455">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">10dB BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="2456">
                                                        <cell id="2457">
                                                            <data id="2458">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">10Db_BW_BMax</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="2459">
                                                        <cell id="2460"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                        </row>
                    </grid>
                </cell>
            </row>
        </grid>
        <grid id="2186">
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">medium</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">medium</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">medium</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">medium</property>
            <property name="canShrink">true</property>
            <property name="dataSet">fqR10db</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">( (row["Hide2"]&lt;1) || (params["10dbDeg"].value!="0d90d") || (params["10db"].value!='yes'))</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Hide2</property>
                    <text-property name="displayName">Hide2</text-property>
                    <expression name="expression" type="javascript">dataSetRow["Hide2"]</expression>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <column id="2187"/>
            <row id="2188">
                <cell id="2189">
                    <label id="2190">
                        <property name="fontSize">medium</property>
                        <property name="fontWeight">bold</property>
                        <property name="textAlign">center</property>
                        <text-property name="text">10dB Beamwidth </text-property>
                    </label>
                </cell>
            </row>
            <row id="2191">
                <cell id="2192">
                    <grid id="2193">
                        <column id="2194">
                            <property name="style">BorderStyle</property>
                        </column>
                        <column id="2195">
                            <property name="style">BorderStyle</property>
                        </column>
                        <column id="2196">
                            <property name="style">BorderStyle</property>
                        </column>
                        <column id="2197">
                            <property name="style">BorderStyle</property>
                        </column>
                        <row id="2198">
                            <cell id="2199">
                                <grid id="2200">
                                    <expression name="bookmark" type="javascript">"BMHP"</expression>
                                    <column id="2201"/>
                                    <row id="2202">
                                        <cell id="2203">
                                            <label id="2204">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Spot Freq.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="2205">
                                        <cell id="2206">
                                            <table id="2207">
                                                <property name="dataSet">fqR10db</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">frequency</property>
                                                        <text-property name="displayName">frequency</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["frequency"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">frequnit</property>
                                                        <text-property name="displayName">frequnit</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["frequnit"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">Hide2</property>
                                                        <expression name="expression" type="javascript">dataSetRow["Hide2"]</expression>
                                                        <property name="dataType">integer</property>
                                                    </structure>
                                                </list-property>
                                                <column id="2216"/>
                                                <header>
                                                    <row id="2208">
                                                        <cell id="2209">
                                                            <data id="2210">
                                                                <property name="fontSize">small</property>
                                                                <property name="resultSetColumn">frequnit</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="2211">
                                                        <cell id="2212">
                                                            <data id="2213">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">frequency</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="2214">
                                                        <cell id="2215"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="2217">
                                <grid id="2218">
                                    <column id="2219"/>
                                    <row id="2220">
                                        <cell id="2221">
                                            <label id="2222">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Beam Max.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="2223">
                                        <cell id="2224">
                                            <table id="2225">
                                                <property name="dataSet">10Db_BW_BMaxR</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">10Db_BW_BMax</property>
                                                        <text-property name="displayName">10Db_BW_BMax</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="2234"/>
                                                <header>
                                                    <row id="2226">
                                                        <cell id="2227">
                                                            <label id="2228">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">10dB BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="2229">
                                                        <cell id="2230">
                                                            <data id="2231">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">10Db_BW_BMax</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="2232">
                                                        <cell id="2233"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="2235">
                                <grid id="2236">
                                    <expression name="bookmark" type="javascript">"3db0hp"</expression>
                                    <column id="2237"/>
                                    <row id="2238">
                                        <cell id="2239">
                                            <label id="2240">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">0</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="2241">
                                        <cell id="2242">
                                            <table id="2243">
                                                <property name="dataSet">10dBR0</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">10Db_BW_0</property>
                                                        <text-property name="displayName">10Db_BW_0</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BW_0"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="2252"/>
                                                <header>
                                                    <row id="2244">
                                                        <cell id="2245">
                                                            <label id="2246">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">10dB BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="2247">
                                                        <cell id="2248">
                                                            <data id="2249">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">10Db_BW_0</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="2250">
                                                        <cell id="2251"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="2253">
                                <grid id="2254">
                                    <expression name="bookmark" type="javascript">"3dbhp90"</expression>
                                    <column id="2255"/>
                                    <row id="2256">
                                        <cell id="2257">
                                            <label id="2258">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">90</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="2259">
                                        <cell id="2260">
                                            <table id="2261">
                                                <property name="dataSet">10dB90R</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">10Db_BW_90</property>
                                                        <text-property name="displayName">10Db_BW_90</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BW_90"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="2270"/>
                                                <header>
                                                    <row id="2262">
                                                        <cell id="2263">
                                                            <label id="2264">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">10dB BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="2265">
                                                        <cell id="2266">
                                                            <data id="2267">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">10Db_BW_90</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="2268">
                                                        <cell id="2269"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                        </row>
                    </grid>
                </cell>
            </row>
        </grid>
        <label id="1456">
            <property name="fontWeight">bold</property>
            <property name="pageBreakBefore">always</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <text-property name="text">Polar Plot</text-property>
        </label>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="232">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="240">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="758">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View" id="759">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="760">
                                            <property name="content">
                                                <data name="testproc" id="762">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="246">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View8" id="247">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="248">
                                            <property name="content">
                                                <data name="TestDesc1" id="250">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="252">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View9" id="253">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="254">
                                            <property name="content">
                                                <data name="instruments1" id="256">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="258">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View10" id="259">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="260">
                                            <property name="content">
                                                <data name="calibration1" id="262">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="264">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View11" id="265">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="266">
                                            <property name="content">
                                                <data name="testcenter1" id="268">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="276">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View12" id="277">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="278">
                                            <property name="content">
                                                <data name="Productname" id="280">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="285">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View13" id="286">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="287">
                                            <property name="content">
                                                <data name="version" id="289">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="291">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View14" id="292">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="293">
                                            <property name="content">
                                                <data name="SerialNo" id="295">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="300">
                            <property name="dimension">Group10</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View15" id="301">
                                    <property name="level">Group10/Frequency</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="302">
                                            <property name="content">
                                                <data name="Frequency" id="304">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Frequency</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                            <property name="width">357px</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="761">
                    <property name="content">
                        <label id="763">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="249">
                    <property name="content">
                        <label id="251">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="255">
                    <property name="content">
                        <label id="257">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="261">
                    <property name="content">
                        <label id="263">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="267">
                    <property name="content">
                        <label id="269">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="279">
                    <property name="content">
                        <label id="281">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="288">
                    <property name="content">
                        <label id="290">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="294">
                    <property name="content">
                        <label id="296">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="303">
                    <property name="content">
                        <label id="305">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">auto</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq1"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression">dimension["Group10"]["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="9">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGROLL.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX1&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN1&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq1"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2471">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq1"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2472"/>
            <row id="2473">
                <cell id="2474">
                    <table id="2475">
                        <property name="dataSet">PolarGrid1</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">3Db_BW_BMax</property>
                                <text-property name="displayName">3Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BW_BMax</property>
                                <text-property name="displayName">10Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2489"/>
                        <column id="2490"/>
                        <header>
                            <row id="2476">
                                <cell id="2477">
                                    <label id="2478">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                                <cell id="2479">
                                    <label id="2480">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2481">
                                <cell id="2482">
                                    <data id="2483">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="2484">
                                    <data id="2485">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2486">
                                <cell id="2487"/>
                                <cell id="2488"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1494">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1495">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1496">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1" id="1497">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1498">
                                            <property name="content">
                                                <data name="testproc1" id="1499">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1500">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View81" id="1501">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1502">
                                            <property name="content">
                                                <data name="TestDesc11" id="1503">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1504">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View91" id="1505">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1506">
                                            <property name="content">
                                                <data name="instruments11" id="1507">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1508">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View101" id="1509">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1510">
                                            <property name="content">
                                                <data name="calibration11" id="1511">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1512">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View111" id="1513">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1514">
                                            <property name="content">
                                                <data name="testcenter11" id="1515">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1516">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View121" id="1517">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1518">
                                            <property name="content">
                                                <data name="Productname1" id="1519">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1520">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View131" id="1521">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1522">
                                            <property name="content">
                                                <data name="version1" id="1523">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1524">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View141" id="1525">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1526">
                                            <property name="content">
                                                <data name="SerialNo1" id="1527">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1551">
                            <property name="dimension">Group</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View2" id="1552">
                                    <property name="level">Group/frequency2</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1553">
                                            <property name="content">
                                                <data name="frequency2" id="1555">
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frequency2</property>
                                                </data>
                                            </property>
                                            <property name="style">BorderStyle</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1532">
                    <property name="content">
                        <label id="1533">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1534">
                    <property name="content">
                        <label id="1535">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1536">
                    <property name="content">
                        <label id="1537">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1538">
                    <property name="content">
                        <label id="1539">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1540">
                    <property name="content">
                        <label id="1541">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1542">
                    <property name="content">
                        <label id="1543">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1544">
                    <property name="content">
                        <label id="1545">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1548">
                    <property name="content">
                        <label id="1549">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1554">
                    <property name="content">
                        <label id="1556">
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq2"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency2</property>
                    <expression name="expression">dimension["Group"]["frequency2"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="1550">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGROLL.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX2&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN2&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset2</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq2"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2491">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq2"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2492"/>
            <row id="2493">
                <cell id="2126">
                    <table id="2127">
                        <property name="dataSet">PolarGrid2</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">3Db_BW_BMax</property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">3Db_BS_BMax</property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BW_BMax</property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BS_BMax</property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">BackLobe</property>
                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">CPGain</property>
                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">AR_0</property>
                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">OmniDeviation</property>
                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2141"/>
                        <column id="2142"/>
                        <header>
                            <row id="2128">
                                <cell id="2129">
                                    <label id="2130">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                                <cell id="2131">
                                    <label id="2132">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2133">
                                <cell id="2134">
                                    <data id="2135">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="2136">
                                    <data id="2137">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2138">
                                <cell id="2139"/>
                                <cell id="2140"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1557">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1558">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1559">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View16" id="1560">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1561">
                                            <property name="content">
                                                <data name="testproc11" id="1562">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1563">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View811" id="1564">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1565">
                                            <property name="content">
                                                <data name="TestDesc111" id="1566">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1567">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View911" id="1568">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1569">
                                            <property name="content">
                                                <data name="instruments111" id="1570">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1571">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1011" id="1572">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1573">
                                            <property name="content">
                                                <data name="calibration111" id="1574">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1575">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1111" id="1576">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1577">
                                            <property name="content">
                                                <data name="testcenter111" id="1578">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1579">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1211" id="1580">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1581">
                                            <property name="content">
                                                <data name="Productname11" id="1582">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1583">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1311" id="1584">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1585">
                                            <property name="content">
                                                <data name="version11" id="1586">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1587">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1411" id="1588">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1589">
                                            <property name="content">
                                                <data name="SerialNo11" id="1590">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1614">
                            <property name="dimension">Group12</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View3" id="1615">
                                    <property name="level">Group12/frequency3</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1616">
                                            <property name="content">
                                                <data name="frequency3" id="1618">
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frequency3</property>
                                                </data>
                                            </property>
                                            <property name="style">BorderStyle</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1595">
                    <property name="content">
                        <label id="1596">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1597">
                    <property name="content">
                        <label id="1598">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1599">
                    <property name="content">
                        <label id="1600">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1601">
                    <property name="content">
                        <label id="1602">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1603">
                    <property name="content">
                        <label id="1604">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1605">
                    <property name="content">
                        <label id="1606">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1607">
                    <property name="content">
                        <label id="1608">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1611">
                    <property name="content">
                        <label id="1612">
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1617">
                    <property name="content">
                        <label id="1619">
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq3"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency3</property>
                    <expression name="expression">dimension["Group12"]["frequency3"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="1613">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGROLL.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX3&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN3&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset3</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq3"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2143">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq3"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2144"/>
            <row id="2145">
                <cell id="2146">
                    <table id="2147">
                        <property name="dataSet">PolarGrid3</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">3Db_BW_BMax</property>
                                <text-property name="displayName">3Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BW_BMax</property>
                                <text-property name="displayName">10Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">3Db_BS_BMax</property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BS_BMax</property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">BackLobe</property>
                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">CPGain</property>
                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">AR_0</property>
                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">OmniDeviation</property>
                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2161"/>
                        <column id="2162"/>
                        <header>
                            <row id="2148">
                                <cell id="2149">
                                    <label id="2150">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                                <cell id="2151">
                                    <label id="2152">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2153">
                                <cell id="2154">
                                    <data id="2155">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="2156">
                                    <data id="2157">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2158">
                                <cell id="2159"/>
                                <cell id="2160"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1620">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1621">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1622">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View161" id="1623">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1624">
                                            <property name="content">
                                                <data name="testproc111" id="1625">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1626">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View8111" id="1627">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1628">
                                            <property name="content">
                                                <data name="TestDesc1111" id="1629">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1630">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View9111" id="1631">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1632">
                                            <property name="content">
                                                <data name="instruments1111" id="1633">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1634">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View10111" id="1635">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1636">
                                            <property name="content">
                                                <data name="calibration1111" id="1637">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1638">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View11111" id="1639">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1640">
                                            <property name="content">
                                                <data name="testcenter1111" id="1641">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1642">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View12111" id="1643">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1644">
                                            <property name="content">
                                                <data name="Productname111" id="1645">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1646">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View13111" id="1647">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1648">
                                            <property name="content">
                                                <data name="version111" id="1649">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1650">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View14111" id="1651">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1652">
                                            <property name="content">
                                                <data name="SerialNo111" id="1653">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1677">
                            <property name="dimension">Group13</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View4" id="1678">
                                    <property name="level">Group13/frequency4</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1679">
                                            <property name="content">
                                                <data name="frequency4" id="1681">
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frequency4</property>
                                                </data>
                                            </property>
                                            <property name="style">BorderStyle</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1658">
                    <property name="content">
                        <label id="1659">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1660">
                    <property name="content">
                        <label id="1661">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1662">
                    <property name="content">
                        <label id="1663">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1664">
                    <property name="content">
                        <label id="1665">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1666">
                    <property name="content">
                        <label id="1667">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1668">
                    <property name="content">
                        <label id="1669">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1670">
                    <property name="content">
                        <label id="1671">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1674">
                    <property name="content">
                        <label id="1675">
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1680">
                    <property name="content">
                        <label id="1682">
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq4"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency4</property>
                    <expression name="expression">dimension["Group13"]["frequency4"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="1676">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGROLL.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX4&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN4&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset4</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq4"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2163">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq4"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2164"/>
            <row id="2165">
                <cell id="2166">
                    <table id="2167">
                        <property name="dataSet">PolarGrid4</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">3Db_BW_BMax</property>
                                <text-property name="displayName">3Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BW_BMax</property>
                                <text-property name="displayName">10Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">3Db_BS_BMax</property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BS_BMax</property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">BackLobe</property>
                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">CPGain</property>
                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">AR_0</property>
                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">OmniDeviation</property>
                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2181"/>
                        <column id="2182"/>
                        <header>
                            <row id="2168">
                                <cell id="2169">
                                    <label id="2170">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                                <cell id="2171">
                                    <label id="2172">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2173">
                                <cell id="2174">
                                    <data id="2175">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="2176">
                                    <data id="2177">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2178">
                                <cell id="2179"/>
                                <cell id="2180"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1683">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1684">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1685">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1611" id="1686">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1687">
                                            <property name="content">
                                                <data name="testproc1111" id="1688">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1689">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View81111" id="1690">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1691">
                                            <property name="content">
                                                <data name="TestDesc11111" id="1692">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1693">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View91111" id="1694">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1695">
                                            <property name="content">
                                                <data name="instruments11111" id="1696">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1697">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View101111" id="1698">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1699">
                                            <property name="content">
                                                <data name="calibration11111" id="1700">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1701">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View111111" id="1702">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1703">
                                            <property name="content">
                                                <data name="testcenter11111" id="1704">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1705">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View121111" id="1706">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1707">
                                            <property name="content">
                                                <data name="Productname1111" id="1708">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1709">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View131111" id="1710">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1711">
                                            <property name="content">
                                                <data name="version1111" id="1712">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1713">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View141111" id="1714">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1715">
                                            <property name="content">
                                                <data name="SerialNo1111" id="1716">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1740">
                            <property name="dimension">Group14</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View5" id="1741">
                                    <property name="level">Group14/frequency5</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1742">
                                            <property name="content">
                                                <data name="frequency5" id="1744">
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frequency5</property>
                                                </data>
                                            </property>
                                            <property name="style">BorderStyle</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1721">
                    <property name="content">
                        <label id="1722">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1723">
                    <property name="content">
                        <label id="1724">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1725">
                    <property name="content">
                        <label id="1726">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1727">
                    <property name="content">
                        <label id="1728">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1729">
                    <property name="content">
                        <label id="1730">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1731">
                    <property name="content">
                        <label id="1732">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1733">
                    <property name="content">
                        <label id="1734">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1737">
                    <property name="content">
                        <label id="1738">
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1743">
                    <property name="content">
                        <label id="1745">
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq5"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency5</property>
                    <expression name="expression">dimension["Group14"]["frequency5"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="1739">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGROLL.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX5&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN5&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset5</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq5"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2183">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq5"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2184"/>
            <row id="2185">
                <cell id="2494">
                    <table id="2495">
                        <property name="dataSet">PolarGrid5</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">3Db_BW_BMax</property>
                                <text-property name="displayName">3Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BW_BMax</property>
                                <text-property name="displayName">10Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">3Db_BS_BMax</property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BS_BMax</property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">BackLobe</property>
                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">CPGain</property>
                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">AR_0</property>
                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">OmniDeviation</property>
                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2509"/>
                        <column id="2510"/>
                        <header>
                            <row id="2496">
                                <cell id="2497">
                                    <label id="2498">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                                <cell id="2499">
                                    <label id="2500">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2501">
                                <cell id="2502">
                                    <data id="2503">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="2504">
                                    <data id="2505">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2506">
                                <cell id="2507"/>
                                <cell id="2508"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1746">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1747">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1748">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View16111" id="1749">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1750">
                                            <property name="content">
                                                <data name="testproc11111" id="1751">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1752">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View811111" id="1753">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1754">
                                            <property name="content">
                                                <data name="TestDesc111111" id="1755">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1756">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View911111" id="1757">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1758">
                                            <property name="content">
                                                <data name="instruments111111" id="1759">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1760">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1011111" id="1761">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1762">
                                            <property name="content">
                                                <data name="calibration111111" id="1763">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1764">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1111111" id="1765">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1766">
                                            <property name="content">
                                                <data name="testcenter111111" id="1767">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1768">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1211111" id="1769">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1770">
                                            <property name="content">
                                                <data name="Productname11111" id="1771">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1772">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1311111" id="1773">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1774">
                                            <property name="content">
                                                <data name="version11111" id="1775">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1776">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1411111" id="1777">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1778">
                                            <property name="content">
                                                <data name="SerialNo11111" id="1779">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1803">
                            <property name="dimension">Group15</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View6" id="1804">
                                    <property name="level">Group15/frequency6</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1805">
                                            <property name="content">
                                                <data name="frequency6" id="1807">
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frequency6</property>
                                                </data>
                                            </property>
                                            <property name="style">BorderStyle</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1784">
                    <property name="content">
                        <label id="1785">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1786">
                    <property name="content">
                        <label id="1787">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1788">
                    <property name="content">
                        <label id="1789">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1790">
                    <property name="content">
                        <label id="1791">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1792">
                    <property name="content">
                        <label id="1793">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1794">
                    <property name="content">
                        <label id="1795">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1796">
                    <property name="content">
                        <label id="1797">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1800">
                    <property name="content">
                        <label id="1801">
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1806">
                    <property name="content">
                        <label id="1808">
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq6"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency6</property>
                    <expression name="expression">dimension["Group15"]["frequency6"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="1802">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGROLL.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX6&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN6&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset6</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq6"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2511">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq6"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2512"/>
            <row id="2513">
                <cell id="2514">
                    <table id="2515">
                        <property name="dataSet">PolarGrid6</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">3Db_BW_BMax</property>
                                <text-property name="displayName">3Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BW_BMax</property>
                                <text-property name="displayName">10Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">3Db_BS_BMax</property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BS_BMax</property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">BackLobe</property>
                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">CPGain</property>
                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">AR_0</property>
                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">OmniDeviation</property>
                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2529"/>
                        <column id="2530"/>
                        <header>
                            <row id="2516">
                                <cell id="2517">
                                    <label id="2518">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                                <cell id="2519">
                                    <label id="2520">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2521">
                                <cell id="2522">
                                    <data id="2523">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="2524">
                                    <data id="2525">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2526">
                                <cell id="2527"/>
                                <cell id="2528"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1809">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1810">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1811">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View161111" id="1812">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1813">
                                            <property name="content">
                                                <data name="testproc111111" id="1814">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1815">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View8111111" id="1816">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1817">
                                            <property name="content">
                                                <data name="TestDesc1111111" id="1818">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1819">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View9111111" id="1820">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1821">
                                            <property name="content">
                                                <data name="instruments1111111" id="1822">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1823">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View10111111" id="1824">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1825">
                                            <property name="content">
                                                <data name="calibration1111111" id="1826">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1827">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View11111111" id="1828">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1829">
                                            <property name="content">
                                                <data name="testcenter1111111" id="1830">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1831">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View12111111" id="1832">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1833">
                                            <property name="content">
                                                <data name="Productname111111" id="1834">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1835">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View13111111" id="1836">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1837">
                                            <property name="content">
                                                <data name="version111111" id="1838">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1839">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View14111111" id="1840">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1841">
                                            <property name="content">
                                                <data name="SerialNo111111" id="1842">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1866">
                            <property name="dimension">Group16</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View7" id="1867">
                                    <property name="level">Group16/frequency7</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1868">
                                            <property name="content">
                                                <data name="frequency7" id="1870">
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frequency7</property>
                                                </data>
                                            </property>
                                            <property name="style">BorderStyle</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1847">
                    <property name="content">
                        <label id="1848">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1849">
                    <property name="content">
                        <label id="1850">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1851">
                    <property name="content">
                        <label id="1852">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1853">
                    <property name="content">
                        <label id="1854">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1855">
                    <property name="content">
                        <label id="1856">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1857">
                    <property name="content">
                        <label id="1858">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1859">
                    <property name="content">
                        <label id="1860">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1863">
                    <property name="content">
                        <label id="1864">
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1869">
                    <property name="content">
                        <label id="1871">
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq7"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency7</property>
                    <expression name="expression">dimension["Group16"]["frequency7"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="1865">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGROLL.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX7&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN7&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset7</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq7"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2531">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq7"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2532"/>
            <row id="2533">
                <cell id="2534">
                    <table id="2535">
                        <property name="dataSet">PolarGrid7</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">3Db_BW_BMax</property>
                                <text-property name="displayName">3Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BW_BMax</property>
                                <text-property name="displayName">10Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2549"/>
                        <column id="2550"/>
                        <header>
                            <row id="2536">
                                <cell id="2537">
                                    <label id="2538">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                                <cell id="2539">
                                    <label id="2540">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2541">
                                <cell id="2542">
                                    <data id="2543">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid7</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="2544">
                                    <data id="2545">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid7</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2546">
                                <cell id="2547"/>
                                <cell id="2548"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1872">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1873">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1874">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1611111" id="1875">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1876">
                                            <property name="content">
                                                <data name="testproc1111111" id="1877">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1878">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View81111111" id="1879">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1880">
                                            <property name="content">
                                                <data name="TestDesc11111111" id="1881">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1882">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View91111111" id="1883">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1884">
                                            <property name="content">
                                                <data name="instruments11111111" id="1885">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1886">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View101111111" id="1887">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1888">
                                            <property name="content">
                                                <data name="calibration11111111" id="1889">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1890">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View111111111" id="1891">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1892">
                                            <property name="content">
                                                <data name="testcenter11111111" id="1893">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1894">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View121111111" id="1895">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1896">
                                            <property name="content">
                                                <data name="Productname1111111" id="1897">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1898">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View131111111" id="1899">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1900">
                                            <property name="content">
                                                <data name="version1111111" id="1901">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1902">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View141111111" id="1903">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1904">
                                            <property name="content">
                                                <data name="SerialNo1111111" id="1905">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1929">
                            <property name="dimension">Group17</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View17" id="1930">
                                    <property name="level">Group17/frequency8</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1931">
                                            <property name="content">
                                                <data name="frequency8" id="1933">
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frequency8</property>
                                                </data>
                                            </property>
                                            <property name="style">BorderStyle</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1910">
                    <property name="content">
                        <label id="1911">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1912">
                    <property name="content">
                        <label id="1913">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1914">
                    <property name="content">
                        <label id="1915">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1916">
                    <property name="content">
                        <label id="1917">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1918">
                    <property name="content">
                        <label id="1919">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1920">
                    <property name="content">
                        <label id="1921">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1922">
                    <property name="content">
                        <label id="1923">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1926">
                    <property name="content">
                        <label id="1927">
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1932">
                    <property name="content">
                        <label id="1934">
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq8"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency8</property>
                    <expression name="expression">dimension["Group17"]["frequency8"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="1928">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGROLL.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX8&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN8&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
// block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset8</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq8"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2551">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq8"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2552"/>
            <row id="2553">
                <cell id="2554">
                    <table id="2555">
                        <property name="dataSet">PolarGrid8</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">3Db_BW_BMax</property>
                                <text-property name="displayName">3Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BW_BMax</property>
                                <text-property name="displayName">10Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2569"/>
                        <column id="2570"/>
                        <header>
                            <row id="2556">
                                <cell id="2557">
                                    <label id="2558">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                                <cell id="2559">
                                    <label id="2560">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2561">
                                <cell id="2562">
                                    <data id="2563">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid8</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="2564">
                                    <data id="2565">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid8</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2566">
                                <cell id="2567"/>
                                <cell id="2568"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1935">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1936">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1937">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View16111111" id="1938">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1939">
                                            <property name="content">
                                                <data name="testproc11111111" id="1940">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1941">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View811111111" id="1942">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1943">
                                            <property name="content">
                                                <data name="TestDesc111111111" id="1944">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1945">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View911111111" id="1946">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1947">
                                            <property name="content">
                                                <data name="instruments111111111" id="1948">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1949">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1011111111" id="1950">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1951">
                                            <property name="content">
                                                <data name="calibration111111111" id="1952">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1953">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1111111111" id="1954">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1955">
                                            <property name="content">
                                                <data name="testcenter111111111" id="1956">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1957">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1211111111" id="1958">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1959">
                                            <property name="content">
                                                <data name="Productname11111111" id="1960">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1961">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1311111111" id="1962">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1963">
                                            <property name="content">
                                                <data name="version11111111" id="1964">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1965">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1411111111" id="1966">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1967">
                                            <property name="content">
                                                <data name="SerialNo11111111" id="1968">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1992">
                            <property name="dimension">Group18</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View18" id="1993">
                                    <property name="level">Group18/frequency9</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1994">
                                            <property name="content">
                                                <data name="frequency9" id="1996">
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frequency9</property>
                                                </data>
                                            </property>
                                            <property name="style">BorderStyle</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1973">
                    <property name="content">
                        <label id="1974">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1975">
                    <property name="content">
                        <label id="1976">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1977">
                    <property name="content">
                        <label id="1978">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1979">
                    <property name="content">
                        <label id="1980">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1981">
                    <property name="content">
                        <label id="1982">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1983">
                    <property name="content">
                        <label id="1984">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1985">
                    <property name="content">
                        <label id="1986">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1989">
                    <property name="content">
                        <label id="1990">
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1995">
                    <property name="content">
                        <label id="1997">
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq9"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency9</property>
                    <expression name="expression">dimension["Group18"]["frequency9"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="1991">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGROLL.png</URL>
      <Data>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VN3VcbVa/aAw/bvVdDcaDTQajW6grtVqqNfrKJVKaDabGBkZQbPZ7HaYMZlMz76FHxERMXQTPWrg7v0vIH7C5aCdIR56+3JotVqMjo7iv//7v3/63pVKBaVSCeVyGa1WCxcXFyiXy2g2m+h0OjAYDNBoNN1QrtPpoNVqMTIy0m3H95xbBvaudDebTTSbTVQqFdTrddTrdTQaje7PK7UDVKvV3Z7qZrO5+/OPjIw8uDZ6mCeKz+U1RUREDN1Evxj2hMt+OkM8ZSi6fj9HRkZu7cQhBVLpv61WC7lcDtVqFdVqFY1GA61WCxsbG92pmRqNBmq1GgqFAjqdDhqNprthsPfv0n3pZ5W4Xq+j3W53/7/VanVXsaW/S/9GCthSsP7zzz/R6XSgUqkwMjLSvb9qtRperxdqtbr78UGe68d4robxmmJPbSIiQe/ZHb5TEj1qoL0rEN3Wju0lq9VqaDab3cArlWdIn5OCuRTipb9LQa5Wqz34e2m12p82I0p9s3v/LtVSS+G/N1y/pDrrflv3sRabiIihm4ih+4Yg1Yu/ptTPa+qm1w5fU0RET4vlJURP6Lba35tqdBmSqJ/X1fXXDl9TREQM3UQMSD1BaFDDGN9N4ty3It37XPD5ISJi6CaiIQax+z5+1+08JORxfPfTPc/3nWz1Bu5hPD98nomIGLqJ/rZEdIZ47BZ1NFjYfaznh91GiIgYuokYsm8IOnLbETI8iQ3Hvf9/22Pdz6bE+54fuSvQw3hNERERQzcR9RHGhrG6+jsOY+mn/IMBloiIGLqJ6M7gOIxwOowBP4+5KbTf8g+RtdGssyYiYugmohdOdKB7rHD62JtCByn/YG00ERExdBNRNwyK3FB3V52wqFXol7ApdNj9rrnhkYiIoZuInnnI7icoi3LbavMg4XSQYD9MIgM1NzwSEf29KfkQENFz1xvkn3olnK0ZiYhoEFzpJqKhBuXfDcs/iIiIoZuInk0IfWnhlOUfREQ0TIoOjx5E9NzemB6xZSARERFDNxERERHRb4AbKYmIiIiIGLqJiIiIiBi6iYiIiIiIoZuIiIiIiKGbiIiIiIihm4iIiIiIGLqJiIiIiBi6iYiIiIgYuomIiIiIiKGbiIiIiIihm4iIiIiIGLqJiIiIiBi6iYiIiIgYuomIiIiIiKGbiIiIiIihm4iIiIiIoZuIiIiIiBi6iYiIiIgYuomIiIiIGLr5EBARERERMXQTERERETF0ExERERERQzcREREREUM3ERERERFDNxERERERMXQTERERETF0ExERERExdBMREREREUM3ERERERFDNxERERERMXQTERERETF0ExERERExdBMREREREUM3ERERERFDNxERERERQzcRERERETF0ExERERExdBMRERERMXQTERERERFDNxERERERQzcRERERETF0ExERERExdBMRERERMXQTERERERFDNxERERERQzcREREREUM3ERERERExdBMRERERMXQTERERERFDNxERERHR4/m/AQCiQ3+4BUUMPgAAAABJRU5ErkJggg==</Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX9&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN9&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
// block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset9</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq9"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2571">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq9"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2572"/>
            <row id="2573">
                <cell id="2574">
                    <table id="2575">
                        <property name="dataSet">PolarGrid9</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">3Db_BW_BMax</property>
                                <text-property name="displayName">3Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BW_BMax</property>
                                <text-property name="displayName">10Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2589"/>
                        <column id="2590"/>
                        <header>
                            <row id="2576">
                                <cell id="2577">
                                    <label id="2578">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                                <cell id="2579">
                                    <label id="2580">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2581">
                                <cell id="2582">
                                    <data id="2583">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid9</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="2584">
                                    <data id="2585">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid9</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2586">
                                <cell id="2587"/>
                                <cell id="2588"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1998">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1999">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="2000">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View161111111" id="2001">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2002">
                                            <property name="content">
                                                <data name="testproc111111111" id="2003">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2004">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View8111111111" id="2005">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2006">
                                            <property name="content">
                                                <data name="TestDesc1111111111" id="2007">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2008">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View9111111111" id="2009">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2010">
                                            <property name="content">
                                                <data name="instruments1111111111" id="2011">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2012">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View10111111111" id="2013">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2014">
                                            <property name="content">
                                                <data name="calibration1111111111" id="2015">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2016">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View11111111111" id="2017">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2018">
                                            <property name="content">
                                                <data name="testcenter1111111111" id="2019">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2020">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View12111111111" id="2021">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2022">
                                            <property name="content">
                                                <data name="Productname111111111" id="2023">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2024">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View13111111111" id="2025">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2026">
                                            <property name="content">
                                                <data name="version111111111" id="2027">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2028">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View14111111111" id="2029">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2030">
                                            <property name="content">
                                                <data name="SerialNo111111111" id="2031">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2055">
                            <property name="dimension">Group19</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View19" id="2056">
                                    <property name="level">Group19/frequency10</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2057">
                                            <property name="content">
                                                <data name="frequency10" id="2059">
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frequency10</property>
                                                </data>
                                            </property>
                                            <property name="style">BorderStyle</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="2036">
                    <property name="content">
                        <label id="2037">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2038">
                    <property name="content">
                        <label id="2039">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2040">
                    <property name="content">
                        <label id="2041">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2042">
                    <property name="content">
                        <label id="2043">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2044">
                    <property name="content">
                        <label id="2045">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2046">
                    <property name="content">
                        <label id="2047">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2048">
                    <property name="content">
                        <label id="2049">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2052">
                    <property name="content">
                        <label id="2053">
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2058">
                    <property name="content">
                        <label id="2060">
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq10"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency10</property>
                    <expression name="expression">dimension["Group19"]["frequency10"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="2054">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGROLL.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX10&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN10&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}&#xD;
</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset10</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq10"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2591">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq10"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2592"/>
            <row id="2593">
                <cell id="2594">
                    <table id="2292">
                        <property name="dataSet">PolarGrid10</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">3Db_BW_BMax</property>
                                <text-property name="displayName">3Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BW_BMax</property>
                                <text-property name="displayName">10Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2599"/>
                        <column id="2600"/>
                        <header>
                            <row id="2293">
                                <cell id="2294">
                                    <label id="2295">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                                <cell id="2296">
                                    <label id="2297">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2298">
                                <cell id="2299">
                                    <data id="2300">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid10</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="2301">
                                    <data id="2595">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid10</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2596">
                                <cell id="2597"/>
                                <cell id="2598"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
    </body>
</report>
