<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.eclipse.org/birt/2005/design" version="3.2.23" id="1">
    <property name="createdBy">Eclipse BIRT Designer Version 4.3.2.v20140211-1400 Build &lt;4.3.2.v20140218-1056></property>
    <text-property name="title">Linear-Elevation-Pitch</text-property>
    <list-property name="propertyBindings">
        <structure>
            <property name="name">queryText</property>
            <property name="id">13</property>
        </structure>
        <structure>
            <property name="name">queryTimeOut</property>
            <property name="id">13</property>
        </structure>
        <structure>
            <property name="name">rowFetchSize</property>
            <property name="id">13</property>
        </structure>
    </list-property>
    <property name="units">in</property>
    <property name="iconFile">/templates/blank_report.gif</property>
    <property name="layoutPreference">auto layout</property>
    <property name="bidiLayoutOrientation">ltr</property>
    <property name="imageDPI">96</property>
    <parameters>
        <scalar-parameter name="freq1" id="10">
            <property name="hidden">true</property>
            <text-property name="helpText">Enter the frequency</text-property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="3db" id="1357">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="3dbDeg" id="1355">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="testid" id="12">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="type" id="767">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="lgain" id="768">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="img" id="1028">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="rpth" id="1124">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="rptf" id="1125">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="scale" id="1128">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq2" id="1131">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq3" id="1132">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="10db" id="1386">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="10dbDeg" id="1387">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq5" id="1458">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq4" id="1457">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq6" id="1459">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq7" id="1460">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq8" id="1461">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq9" id="1462">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq10" id="1463">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="polar" id="2061">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="pc" id="2417">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">integer</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
    </parameters>
    <data-sources>
        <oda-data-source extensionID="org.eclipse.birt.report.data.oda.jdbc" name="VerdantProfile" id="7">
            <list-property name="privateDriverProperties">
                <ex-property>
                    <name>metadataBidiFormatStr</name>
                    <value>ILYNN</value>
                </ex-property>
                <ex-property>
                    <name>disabledMetadataBidiFormatStr</name>
                </ex-property>
                <ex-property>
                    <name>contentBidiFormatStr</name>
                    <value>ILYNN</value>
                </ex-property>
                <ex-property>
                    <name>disabledContentBidiFormatStr</name>
                </ex-property>
            </list-property>
            <property name="odaDriverClass">com.mysql.jdbc.Driver</property>
            <property name="odaURL">jdbc:mysql://localhost:3306/verdant</property>
            <property name="odaUser">root</property>
            <property name="OdaConnProfileName">VerdantProfile</property>
            <property name="OdaConnProfileStorePath">VerdantProfile</property>
        </oda-data-source>
    </data-sources>
    <data-sets>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="Data SetGrid" id="13">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression">params["freq1"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MyDataHeader</property>
                    <expression name="expression">params["type"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency2</property>
                    <expression name="expression">params["freq2"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency3</property>
                    <expression name="expression">params["freq3"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency4</property>
                    <expression name="expression">params["freq4"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency5</property>
                    <expression name="expression">params["freq5"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency6</property>
                    <expression name="expression">params["freq6"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency7</property>
                    <expression name="expression">params["freq7"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency8</property>
                    <expression name="expression">params["freq8"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency9</property>
                    <expression name="expression">params["freq9"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency10</property>
                    <expression name="expression">params["freq10"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">testproc</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">testproc</text-property>
                    <text-property name="heading">testproc</text-property>
                </structure>
                <structure>
                    <property name="columnName">TestDesc</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">TestDesc</text-property>
                    <text-property name="heading">TestDesc</text-property>
                </structure>
                <structure>
                    <property name="columnName">TestDate</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">TestDate</text-property>
                    <text-property name="heading">TestDate</text-property>
                </structure>
                <structure>
                    <property name="columnName">frequnit</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">frequnit</text-property>
                    <text-property name="heading">frequnit</text-property>
                </structure>
                <structure>
                    <property name="columnName">testcenter</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">testcenter</text-property>
                    <text-property name="heading">testcenter</text-property>
                </structure>
                <structure>
                    <property name="columnName">instruments</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">instruments</text-property>
                    <text-property name="heading">instruments</text-property>
                </structure>
                <structure>
                    <property name="columnName">calibration</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">calibration</text-property>
                    <text-property name="heading">calibration</text-property>
                </structure>
                <structure>
                    <property name="columnName">SerialNo</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">SerialNo</text-property>
                    <text-property name="heading">SerialNo</text-property>
                </structure>
                <structure>
                    <property name="columnName">Productname</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">Productname</text-property>
                    <text-property name="heading">Productname</text-property>
                </structure>
                <structure>
                    <property name="columnName">Version</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">version</text-property>
                    <text-property name="heading">version</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">testidGrid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">testproc</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">TestDesc</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">TestDate</property>
                        <property name="dataType">date-time</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">frequnit</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">testcenter</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">instruments</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">calibration</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">SerialNo</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">Productname</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">Version</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">11</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">12</property>
                        <property name="name">MyDataHeader</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">13</property>
                        <property name="name">frequency2</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">14</property>
                        <property name="name">frequency3</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">15</property>
                        <property name="name">frequency4</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">16</property>
                        <property name="name">frequency5</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">17</property>
                        <property name="name">frequency6</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">18</property>
                        <property name="name">frequency7</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">19</property>
                        <property name="name">frequency8</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">20</property>
                        <property name="name">frequency9</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">21</property>
                        <property name="name">frequency10</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">testproc</property>
                    <property name="nativeName">testproc</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">TestDesc</property>
                    <property name="nativeName">TestDesc</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">TestDate</property>
                    <property name="nativeName">TestDate</property>
                    <property name="dataType">date-time</property>
                    <property name="nativeDataType">93</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">frequnit</property>
                    <property name="nativeName">frequnit</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">testcenter</property>
                    <property name="nativeName">testcenter</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">instruments</property>
                    <property name="nativeName">instruments</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">calibration</property>
                    <property name="nativeName">calibration</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">SerialNo</property>
                    <property name="nativeName">SerialNo</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">9</property>
                    <property name="name">Productname</property>
                    <property name="nativeName">Productname</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">10</property>
                    <property name="name">Version</property>
                    <property name="nativeName">Version</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[SELECT distinct TD.testproc,TD.TestDesc,TD.TestDate,TD.frequnit,TD.testcenter,TD.instruments,TD.calibration ,s.SerialNo,p.Productname,p.version
FROM testdata TD inner join product_serial s on td.ProdSerial_id=S.Prodserial_id 
inner join product p on s.Product_id=p.Product_id   where TD.Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>Test_id</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
            <design:precision>11</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>NotNullable</design:nullability>
            <design:uiHints>
              <design:displayName>Test_id</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>Test_id</design:label>
            <design:formattingHints>
              <design:displaySize>11</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>TestName</design:name>
              <design:position>2</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
            <design:precision>50</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>TestName</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>TestName</design:label>
            <design:formattingHints>
              <design:displaySize>50</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>TestDesc</design:name>
              <design:position>3</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
            <design:precision>100</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>TestDesc</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>TestDesc</design:label>
            <design:formattingHints>
              <design:displaySize>100</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>ProdSerial_id</design:name>
              <design:position>4</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
            <design:precision>11</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>ProdSerial_id</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>ProdSerial_id</design:label>
            <design:formattingHints>
              <design:displaySize>11</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>TestDate</design:name>
              <design:position>5</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>93</design:nativeDataTypeCode>
            <design:precision>19</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>TestDate</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>TestDate</design:label>
            <design:formattingHints>
              <design:displaySize>19</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="3Db_BW_BMax" id="402">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">3Db_BW_BMax</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">3Db_BW_BMax</text-property>
                    <text-property name="heading">3Db_BW_BMax</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[SELECT round(3Db_BW_BMax,?) as 3Db_BW_BMax FROM pitchcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BW_BMax</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BW_BMax</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BW_BMax</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="3dbhp0" id="583">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">3Db_BW_0</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">3Db_BW_0</text-property>
                    <text-property name="heading">3Db_BW_0</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_0</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_0</property>
                    <property name="nativeName">3Db_BW_0</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[select round(3Db_BW_0,?) as 3Db_BW_0 from pitchcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BW_0</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BW_0</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BW_0</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BS_0</design:name>
              <design:position>2</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BS_0</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BS_0</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="3dbhp90" id="608">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">3Db_BW_90</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">3Db_BW_90</text-property>
                    <text-property name="heading">3Db_BW_90</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_90</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_90</property>
                    <property name="nativeName">3Db_BW_90</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[select round(3Db_BW_90,?) as 3Db_BW_90
from pitchcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BW_90</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BW_90</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BW_90</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BS_90</design:name>
              <design:position>2</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BS_90</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BS_90</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="fq" id="464">
            <list-property name="computedColumns">
                <structure>
                    <property name="name">Hide</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">RUNNINGCOUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["Frequency"]</expression>
                        </structure>
                    </list-property>
                </structure>
                <structure>
                    <property name="name">dyn</property>
                    <expression name="expression">params["type"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">Frequency</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">frequency</text-property>
                    <text-property name="heading">frequency</text-property>
                </structure>
                <structure>
                    <property name="columnName">frequnit</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">frequnit</text-property>
                    <text-property name="heading">frequnit</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">frequnit</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Hide</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">dyn</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">frequency</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">frequnit</property>
                    <property name="nativeName">frequnit</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[SELECT case t.frequnit when 'GHz' then frequency/1000 else frequency end frequency,t.frequnit FROM pitchcalculated ar inner join testdata t on ar.test_id=t.test_id  where ar.Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>Frequency</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>frequency</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>frequency</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="10Db_BW_BMax" id="1370">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">10Db_BW_BMax</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">10Db_BW_BMax</text-property>
                    <text-property name="heading">10Db_BW_BMax</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[SELECT round(10Db_BW_BMax,?) as 10Db_BW_BMax FROM pitchcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BW_BMax</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BW_BMax</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BW_BMax</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="10dbhp0" id="1371">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">10Db_BW_0</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">10Db_BW_0</text-property>
                    <text-property name="heading">10Db_BW_0</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">10Db_BW_0</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">10Db_BW_0</property>
                    <property name="nativeName">10Db_BW_0</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[select round(10Db_BW_0,?) as 10Db_BW_0 from pitchcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BW_0</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BW_0</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BW_0</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BS_0</design:name>
              <design:position>2</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BS_0</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BS_0</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="10dbhp90" id="1372">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">10Db_BW_90</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">10Db_BW_90</text-property>
                    <text-property name="heading">10Db_BW_90</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">10Db_BW_90</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">10Db_BW_90</property>
                    <property name="nativeName">10Db_BW_90</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[select round(10Db_BW_90,?) as 10Db_BW_90
from pitchcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BW_90</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BW_90</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BW_90</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BS_90</design:name>
              <design:position>2</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BS_90</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BS_90</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="fq10db" id="1373">
            <list-property name="computedColumns">
                <structure>
                    <property name="name">Hide</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">RUNNINGCOUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["Frequency"]</expression>
                        </structure>
                    </list-property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">Frequency</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">frequency</text-property>
                    <text-property name="heading">frequency</text-property>
                </structure>
                <structure>
                    <property name="columnName">frequnit</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">frequnit</text-property>
                    <text-property name="heading">frequnit</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">frequnit</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Hide</property>
                        <property name="dataType">integer</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">frequency</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">frequnit</property>
                    <property name="nativeName">frequnit</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[SELECT case t.frequnit when 'GHz' then frequency/1000 else frequency end frequency,t.frequnit FROM pitchcalculated ar inner join testdata t on ar.test_id=t.test_id  where ar.Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>Frequency</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>frequency</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>frequency</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid1" id="496">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq1</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid2" id="2119">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq2</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid3" id="2120">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq3</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid4" id="2121">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq4</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid5" id="2122">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq5</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid6" id="2223">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq6</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid7" id="2224">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq7</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid8" id="2225">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq8</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid9" id="2226">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq9</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid10" id="2227">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq10</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset" id="4883">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq1</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lgain</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX1", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN1", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset10" id="4882">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq10</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lgain</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX10", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN10", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset2" id="2646">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq2</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lgain</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX2", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN2", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset3" id="4875">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq3</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lgain</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX3", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN3", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset4" id="4876">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq4</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lgain</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX4", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN4", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset5" id="4877">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq5</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lgain</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX5", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN5", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset6" id="4878">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq6</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lgain</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX6", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN6", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset7" id="4879">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq7</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lgain</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX7", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN7", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset8" id="4880">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq8</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lgain</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX8", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN8", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset9" id="4881">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq9</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lgain</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX9", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN9", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
    </data-sets>
    <cubes>
        <tabular-cube name="Data CubeTestGrid" id="14">
            <property name="dimensions">
                <tabular-dimension name="Group1" id="18">
                    <property name="defaultHierarchy">NewTabularHierarchy1</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy1" id="19">
                            <property name="levels">
                                <tabular-level name="TestDesc" id="20">
                                    <property name="dataType">string</property>
                                    <property name="columnName">TestDesc</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group3" id="56">
                    <property name="defaultHierarchy">NewTabularHierarchy2</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy2" id="57">
                            <property name="levels">
                                <tabular-level name="frequnit" id="58">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequnit</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group4" id="59">
                    <property name="defaultHierarchy">NewTabularHierarchy4</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy4" id="60">
                            <property name="levels">
                                <tabular-level name="calibration" id="61">
                                    <property name="dataType">string</property>
                                    <property name="columnName">calibration</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group5" id="62">
                    <property name="defaultHierarchy">NewTabularHierarchy5</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy5" id="63">
                            <property name="levels">
                                <tabular-level name="instruments" id="64">
                                    <property name="dataType">string</property>
                                    <property name="columnName">instruments</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group6" id="65">
                    <property name="defaultHierarchy">NewTabularHierarchy6</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy6" id="66">
                            <property name="levels">
                                <tabular-level name="testcenter" id="67">
                                    <property name="dataType">string</property>
                                    <property name="columnName">testcenter</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group7" id="270">
                    <property name="defaultHierarchy">NewTabularHierarchy7</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy7" id="271">
                            <property name="levels">
                                <tabular-level name="Productname" id="272">
                                    <property name="dataType">string</property>
                                    <property name="columnName">Productname</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group8" id="273">
                    <property name="defaultHierarchy">NewTabularHierarchy8</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy8" id="274">
                            <property name="levels">
                                <tabular-level name="SerialNo" id="275">
                                    <property name="dataType">string</property>
                                    <property name="columnName">SerialNo</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group9" id="282">
                    <property name="defaultHierarchy">NewTabularHierarchy9</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy9" id="283">
                            <property name="levels">
                                <tabular-level name="version" id="284">
                                    <property name="dataType">string</property>
                                    <property name="columnName">Version</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group10" id="297">
                    <property name="defaultHierarchy">NewTabularHierarchy10</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy10" id="298">
                            <property name="levels">
                                <tabular-level name="Frequency" id="299">
                                    <property name="dataType">string</property>
                                    <property name="columnName">Frequency</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group11" id="755">
                    <property name="defaultHierarchy">NewTabularHierarchy11</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy11" id="756">
                            <property name="levels">
                                <tabular-level name="testproc" id="757">
                                    <property name="dataType">string</property>
                                    <property name="columnName">testproc</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group" id="1283">
                    <property name="defaultHierarchy">NewTabularHierarchy</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy" id="1284">
                            <property name="levels">
                                <tabular-level name="frequency2" id="1285">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequency2</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group12" id="1286">
                    <property name="defaultHierarchy">NewTabularHierarchy12</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy12" id="1287">
                            <property name="levels">
                                <tabular-level name="frequency3" id="1288">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequency3</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group13" id="1464">
                    <property name="defaultHierarchy">NewTabularHierarchy13</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy13" id="1465">
                            <property name="levels">
                                <tabular-level name="frequency4" id="1466">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequency4</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group14" id="1467">
                    <property name="defaultHierarchy">NewTabularHierarchy14</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy14" id="1468">
                            <property name="levels">
                                <tabular-level name="frequency5" id="1469">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequency5</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group15" id="1470">
                    <property name="defaultHierarchy">NewTabularHierarchy15</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy15" id="1471">
                            <property name="levels">
                                <tabular-level name="frequency6" id="1472">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequency6</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group16" id="1473">
                    <property name="defaultHierarchy">NewTabularHierarchy16</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy16" id="1474">
                            <property name="levels">
                                <tabular-level name="frequency7" id="1475">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequency7</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group17" id="1476">
                    <property name="defaultHierarchy">NewTabularHierarchy17</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy17" id="1477">
                            <property name="levels">
                                <tabular-level name="frequency8" id="1478">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequency8</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group18" id="1479">
                    <property name="defaultHierarchy">NewTabularHierarchy18</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy18" id="1480">
                            <property name="levels">
                                <tabular-level name="frequency9" id="1481">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequency9</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group19" id="1482">
                    <property name="defaultHierarchy">NewTabularHierarchy19</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy19" id="1483">
                            <property name="levels">
                                <tabular-level name="frequency10" id="1484">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequency10</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group2" id="2308">
                    <property name="isTimeType">false</property>
                    <property name="defaultHierarchy">NewTabularHierarchy20</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy20" id="2309">
                            <property name="levels">
                                <tabular-level name="TestDate" id="2310">
                                    <property name="dataType">date-time</property>
                                    <property name="columnName">TestDate</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
            </property>
            <property name="dataSet">Data SetGrid</property>
        </tabular-cube>
    </cubes>
    <styles>
        <style name="report" id="4">
            <property name="fontFamily">sans-serif</property>
            <property name="fontSize">10pt</property>
        </style>
        <style name="NewStyle" id="1122">
            <property name="height">1cm</property>
        </style>
        <style name="borderstylegrid" id="1351">
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">thin</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">thin</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">thin</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">thin</property>
        </style>
        <style name="table-cell" id="1352">
            <property name="backgroundColor">#FFFFFF</property>
            <property name="borderBottomColor">#000000</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1px</property>
            <property name="borderLeftColor">#000000</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1px</property>
            <property name="borderRightColor">#000000</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1px</property>
            <property name="borderTopColor">#000000</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1px</property>
        </style>
        <style name="table" id="1353">
            <property name="backgroundColor">#FFFFFF</property>
            <property name="borderBottomColor">#000000</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1px</property>
            <property name="borderLeftColor">#000000</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1px</property>
            <property name="borderRightColor">#000000</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1px</property>
            <property name="borderTopColor">#000000</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1px</property>
        </style>
        <style name="BorderStyle" id="1354">
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">thin</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">thin</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">thin</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">thin</property>
        </style>
    </styles>
    <page-setup>
        <simple-master-page name="Simple MasterPage" id="2">
            <property name="leftMargin">0.2604166666666667in</property>
            <property name="rightMargin">0.22916666666666666in</property>
            <page-header>
                <text-data id="1126">
                    <property name="style">NewStyle</property>
                    <property name="fontFamily">sans-serif</property>
                    <property name="fontSize">12pt</property>
                    <property name="fontWeight">bold</property>
                    <property name="borderBottomStyle">none</property>
                    <property name="borderLeftStyle">none</property>
                    <property name="borderRightStyle">none</property>
                    <property name="borderTopStyle">none</property>
                    <property name="textAlign">center</property>
                    <expression name="valueExpr">params["rpth"].value</expression>
                    <property name="contentType">html</property>
                </text-data>
            </page-header>
            <page-footer>
                <grid id="1266">
                    <property name="borderBottomStyle">none</property>
                    <property name="borderLeftStyle">none</property>
                    <property name="borderRightStyle">none</property>
                    <property name="borderTopStyle">none</property>
                    <property name="canShrink">false</property>
                    <column id="1267"/>
                    <row id="1268">
                        <cell id="1269">
                            <grid id="1272">
                                <column id="1273">
                                    <property name="width">1.9in</property>
                                </column>
                                <column id="1274">
                                    <property name="width">4.3in</property>
                                </column>
                                <column id="4885">
                                    <property name="width">1.9in</property>
                                </column>
                                <row id="1275">
                                    <cell id="1276">
                                        <text id="1278">
                                            <property name="width">6cm</property>
                                            <property name="contentType">html</property>
                                            <text-property name="content"><![CDATA[<html>
<body>
<style>
.outer{
  text-align: center;
}
.outer img{
  display: inline-block;
}
</style>
<table>
<tr>
<td>
<div class="outer">

<img src="\img\Verdantlogo.png" height="50px" width="175px" align="baseline" name="myimage">

</div>
</td>
</tr>
</table>
</body>
</html>]]></text-property>
                                        </text>
                                    </cell>
                                    <cell id="1277">
                                        <property name="textAlign">center</property>
                                        <text-data id="1279">
                                            <property name="fontWeight">normal</property>
                                            <expression name="valueExpr">params["rptf"].value</expression>
                                            <property name="contentType">html</property>
                                        </text-data>
                                        <text-data id="4886">
                                            <property name="textAlign">center</property>
                                            <expression name="valueExpr">"Verdant Telemetry and Antenna Systems Pvt. Ltd., Cochin, India"</expression>
                                            <property name="contentType">html</property>
                                        </text-data>
                                    </cell>
                                    <cell id="4884"/>
                                </row>
                            </grid>
                        </cell>
                    </row>
                    <row id="1270">
                        <cell id="1271"/>
                    </row>
                </grid>
            </page-footer>
        </simple-master-page>
    </page-setup>
    <body>
        <label id="1356">
            <property name="fontWeight">bold</property>
            <property name="textAlign">left</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">(params["3db"].value!='yes')</expression>
                </structure>
            </list-property>
            <text-property name="text">3dB beamwidth</text-property>
        </label>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="2311">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="2312">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="2313">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View20" id="2314">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2315">
                                            <property name="content">
                                                <data name="testproc2" id="2316">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2317">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View82" id="2318">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2319">
                                            <property name="content">
                                                <data name="TestDesc12" id="2320">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2321">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View92" id="2322">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2323">
                                            <property name="content">
                                                <data name="instruments12" id="2324">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2325">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View102" id="2326">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2327">
                                            <property name="content">
                                                <data name="calibration12" id="2328">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2329">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View112" id="2330">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2331">
                                            <property name="content">
                                                <data name="testcenter12" id="2332">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2333">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View122" id="2334">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2335">
                                            <property name="content">
                                                <data name="Productname2" id="2336">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2337">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View132" id="2338">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2339">
                                            <property name="content">
                                                <data name="version2" id="2340">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2341">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View142" id="2342">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2343">
                                            <property name="content">
                                                <data name="SerialNo2" id="2344">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="2349">
                    <property name="content">
                        <label id="2350">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2351">
                    <property name="content">
                        <label id="2352">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2353">
                    <property name="content">
                        <label id="2354">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2355">
                    <property name="content">
                        <label id="2356">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2357">
                    <property name="content">
                        <label id="2358">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2359">
                    <property name="content">
                        <label id="2360">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2361">
                    <property name="content">
                        <label id="2362">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2365">
                    <property name="content">
                        <label id="2366">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">auto</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["3db"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="335">
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">medium</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">medium</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">medium</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">medium</property>
            <property name="canShrink">true</property>
            <property name="dataSet">fq</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">( (row["Hide"]&lt;1) || (params["3dbDeg"].value!="0d90d") || (params["3db"].value!='yes'))</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Hide</property>
                    <text-property name="displayName">Hide</text-property>
                    <expression name="expression" type="javascript">dataSetRow["Hide"]</expression>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <column id="336"/>
            <row id="337">
                <cell id="338">
                    <label id="341">
                        <property name="fontSize">medium</property>
                        <property name="fontWeight">bold</property>
                        <property name="textAlign">center</property>
                        <text-property name="text">3dB Beamwidth </text-property>
                    </label>
                </cell>
            </row>
            <row id="339">
                <cell id="340">
                    <grid id="532">
                        <column id="533">
                            <property name="style">BorderStyle</property>
                        </column>
                        <column id="534">
                            <property name="style">BorderStyle</property>
                        </column>
                        <column id="535">
                            <property name="style">BorderStyle</property>
                        </column>
                        <column id="536">
                            <property name="style">BorderStyle</property>
                        </column>
                        <row id="537">
                            <cell id="538">
                                <grid id="565">
                                    <expression name="bookmark" type="javascript">"BMHP"</expression>
                                    <column id="566"/>
                                    <row id="567">
                                        <cell id="568">
                                            <label id="581">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Spot Freq.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="569">
                                        <cell id="570">
                                            <table id="571">
                                                <property name="dataSet">fq</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">Frequency</property>
                                                        <text-property name="displayName">frequency</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">frequnit</property>
                                                        <text-property name="displayName">frequnit</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["frequnit"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                </list-property>
                                                <column id="580"/>
                                                <header>
                                                    <row id="572">
                                                        <cell id="573">
                                                            <data id="634">
                                                                <property name="fontSize">small</property>
                                                                <property name="resultSetColumn">frequnit</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="575">
                                                        <cell id="576">
                                                            <data id="577">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">Frequency</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="578">
                                                        <cell id="579"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="539">
                                <grid id="542">
                                    <column id="543"/>
                                    <row id="544">
                                        <cell id="545">
                                            <label id="564">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Beam Max.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="546">
                                        <cell id="547">
                                            <table id="548">
                                                <property name="dataSet">3Db_BW_BMax</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">3Db_BW_BMax</property>
                                                        <text-property name="displayName">3Db_BW_BMax</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="562"/>
                                                <header>
                                                    <row id="549">
                                                        <cell id="550">
                                                            <label id="551">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">3dB BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="554">
                                                        <cell id="555">
                                                            <data id="556">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">3Db_BW_BMax</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="559">
                                                        <cell id="560"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="540">
                                <grid id="584">
                                    <expression name="bookmark" type="javascript">"3db0hp"</expression>
                                    <column id="585"/>
                                    <row id="586">
                                        <cell id="587">
                                            <label id="607">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">0</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="588">
                                        <cell id="589">
                                            <table id="590">
                                                <property name="dataSet">3dbhp0</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">3Db_BW_0</property>
                                                        <text-property name="displayName">3Db_BW_0</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["3Db_BW_0"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="604"/>
                                                <header>
                                                    <row id="591">
                                                        <cell id="592">
                                                            <label id="593">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">3dB BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="596">
                                                        <cell id="597">
                                                            <data id="598">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">3Db_BW_0</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="601">
                                                        <cell id="602"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="541">
                                <grid id="609">
                                    <expression name="bookmark" type="javascript">"3dbhp90"</expression>
                                    <column id="610"/>
                                    <row id="611">
                                        <cell id="612">
                                            <label id="631">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">90</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="613">
                                        <cell id="614">
                                            <table id="615">
                                                <property name="dataSet">3dbhp90</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">3Db_BW_90</property>
                                                        <text-property name="displayName">3Db_BW_90</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["3Db_BW_90"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="629"/>
                                                <header>
                                                    <row id="616">
                                                        <cell id="617">
                                                            <label id="618">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">3dB BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="621">
                                                        <cell id="622">
                                                            <data id="623">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">3Db_BW_90</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="626">
                                                        <cell id="627"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                        </row>
                    </grid>
                </cell>
            </row>
        </grid>
        <grid id="940">
            <property name="style">BorderStyle</property>
            <property name="canShrink">true</property>
            <property name="dataSet">fq</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">( (row["Hide"]&lt;1) || ((params["3dbDeg"].value!="bm")  || (params["3db"].value!="yes")))</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Hide</property>
                    <text-property name="displayName">Hide</text-property>
                    <expression name="expression" type="javascript">dataSetRow["Hide"]</expression>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <column id="941"/>
            <row id="942">
                <cell id="943">
                    <label id="986">
                        <property name="fontSize">medium</property>
                        <property name="fontWeight">bold</property>
                        <property name="textAlign">center</property>
                        <text-property name="text">3dB Beamwidth </text-property>
                    </label>
                </cell>
            </row>
            <row id="944">
                <cell id="945">
                    <grid id="946">
                        <column id="947">
                            <property name="style">BorderStyle</property>
                        </column>
                        <column id="948">
                            <property name="style">BorderStyle</property>
                        </column>
                        <row id="949">
                            <cell id="950">
                                <grid id="952">
                                    <expression name="bookmark" type="javascript">"BMHP"</expression>
                                    <column id="953"/>
                                    <row id="954">
                                        <cell id="955">
                                            <label id="956">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Spot Freq.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="957">
                                        <cell id="958">
                                            <table id="959">
                                                <property name="dataSet">fq</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">Frequency</property>
                                                        <text-property name="displayName">frequency</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">frequnit</property>
                                                        <text-property name="displayName">frequnit</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["frequnit"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                </list-property>
                                                <column id="968"/>
                                                <header>
                                                    <row id="960">
                                                        <cell id="961">
                                                            <data id="962">
                                                                <property name="fontSize">small</property>
                                                                <property name="resultSetColumn">frequnit</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="963">
                                                        <cell id="964">
                                                            <data id="965">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">Frequency</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="966">
                                                        <cell id="967"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="951">
                                <grid id="969">
                                    <column id="970"/>
                                    <row id="971">
                                        <cell id="972">
                                            <label id="973">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Beam Max.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="974">
                                        <cell id="975">
                                            <table id="976">
                                                <property name="dataSet">3Db_BW_BMax</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">3Db_BW_BMax</property>
                                                        <text-property name="displayName">3Db_BW_BMax</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="985"/>
                                                <header>
                                                    <row id="977">
                                                        <cell id="978">
                                                            <label id="979">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">3dB BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="980">
                                                        <cell id="981">
                                                            <data id="982">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">3Db_BW_BMax</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="983">
                                                        <cell id="984"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                        </row>
                    </grid>
                </cell>
            </row>
        </grid>
        <grid id="640">
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">medium</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">medium</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">medium</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">medium</property>
            <property name="canShrink">true</property>
            <property name="dataSet">fq</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">( (row["Hide"]&lt;1) || ((params["3dbDeg"].value=="0d90d") || (params["3dbDeg"].value=="bm") || (params["3db"].value!="yes")))</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Hide</property>
                    <text-property name="displayName">Hide</text-property>
                    <expression name="expression" type="javascript">dataSetRow["Hide"]</expression>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <column id="641"/>
            <row id="642">
                <cell id="643">
                    <label id="644">
                        <property name="fontSize">medium</property>
                        <property name="fontWeight">bold</property>
                        <property name="textAlign">center</property>
                        <text-property name="text">3dB Beamwidth</text-property>
                    </label>
                </cell>
            </row>
            <row id="645">
                <cell id="646">
                    <grid id="647">
                        <column id="648">
                            <property name="style">BorderStyle</property>
                        </column>
                        <column id="650">
                            <property name="style">BorderStyle</property>
                        </column>
                        <column id="651">
                            <property name="style">BorderStyle</property>
                        </column>
                        <row id="652">
                            <cell id="653">
                                <grid id="654">
                                    <expression name="bookmark" type="javascript">"BMHP"</expression>
                                    <column id="655"/>
                                    <row id="656">
                                        <cell id="657">
                                            <label id="658">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Spot Freq.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="659">
                                        <cell id="660">
                                            <table id="661">
                                                <property name="dataSet">fq</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">Frequency</property>
                                                        <text-property name="displayName">frequency</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">frequnit</property>
                                                        <text-property name="displayName">frequnit</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["frequnit"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                </list-property>
                                                <column id="670"/>
                                                <header>
                                                    <row id="662">
                                                        <cell id="663">
                                                            <data id="664">
                                                                <property name="fontSize">small</property>
                                                                <property name="resultSetColumn">frequnit</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="665">
                                                        <cell id="666">
                                                            <data id="667">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">Frequency</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="668">
                                                        <cell id="669"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="695">
                                <property name="colSpan">2</property>
                                <property name="rowSpan">1</property>
                                <grid id="696">
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">params["3dbDeg"].value=="90d"</expression>
                                        </structure>
                                    </list-property>
                                    <expression name="bookmark" type="javascript">"3db0hp"</expression>
                                    <column id="697"/>
                                    <row id="698">
                                        <cell id="699">
                                            <label id="700">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">0</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="701">
                                        <cell id="702">
                                            <table id="703">
                                                <property name="dataSet">3dbhp0</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">3Db_BW_0</property>
                                                        <text-property name="displayName">3Db_BW_0</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["3Db_BW_0"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="717"/>
                                                <header>
                                                    <row id="704">
                                                        <cell id="705">
                                                            <label id="706">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">3dB BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="709">
                                                        <cell id="710">
                                                            <data id="711">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">3Db_BW_0</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="714">
                                                        <cell id="715"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                                <grid id="720">
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">params["3dbDeg"].value=="0d"</expression>
                                        </structure>
                                    </list-property>
                                    <expression name="bookmark" type="javascript">"3dbhp90"</expression>
                                    <column id="721"/>
                                    <row id="722">
                                        <cell id="723">
                                            <label id="724">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">90</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="725">
                                        <cell id="726">
                                            <table id="727">
                                                <property name="dataSet">3dbhp90</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">3Db_BW_90</property>
                                                        <text-property name="displayName">3Db_BW_90</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["3Db_BW_90"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="741"/>
                                                <header>
                                                    <row id="728">
                                                        <cell id="729">
                                                            <label id="730">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">3dB BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="733">
                                                        <cell id="734">
                                                            <data id="735">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">3Db_BW_90</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="738">
                                                        <cell id="739"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                        </row>
                    </grid>
                </cell>
            </row>
        </grid>
        <label id="1388">
            <property name="fontWeight">bold</property>
            <property name="pageBreakBefore">always</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["10db"].value!='yes'</expression>
                </structure>
            </list-property>
            <text-property name="text">10dB beamwidth</text-property>
        </label>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="2367">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="2368">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="2369">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View201" id="2370">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2371">
                                            <property name="content">
                                                <data name="testproc21" id="2372">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2373">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View821" id="2374">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2375">
                                            <property name="content">
                                                <data name="TestDesc121" id="2376">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2377">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View921" id="2378">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2379">
                                            <property name="content">
                                                <data name="instruments121" id="2380">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2381">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1021" id="2382">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2383">
                                            <property name="content">
                                                <data name="calibration121" id="2384">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2385">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1121" id="2386">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2387">
                                            <property name="content">
                                                <data name="testcenter121" id="2388">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2389">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1221" id="2390">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2391">
                                            <property name="content">
                                                <data name="Productname21" id="2392">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2393">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1321" id="2394">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2395">
                                            <property name="content">
                                                <data name="version21" id="2396">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2397">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1421" id="2398">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2399">
                                            <property name="content">
                                                <data name="SerialNo21" id="2400">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="2401">
                    <property name="content">
                        <label id="2402">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2403">
                    <property name="content">
                        <label id="2404">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2405">
                    <property name="content">
                        <label id="2406">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2407">
                    <property name="content">
                        <label id="2408">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2409">
                    <property name="content">
                        <label id="2410">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2411">
                    <property name="content">
                        <label id="2412">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2413">
                    <property name="content">
                        <label id="2414">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2415">
                    <property name="content">
                        <label id="2416">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">auto</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["10db"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="1374">
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">medium</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">medium</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">medium</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">medium</property>
            <property name="canShrink">true</property>
            <property name="dataSet">fq10db</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">( (row["Hide"]&lt;1) || ((params["10dbDeg"].value!="0d90d")  || (params["10db"].value!="yes")))</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Hide</property>
                    <text-property name="displayName">Hide</text-property>
                    <expression name="expression" type="javascript">dataSetRow["Hide"]</expression>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <column id="1375"/>
            <row id="1376">
                <cell id="1377">
                    <label id="1378">
                        <property name="fontSize">medium</property>
                        <property name="fontWeight">bold</property>
                        <property name="textAlign">center</property>
                        <text-property name="text">10dB Beamwidth </text-property>
                    </label>
                </cell>
            </row>
            <row id="1379">
                <cell id="1380">
                    <grid id="1381">
                        <column id="1382">
                            <property name="style">BorderStyle</property>
                        </column>
                        <column id="764">
                            <property name="style">BorderStyle</property>
                        </column>
                        <column id="765">
                            <property name="style">BorderStyle</property>
                        </column>
                        <column id="1383">
                            <property name="style">BorderStyle</property>
                        </column>
                        <row id="1384">
                            <cell id="1385">
                                <grid id="769">
                                    <expression name="bookmark" type="javascript">"BMHP"</expression>
                                    <column id="770"/>
                                    <row id="771">
                                        <cell id="772">
                                            <label id="773">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Spot Freq.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="774">
                                        <cell id="775">
                                            <table id="776">
                                                <property name="dataSet">fq10db</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">Frequency</property>
                                                        <text-property name="displayName">frequency</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">frequnit</property>
                                                        <text-property name="displayName">frequnit</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["frequnit"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                </list-property>
                                                <column id="785"/>
                                                <header>
                                                    <row id="777">
                                                        <cell id="778">
                                                            <data id="779">
                                                                <property name="fontSize">small</property>
                                                                <property name="resultSetColumn">frequnit</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="780">
                                                        <cell id="781">
                                                            <data id="782">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">Frequency</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="783">
                                                        <cell id="784"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="786">
                                <grid id="787">
                                    <column id="788"/>
                                    <row id="789">
                                        <cell id="790">
                                            <label id="791">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Beam Max.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="792">
                                        <cell id="793">
                                            <table id="794">
                                                <property name="dataSet">10Db_BW_BMax</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">10Db_BW_BMax</property>
                                                        <text-property name="displayName">10Db_BW_BMax</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="803"/>
                                                <header>
                                                    <row id="795">
                                                        <cell id="796">
                                                            <label id="797">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">10dB BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="798">
                                                        <cell id="799">
                                                            <data id="800">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">10Db_BW_BMax</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="801">
                                                        <cell id="802"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="804">
                                <grid id="805">
                                    <expression name="bookmark" type="javascript">"3db0hp"</expression>
                                    <column id="806"/>
                                    <row id="807">
                                        <cell id="808">
                                            <label id="809">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">0</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="810">
                                        <cell id="811">
                                            <table id="812">
                                                <property name="dataSet">10dbhp0</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">10Db_BW_0</property>
                                                        <text-property name="displayName">10Db_BW_0</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BW_0"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="821"/>
                                                <header>
                                                    <row id="813">
                                                        <cell id="814">
                                                            <label id="815">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">10dB BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="816">
                                                        <cell id="817">
                                                            <data id="818">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">10Db_BW_0</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="819">
                                                        <cell id="820"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="822">
                                <grid id="823">
                                    <expression name="bookmark" type="javascript">"3dbhp90"</expression>
                                    <column id="824"/>
                                    <row id="825">
                                        <cell id="826">
                                            <label id="827">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">90</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="828">
                                        <cell id="829">
                                            <table id="830">
                                                <property name="dataSet">10dbhp90</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">10Db_BW_90</property>
                                                        <text-property name="displayName">10Db_BW_90</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BW_90"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="839"/>
                                                <header>
                                                    <row id="831">
                                                        <cell id="832">
                                                            <label id="833">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">10dB BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="834">
                                                        <cell id="835">
                                                            <data id="836">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">10Db_BW_90</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="837">
                                                        <cell id="838"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                        </row>
                    </grid>
                </cell>
            </row>
        </grid>
        <grid id="840">
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">medium</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">medium</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">medium</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">medium</property>
            <property name="canShrink">true</property>
            <property name="dataSet">fq10db</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">( (row["Hide"]&lt;1) || ((params["10dbDeg"].value=="0d90d") || (params["10dbDeg"].value=="bm") || (params["10db"].value!="yes")))</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Hide</property>
                    <text-property name="displayName">Hide</text-property>
                    <expression name="expression" type="javascript">dataSetRow["Hide"]</expression>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <column id="841"/>
            <row id="842">
                <cell id="843">
                    <label id="844">
                        <property name="fontSize">medium</property>
                        <property name="fontWeight">bold</property>
                        <property name="textAlign">center</property>
                        <text-property name="text">10dB Beamwidth </text-property>
                    </label>
                </cell>
            </row>
            <row id="845">
                <cell id="846">
                    <grid id="847">
                        <column id="848">
                            <property name="style">BorderStyle</property>
                        </column>
                        <column id="850">
                            <property name="style">BorderStyle</property>
                        </column>
                        <column id="851">
                            <property name="style">BorderStyle</property>
                        </column>
                        <row id="852">
                            <cell id="853">
                                <grid id="854">
                                    <expression name="bookmark" type="javascript">"BMHP"</expression>
                                    <column id="855"/>
                                    <row id="856">
                                        <cell id="857">
                                            <label id="858">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Spot Freq.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="859">
                                        <cell id="860">
                                            <table id="861">
                                                <property name="dataSet">fq10db</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">Frequency</property>
                                                        <text-property name="displayName">frequency</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">frequnit</property>
                                                        <text-property name="displayName">frequnit</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["frequnit"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                </list-property>
                                                <column id="870"/>
                                                <header>
                                                    <row id="862">
                                                        <cell id="863">
                                                            <data id="864">
                                                                <property name="fontSize">small</property>
                                                                <property name="resultSetColumn">frequnit</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="865">
                                                        <cell id="866">
                                                            <data id="867">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">Frequency</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="868">
                                                        <cell id="869"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="889">
                                <property name="colSpan">2</property>
                                <property name="rowSpan">1</property>
                                <grid id="890">
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">params["10dbDeg"].value=="90d"</expression>
                                        </structure>
                                    </list-property>
                                    <expression name="bookmark" type="javascript">"3db0hp"</expression>
                                    <column id="891"/>
                                    <row id="892">
                                        <cell id="893">
                                            <label id="894">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">0</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="895">
                                        <cell id="896">
                                            <table id="897">
                                                <property name="dataSet">10dbhp0</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">10Db_BW_0</property>
                                                        <text-property name="displayName">10Db_BW_0</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BW_0"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="906"/>
                                                <header>
                                                    <row id="898">
                                                        <cell id="899">
                                                            <label id="900">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">10dB BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="901">
                                                        <cell id="902">
                                                            <data id="903">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">10Db_BW_0</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="904">
                                                        <cell id="905"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                                <grid id="907">
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">params["10dbDeg"].value=="0d"</expression>
                                        </structure>
                                    </list-property>
                                    <expression name="bookmark" type="javascript">"3dbhp90"</expression>
                                    <column id="908"/>
                                    <row id="909">
                                        <cell id="910">
                                            <label id="911">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">90</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="912">
                                        <cell id="913">
                                            <table id="914">
                                                <property name="dataSet">10dbhp90</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">10Db_BW_90</property>
                                                        <text-property name="displayName">10Db_BW_90</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BW_90"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="923"/>
                                                <header>
                                                    <row id="915">
                                                        <cell id="916">
                                                            <label id="917">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">10dB BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="918">
                                                        <cell id="919">
                                                            <data id="920">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">10Db_BW_90</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="921">
                                                        <cell id="922"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                        </row>
                    </grid>
                </cell>
            </row>
        </grid>
        <grid id="1389">
            <property name="style">BorderStyle</property>
            <property name="canShrink">true</property>
            <property name="dataSet">fq10db</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">( (row["Hide"]&lt;1) || ((params["10dbDeg"].value!="bm")  || (params["10db"].value!="yes")))</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Hide</property>
                    <text-property name="displayName">Hide</text-property>
                    <expression name="expression" type="javascript">dataSetRow["Hide"]</expression>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <column id="1390"/>
            <row id="1391">
                <cell id="1392">
                    <label id="1393">
                        <property name="fontSize">medium</property>
                        <property name="fontWeight">bold</property>
                        <property name="textAlign">center</property>
                        <text-property name="text">10dB Beamwidth </text-property>
                    </label>
                </cell>
            </row>
            <row id="1394">
                <cell id="1395">
                    <grid id="1396">
                        <column id="1397">
                            <property name="style">BorderStyle</property>
                        </column>
                        <column id="1398">
                            <property name="style">BorderStyle</property>
                        </column>
                        <row id="1399">
                            <cell id="1400">
                                <grid id="1401">
                                    <expression name="bookmark" type="javascript">"BMHP"</expression>
                                    <column id="1402"/>
                                    <row id="1403">
                                        <cell id="1404">
                                            <label id="1405">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Spot Freq.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="1406">
                                        <cell id="1407">
                                            <table id="1436">
                                                <property name="dataSet">fq10db</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">Frequency</property>
                                                        <text-property name="displayName">frequency</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">frequnit</property>
                                                        <text-property name="displayName">frequnit</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["frequnit"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                </list-property>
                                                <column id="1445"/>
                                                <header>
                                                    <row id="1437">
                                                        <cell id="1438">
                                                            <data id="1439">
                                                                <property name="fontSize">small</property>
                                                                <property name="resultSetColumn">frequnit</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="1440">
                                                        <cell id="1441">
                                                            <data id="1442">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">Frequency</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="1443">
                                                        <cell id="1444"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="1418">
                                <grid id="1419">
                                    <column id="1420"/>
                                    <row id="1421">
                                        <cell id="1422">
                                            <label id="1423">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Beam Max.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="1424">
                                        <cell id="1425">
                                            <table id="1446">
                                                <property name="dataSet">10Db_BW_BMax</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">10Db_BW_BMax</property>
                                                        <text-property name="displayName">10Db_BW_BMax</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="1455"/>
                                                <header>
                                                    <row id="1447">
                                                        <cell id="1448">
                                                            <label id="1449">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">10dB BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="1450">
                                                        <cell id="1451">
                                                            <data id="1452">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">10Db_BW_BMax</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="1453">
                                                        <cell id="1454"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                        </row>
                    </grid>
                </cell>
            </row>
        </grid>
        <label id="1456">
            <property name="fontWeight">bold</property>
            <property name="pageBreakBefore">always</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <text-property name="text">Polar Plot</text-property>
        </label>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="232">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="240">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="758">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View" id="759">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="760">
                                            <property name="content">
                                                <data name="testproc" id="762">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="246">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View8" id="247">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="248">
                                            <property name="content">
                                                <data name="TestDesc1" id="250">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="252">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View9" id="253">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="254">
                                            <property name="content">
                                                <data name="instruments1" id="256">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="258">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View10" id="259">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="260">
                                            <property name="content">
                                                <data name="calibration1" id="262">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="264">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View11" id="265">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="266">
                                            <property name="content">
                                                <data name="testcenter1" id="268">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="276">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View12" id="277">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="278">
                                            <property name="content">
                                                <data name="Productname" id="280">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="285">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View13" id="286">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="287">
                                            <property name="content">
                                                <data name="version" id="289">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="291">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View14" id="292">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="293">
                                            <property name="content">
                                                <data name="SerialNo" id="295">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="300">
                            <property name="dimension">Group10</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View15" id="301">
                                    <property name="level">Group10/Frequency</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="302">
                                            <property name="content">
                                                <data name="Frequency" id="304">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Frequency</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                            <property name="width">357px</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="761">
                    <property name="content">
                        <label id="763">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="249">
                    <property name="content">
                        <label id="251">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="255">
                    <property name="content">
                        <label id="257">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="261">
                    <property name="content">
                        <label id="263">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="267">
                    <property name="content">
                        <label id="269">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="279">
                    <property name="content">
                        <label id="281">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="288">
                    <property name="content">
                        <label id="290">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="294">
                    <property name="content">
                        <label id="296">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="303">
                    <property name="content">
                        <label id="305">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">auto</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq1"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression">dimension["Group10"]["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="9">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGPITCH.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX1&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN1&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq1"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2099">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq1"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2100"/>
            <row id="2101">
                <cell id="2102">
                    <table id="2103">
                        <property name="dataSet">PolarGrid1</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">3Db_BW_BMax</property>
                                <text-property name="displayName">3Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BW_BMax</property>
                                <text-property name="displayName">10Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2113"/>
                        <column id="2114"/>
                        <header>
                            <row id="2104">
                                <cell id="2105">
                                    <label id="2115">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                                <cell id="2106">
                                    <label id="2117">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2107">
                                <cell id="2108">
                                    <data id="2116">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="2109">
                                    <data id="2118">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2110">
                                <cell id="2111"/>
                                <cell id="2112"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1494">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1495">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1496">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1" id="1497">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1498">
                                            <property name="content">
                                                <data name="testproc1" id="1499">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1500">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View81" id="1501">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1502">
                                            <property name="content">
                                                <data name="TestDesc11" id="1503">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1504">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View91" id="1505">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1506">
                                            <property name="content">
                                                <data name="instruments11" id="1507">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1508">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View101" id="1509">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1510">
                                            <property name="content">
                                                <data name="calibration11" id="1511">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1512">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View111" id="1513">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1514">
                                            <property name="content">
                                                <data name="testcenter11" id="1515">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1516">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View121" id="1517">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1518">
                                            <property name="content">
                                                <data name="Productname1" id="1519">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1520">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View131" id="1521">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1522">
                                            <property name="content">
                                                <data name="version1" id="1523">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1524">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View141" id="1525">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1526">
                                            <property name="content">
                                                <data name="SerialNo1" id="1527">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1551">
                            <property name="dimension">Group</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View2" id="1552">
                                    <property name="level">Group/frequency2</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1553">
                                            <property name="content">
                                                <data name="frequency2" id="1555">
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frequency2</property>
                                                </data>
                                            </property>
                                            <property name="style">BorderStyle</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1532">
                    <property name="content">
                        <label id="1533">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1534">
                    <property name="content">
                        <label id="1535">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1536">
                    <property name="content">
                        <label id="1537">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1538">
                    <property name="content">
                        <label id="1539">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1540">
                    <property name="content">
                        <label id="1541">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1542">
                    <property name="content">
                        <label id="1543">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1544">
                    <property name="content">
                        <label id="1545">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1548">
                    <property name="content">
                        <label id="1549">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1554">
                    <property name="content">
                        <label id="1556">
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq2"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency2</property>
                    <expression name="expression">dimension["Group"]["frequency2"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="1550">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGPITCH.png</URL>
      <Data>iVBORw0KGgoAAAANSUhEUgAAAt0AAAJYCAYAAAC+SlqZAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1MAAA6mAAADqYAAAXb5JfxUYAAdyoSURBVHja7L1pVyLptrU96ftWEFBUFBHs0jaz3j3OM8b+a89f2x/O2bs07VFBRUEEEaTv+/dDPcExTdDoMK2qdY3hqCyUACKCiHmve95zSfr9fh8EQRAEQRAEQYwNKe0CgiAIgiAIgiDRTRAEQRAEQRAkugmCIAiCIAiCINFNEARBEARBECS6CYIgCIIgCIJEN0EQBEEQBEEQJLoJgiAIgiAIgkQ3QRAEQRAEQZDoJgiCIAiCIAiCRDdBEARBEARBkOgmCIIgCIIgCIJEN0EQBEEQBEGQ6CYIgiAIgiAIEt0EQRAEQRAEQZDoJgiCIAiCIAgS3QRBEARBEARBopsgCIIgCIIgCBLdBEEQBEEQBEGimyAIgiAIgiBIdBMEQRAEQRAEQaKbIAiCIAiCIEh0EwRBEARBEARBopsgCIIgCIIgSHQTBEEQBEEQBIlugiAIgiAIgiBIdBMEQRAEQRAEiW6CIAiCIAiCINFNEARBEARBEASJboIgCIIgCIIg0U0QBEEQBEEQBIlugiAIgiAIgiDRTRAEQRAEQRAkugmCIAiCIAiCINFNEARBEARBECS6CYIgCIIgCIJEN0EQBEEQBEEQJLoJgiAIgiAIgkQ3QRAEQRAEQZDoJgiCIAiCIAiCRDdBEARBEARBkOgmCIIgCIIgCIJEN0EQBEEQBEGQ6CYIgiAIgiAIEt0EQRAEQRAEQZDoJgiCIAiCIAgS3QRBEARBEARBopsgCIIgCIIgCBLdBEEQBEEQBEGimyAIgiAIgiAIEt0EQRAEQRAEQaKbIAiCIAiCIP4qyGkXEATxZ0IikQz+3e/3aYcQBEEQJLoJgvj7iN6Xj7/83ajH+b7269cUKrzFfH8EQRAEQaKbIAhRBPdboneUYP3sQpaENkEQBDFuyNNNEIRgcTqq4ixGJfojBxEEQRAEMS6o0k0QBC+x+lqEs7GdfEaBK9b7GybgyX9OEARBkOgmiL+oEH5L9L78nRBB+HIb/X5/qNh86/HPgljv7/U+HrYtqqoTBEGQ6CYI4i8guLl4rUkQir/vhwlvgiAIgmAgTzdB/AXg6rUWIjDFeFzI55RIJIMfsZNLxNz3BEEQBPESqnQTxF8ILl5rIaL39fa4Pv5ZRO443h9BEARBkOgmiF8shkcJu2F2Dz5Ck63Xehyil+ICCYIgCIJEN0H8UsH9ln96lMWBxCDx3rkkZIBGEARBkOgmiL8Ub4mgYYvw+FSj/6w52X/14y6mdeUt/zkdY4IgCBLdBEG8Ek1sBBJXsfYZvNYksvtjE8OjElJoUEUQBPEn0gF9umITxIeLb0ZAvfZgv/X3BCGW958gCIL4eKjSTRC/WET91cV1q9VCu91Gu93+4d/M71qtFrrdLgCg3W4P/s2IyFarxXq/qFSqH/apTCaDQqH44d9KpRISiQQKhQJyuRwqleqHf/+Z+OzNhwiCIIgX12iqdBPE+IX1e41o3qp6f2YhxQjoer2OWq2GTqczENL1en0gqLVa7UDwKpVKyOVySCSSwf/LZDIAgEKhGPyb+eyMSH7Jv/71L/zzn//86f00m80f9lW32x0IfObfrVYLvV4PnU4HnU4HzWYThUIBSqUSvV4PcrkcGo0GKpVq8N50Oh3kcvngc3yWc4nr7wmCIIhfB1W6CeKVaGHgGu33VmQeF//0r/Zbv379Xq83ENXVahWVSgWdTgf1eh29Xg8KhQIajQY6nQ4ymQxGoxFKpXIgUPf29rCxsQGlUjn2986nUt1ut7G/v49//OMfAyFer9fRbDbRarXQ6XTw+PiITqeDarUKiUQy+GxarRZarRY6nQ5arRZSqXToPvxVIpzPuU5ef4IgCBLdBPGhAuY9/yyXijQboc3l78dBu91GuVzG+fk5nE4nKpUKqtUqer3eQFRrtVo4HI6B0B5WhX6NUqlEu93+ENHNh1arNXhvcrkccrkcarX6zb+v1+tot9uoVqvIZrOIx+Oo1WqQSqXQarWoVqvweDzQ6XTQ6/Vj++x8B2ijzt0/0ywLQRAEiW6C+JPCNdrvz0yr1RqI6lqthmKxiE6nA61WC5lMBplMhoWFBVHsFEqlEq1WCzqd7lPui3a7zekzMpYYALDZbD/8rtPpIJvN4vb2Fs1mE7lcDtVqFWq1elARZ374VOXFSkghIU0QBEGimyB+OVyi/f4sg4l6vY58Po9yuYxSqYR2uz0Qf3q9HtPT09Dr9QCAy8tL6HQ6mEwmUV5foVCg1Wp96gGIWD5txqtuMpmwuLgI4A97zssBDiPE+/0+/uu//ou+cARBECS6CeLvyesFjX+2KfZer4dqtYpcLodisYhSqQStVguDwQCj0QiPx/NTysdLdDodqtWqaO+HsZd8VsS2vlSr1R+q+lKpFEajEUaj8Ye/azabSKVSqFQqKJVKqFar0Gq1mJiYgNlshtFoHHjExz3IpMo3QRAEiW6C+BR85mi/breLarWKQqGAYrGIYrEIg8EAg8GAmZkZ6PV6TpVcnU6HZDIpquj+u1S6GdHtdDrf/TuVSvXD33U6HVQqFeTzedze3qJarcJsNsNkMg1EOAlugiAIEt0E8ZcQ1u95Zj+LSGk0Gsjlcnh+fkY+n4dOp4PVasX09DRWVlZ+iN3jyjgq3WJuT2za7TYMBoOoopuPf10ul8NsNsNsNmN+fh7tdhuFQgHZbBbRaBQymWxQBTebzW8u9iTBTRAEQaKbID4tnznar9frIZ/Po1AoIJfLodPpwGq1wul0otvtYm5uDlarVZTXUqvV6Ha76HQ6kMuFXyIUCsWnt5eIVelmssA1Go0o+81ut0Mmk6HZbMLn8yGfzyOTySASiUCpVMJqtcJsNsNisXCyojDn7evz91fHVRIEQZDoJohPDtfM4VHtsz9TtF+328Xz8zMymQxKpRLUajUsFguWl5cHix6BP6re+XxeNNEN/FHtrlQqMJvNgrf1Z7CXiOXpZnzZYpLP52E2mweZ4NPT0+j3+yiXy8jlcri/v0coFILZbIbdbofNZntXgL913go9p7l+5wiCIEh0E8SfSHDzyRz+jDf9breLdDqNfD6PYrEInU4Hu90Or9c7snpqsVgQDodFfR+MxeTvILrFrHTztZa8RaFQgM/n++mcZxZnejyewcDr8fERt7e3MBgMsNlssNlsgqxGYn0XSWgTBEGQ6Cb+AnBtSPPZvKztdhvpdBqFQgGFQgFGoxGTk5NYWlpiZe8wGAyD7oliVWyZSrcYfHZ7idiVbjFFd7vdRqPReNdzrlar4XK54HK5BgO3VCqFm5ubgQVlcnJy7AL8z/KdIwiCINFNEAIYla897PFf7VvtdrsoFApIpVID+8Dk5CQCgQAvYWSxWJDP5+FwOEQT3U9PT6IdF7lcLmpFWSx6vR76/b5oYrRarWJiYkK098ecG1yaMslksoEA7/V6eH5+RiqVQiQSwcTEBBwOBywWy4c3eiKvOEEQJLoJ4i/C63ztUY8PE+UfJQIqlQqenp6QSCSg1WrhdDqxtLQkWIyOQ3SLnWAidjSfGIg9EBC70s2Ibr5IpVJMTk5icnJykAseDAahVCrhdDoxOTkpugd92PfqV37nCIIgSHQTxN+ETqeDVCqFp6cntFotTE5ODha9uVwuUV7DYrEgGo2Kd2GQy6FQKFCv10VL4viMreDFtJa02230+31RG+0UCgXMzMyIsi2VSgWlUgmbzYbZ2VmkUikcHx9DrVbD6XTC4XCIVvEnUU0QBEGim/gLMuoGz/VxsalWq0ilUkin0zAYDINYP6lUimw2i3g8LproVqvVkMlkolZamWq3GKL7s3al/MyLKOv1Ovr9vqiV6HQ6jenpaej1eiwuLsLr9SKTySCdTiMWi8HpdMLpdAo65sO+XyTCCYIgSHQTfwFGZQtzfVys95JKpZBMJtHr9eBwOLC7u/uTsLNarQiHw2g0GoKbnDAwFhOxRbfNZhNFdH/GBBMxLS+fzVrymmaz+ZPnXCKRDLWfyOVyTE1NcbYrUf43QRAEiW7ibyC8xXicL41GA4+Pj0ilUjAajfD5fG+27WbEztPTE+bm5kQT3Y+Pj3C73aKJ7ufnZ1G2xdhLPhvtdlvU5JKX+elCKRQKoi7KfHp6gt1uH7mAUqVSYW5uDnNzcygUCkgmk4hGo3A4HHC5XFCpVLy/hyS0CYIgACntAuJXIZFIBj9CHv+V5HI5XF5e4vDwEBKJBFtbW1hdXX1TcDM4HA7REkIAwGw2o1gsiiZuxFxM+VntJZ+90m2xWETbXjqdxuTkJOtzaWVlBRsbGwCA79+/IxQKoVgs0oWLIAiCJ1TpJn6Z4ObS0Oa9phsfSafTwfPzM5LJJCQSCVwuF5aWljgvQmOyl8vl8rs5zKy+zHI5dDodisWiKLYErVaLRqOBXq/HqcX4KNH9WSvdYlWnxRTd5XJ5sPBRDCqVCrrdLkwmE6fnqdVqeDweuN1uZDIZ3NzcAACmp6cxOTkp+Lx47xrB8JniPgmCIEh0E38qPsr2ISb1en0Q92exWODxeATnHTPVbjFEN/C/vm4xRLdEIoFWq0W1WhX8/j6zvUSMSnej0YBcLmfVzIgNYvu5uVS5Rw3omOxvJvc7Go1ienoaDodD1MQWPoNygiCIPwNkLyF+KYxdZFjawWe5odbrdYTDYezv76PZbGJzcxMrKyuwWq2CrS4OhwPpdFq0z8mIbrEQy2Lyme0lYghGsa0lhUJBVGvJ09OTaBnuNpsNa2trCAQCiEaj2Nvbw+3trajHl4Q0QRAkuglCZIYlG7z1+EdSLpcRDAZxeHgIhUIxqOiJKa7UajW0Wi1yuZwo2zMajajX66IJIDFF91+50i2m6O71eiiVSqJVuvP5PFQqlehNcAqFApxOJ3Z2dtBut7G3t4e7uztRj/NnGnwTBEGQ6CaIMYjt8/NznJycQK1WY3d3FwsLC5ibm8Pj4yO63a6oryfmgkqJRAKTyYRCofCpRLdEIoFMJkOn0/lUx1qshZRiiu5isQi9Xi9aoxqh1pJhdLtdJJNJuN1uaDQa+P1+7O7uotfrYX9/H9fX12g2m2MblBMEQZDoJggOIozL4x9BrVZDOBzGyckJNBoNvn37hsXFxUFUmlqtHsTyiYndbkc+nxdNkIppMdHr9ahUKqJs67NVuzudDmQymSiLAcUU3WL6uXu9Hp6fn0UX3Y+PjzCbzT800VGpVPB6vdjd3YVEIsHe3h4ikcintBURBEGQ6Cb+NjDVq9fTx1wfF4Nms4mbmxucnJxAoVDgt99+w8LCwlCv78zMDB4eHkR9fblcDovFgkwm8+lEN7MPxBBOn010i2Ut6ff7qNfrotk3xPRzZ7NZGI1GURc69vt9PDw8jGxPr1KpsLi4iG/fvqHX62Fvbw+xWIzTDBFVtgmCINFNECILb+ZHyON86XQ6iEajODo6gkKhwNevX7GwsPCmENPr9dDpdKLmawPiWky0Wu1ACIqBTqcTpdr92RJMxFpEWa/XoVKpRKmYdzod1Go1VjnvbHh6ehK9yp1Op6HVat9NtFGpVPD5fNjZ2UGtVsPvv/+ORCKBXq8n+qCcIAiCRDdBfFKxn0ql8P37d/R6PWxubmJubo513NvMzAzi8bio78lqtaJWq6HRaIiyPTGr3X/VBJPPuIiSsZaIUeltt9soFouw2Wyi7rd4PD6yyj0MtVqN5eVlbGxsIJfLYW9vD09PT+8K5o8afBMEQZDoJogxkM1msbe3h1wuhy9fvmBhYQFqtZrTNsxmM+RyuWgt0oEf28L/lUX3Z6t0f1bRLQaZTAZWq1W0BZnAHx1YJRIJL/uLTqfD+vo6lpeXkUwm8f37d1HjLQmCIEh0E8QvholgCwaDuL+/x/LyMlZWVgR5cGdmZnB/fy/q+xTTYmKxWFAoFESpBv5VRXe73f50Gd1i+rnFzOZm4FrlHobJZMLW1hbm5+dxfX2Ns7MzUc4vgiAIEt0E8QtpNpv4n//5H4RCIdhsNmxuboril7XZbOh2u6JF8wE/toUXikKhgFqtFmVbjOgWKuAVCgXZS96g0Wig2+2Ksq16vY5GoyFqg51yuYxGowG73S7K9mw2G75+/QqdToeDgwPc3d2x8nvz4aUPfNTjtHiTIAgS3cSngs3N6zPc1JiEhYODA+h0Ouh0OjidTlHfwzi83WJXu8WYvpfJZFCpVIIXZn5Ge4nQSnev10Oz2fwhOo8vhUJBNGtJOp2G3W4X9XyPx+Nwu92iblMikaDZbGJqagrNZhPfv38XfZEys+DyvUZc5BEnCIJEN/GpBPewm9dnu6nlcjl8//4d1WoVW1tb2NjYQLlcRrFYFF0gV6tV0XKsmW2K1Rb+s/m6/4qRgdVqFVqtVhQhms/nP621pF6vo1AowOVyiXoMSqUSisUiFhYWEAgEsLy8jEQigZOTE9RqNdEG4G9dzwiCIEh0E5+OUTeoz3JTazabuLi4wPX1NRYWFuD3+6HRaCCVSrGwsIBIJCL6IMTtdota7RazLbzJZEKlUhGlg6YYovuz2UvEWEgp9iJKMUR3uVyGRCJ5N9KPC/F4HFNTU6LEIr7k5uYG8/Pzg+0aDAZsb29jYmICx8fHolpOhsUMkrWEIAgS3cSnhktG7kfd1JLJJI6OjqDVarG7u4uJiYkffj85OQmpVIpUKiXq67pcLuTzedGi/gDxLCZSqRRGo1EU37kYolsqlUIqlX6aVvBiLKQUS3RXKhXI5fJB91MhiJ3N3Wq1kMlkMD09Ler+f3p6gkQiGVqRd7vd+Pr1K+r1Ovb390UZhL6eiXs5A0et5gmCINFNfEreukm9bmQx7ptauVzG0dER0uk0vnz5Ao/HMzIizev14u7uTpTKL4NMJsPU1JSo1W4x28KLZTERqx38Z2mQ0+/30el0Pk2lW6zUkn6/j3Q6Laq1JJFIwOFwiLLolKHX6+Hu7g5er/fNc2VlZQWLi4u4urpCOBymlvIEQZDoJojXgnvcMDfts7MzuFwubGxsvBsBaDAYYLVaEYvFRH0v09PTSKfTogkCMdvCiyW6NRoN2u224AHLZ2mQ0263WTdD+gjRLZa1JJ/PQ6PRcM6eH0W328Xj4yPcbreo+//+/h4mk4lVktDExAS+fv0KuVyO/f19JJNJTteZUYN9qmwTBEGim/jUopqL4B7XTa1UKuHw8BCNRgM7OzucUknm5+eRSqVEa5EO/FGRm5ycxMPDg2jbFMtiotfr0W630Ww2BW9Lq9X+ZRZTimEt6XQ66Ha7gi0h/X4fxWJRlOQSsRdQPj4+wmKxiCbigT/WXiSTSSwsLLB+jkwmg9frxdraGpLJJE5PT1mfR9RSniAIEt3En45RN6mXKSYv/dti39T6/T6i0SjC4TDm5uawvLzMWfAolUrMzMzg9vZW1H0zMzODx8dH0awrYraFF6va/VdKMPlMiyiLxSK0Wq3gynu320UulxMtR5uJ3RTaDOc1t7e3mJqa4jVYMRqN2NnZgclkwsHBAeuBKbWUJwiCRDfxpxTer29Sr73bo34nhFKphIODA3Q6HWxvbwsSFtPT06hWq6K2oFar1bBYLEgmk6JsT8y28J9JdH8WT/dnWkQplp/7+fkZJpNJNO91Op2GVquFXq8Xbb8zEYGzs7OCvhsejwcbGxtIJpM4OTkRdSEzQRAEiW7ib0m320U8HsfV1RWWlpawuLg4cqEk65P+RYSgmBWu2dlZJBIJ0bYplsXks1W6P4un+7NUusXyc4ttLRGj5ftrXkcECkGr1WJra2sQL5jNZumCSRAEiW6C4EOpVML//M//oFAoYGNjQ5T27Qw2mw1KpRKPj4+ibZPpfClWLKFYbeFVKhUUCoXg9BExEkw+k73kM1S6O50OqtWq4HO71WqhXC7/FJXJl2w2C4lEImob+bciAoXgdrvh8/lwfn6Oq6srsooQBEGimyC4kEqlcHZ2BrvdLlrSxGu8Xi+i0aioudGzs7Oixgd+pmq3QqGAVCoVtCjzM9lLPkOlu1AowGg0Cq78ptNp2Gw20ZrXxONxQRaQ17CJCORLv99HLBbD4uIiJBIJvn//jlKpNJbz5vWCbWquQxAEiW7izZvGsJsE18fHRavVwunpKR4fH7G5uYlAIACFQiF6zB/wR2XabrcjGo2Ktk3GUytG3B8jusVoC/9ZLCafxV4idCFls9mEVCoVLNzF8nOLaS0plUpoNpuw2Wyi7W8uEYF8tq1QKDA1NQWfzwefz4fLy0tR04RGCW5qrkMQBIluYuRNY9hNguvj4yKbzeLg4AAajQYbGxuDKqLf78fj4+NYqlcejwfpdBq1Wk20bc7MzIhW7RarLbzZbEapVBLcUlsM0f1XWEj5mfzctVoN7XZblMhB4H+93GJ93/lEBLKlXC4jmUzC7/f/cK5vb28jn8/j7OxMlJksihQkCIJEN8GJUTeNX30zeRkFuLi4CJ/P98M0uVKphM/nQygUErWbJPCH3WFubg6RSES0bdpsNnS7XVHarwPiWExkMhn0ej2KxeIvFd1SqRQSiUT048gVoZVuMUR3s9lEu90WnA4iZtv3Wq2GUqkEp9Mp2r4WEhH4Fr1eD6FQCIuLiz8NoBQKBdbX1wfRgkLXRRAEQYiBnHbB34+XOdq/mlarhYuLC/T7/R+q28OEbDabRSQSwdLSkqjvYWpqCslkEtlsVrSFaDMzM7i/vxel+mi323F7e4tOpyPI285YTIRUVvV6vaBp+1arBblcjnQ6DYlEMuhyyTSaabVa6PV6P3W/ZB5/yb/+9a8f/l+lUg3ObalUOhBizL/lcjlkMhmUSiWazSZqtRr6/T5UKhXnRJxqtSr42BYKBVHOj3Q6jbW1NVHO24eHB0xNTYnmDWciAl9WosUU83q9/s340NnZWRgMBgSDQbjdbl5pLFTlJgiCRDfBm5dNbYZ1kfyoG0yhUMDl5SXsdjvm5+ffFT6Li4v4/v27qOKY+cxerxc3NzewWq2iTKs7HA5Eo1FUKhXBlcyXbeFdLpcg0X19fS3ovWi1WtTr9aF2o06nM2joU6/X0Ww20Wq10Gg00Gw20el0oFAo0Ov1kEqlBg1hZDIZNBrNQBBLpVLI5fIfBhjM4y8F9z//+c8fXr/ZbA7O3W63O/COM/9mhDyTwJJIJAbvjRHmKpXqhx+NRgOtVvtTJbVarWJ6elrQvhTDWlIsFiGTyUSxurRaLWQyGfz222+ifbfEjAh8ve+en5+xu7vL6rzf3d3F+fk5arUar9jRl+c6iXCCIEh0E6KIz4+6mTw8PCAej2NhYYH1AjCZTIZAIICLiwvs7u6K1gQE+KMDpFarRSKRgNvtFmVfut1u3N/fY2VlRRQRH4/HBYlug8GARqMhKLmDEaepVArdbhf1eh21Wm0wfa/VaqHRaKDRaKDX638QsMxrnp+fY3JyUrTOiQxs7QuNRgO5XA5fvnwZPNZut9FqtQYDhWaziWKxiKenJ1SrVfR6Pej1+oEIZ6rkQtY65PN5eDweQZ9ZzAWUDw8PcDgcoiUFjSsisNPpIBwOw+/3s36vCoUCm5ubiEQiODw8xPLyMuvB8MtrIglugiBIdBOCRfVH3Ux6vR6ur69RKpWwtbUFtVrN6fkmkwlOpxPhcFi0KXUGr9eLo6MjOBwOUQS9y+XC/f096vU6NBqN4EFBOBxGo9HgvM9eHmOz2Yx8Ps/KA9zv9wce33K5jFqthlqthm63i4eHB5jNZuh0OthsNuj1etb77FcnmAxbRKlQKKBQKEZWjLvdLsrlMhqNxmBB7+XlJTqdDnQ6HdRqNQwGAwwGA/R6/buV3Wq1CqlUyvtYMsfn+fkZOzs7gvdJt9tFKpXC9va2aN/zu7s7UQacr7m+vobNZuM1S+D1emE2m3F2dsZpwD9q/78ccJEYJwiCRDfx7k3iZVrJy9+JfVNpNpsIBoPQaDTY2triXVHzeDw4PDzE4+OjoMrvazQaDRwOB+7u7kTxjctkMkxNTSEejwve3su28HNzc7y3w/i6h4lupsFKuVxGqVRCqVSCUqmE0WiEwWCAzWYbNP/p9XqYn5/n9R5+dYIJn0WUMpls4L+Wy+VotVpYW1tDq9VCvV5HtVodJGk0m03o9frBfjOZTD+JfDGiArPZLHQ6nSgLFJPJJCwWi6BBwEvGFRGYTqdRqVQEDTQmJiawubmJs7Mz1Go1eDwe1rMVr6+BJLQJgiDRTbC+abx34xDrppLNZhEOhzE7O4vp6WlBvmmJRILl5WUcHx/DbDYLriK/ZG5uDvv7+6J4sQFgenoae3t78Hg8gjsgOhwOXF5eChbd9/f3AP6o+JbLZeTzeWSzWbRarYFInJqaQiAQGPqehXbdFKM7phDEjAtUKpVQKpUwmUyD33c6ncGg5fHxEeFwGAqFAjabDUajESaTCfl8XrDtQixrSb/fRyKREG3miIkIFKMC/3q7Nzc3WF9fF+wR12g02NnZweXlJYLBIJaXl8fSgIsgCIJEN/GhxGIxJJNJBAIBWK1WUbap1WoxNzeHUCiEzc1N0TKF5XI5PB4Pbm5usLm5KXh7CoUCDocDiUSCd2WY4WVbeObfXGA82N1uF3t7e2i329DpdDCbzQOPK5v9KLQd/GewlwiNC3yrcYxcLofVav3hXK9Wq8hkMkgmkwiHw+j1etBqtZDJZDAajZwFX6fTQaFQQCAQELw/np6eoNPpRBlkAuOLCAyHw5ienuZ17g9DJpNhbW0Nd3d3ODg4wJcvX0QdwBMEQZDoJj6MTqeDSCSCfD6Pzc1N0W9o09PTyGazuL+/F1T9fY3L5UIymUQmkxFlsZ/b7cbh4SFmZ2c5pya8hsnsZis8Go0G8vk8crkcisUiNBoNVCoVjEYjFhcXeVUM1Wo1Op0O7wjDz2AvESIIq9Uq5/NNp9MNquOFQgFXV1eDAWm1WoXJZILdbofZbGZl8chkMrBYLILPJ+CPZjg+n0+UfTuuiMBEIoFutytqa3qG+fl5aDQaHB8fw+/3i1YYIAiCINFNfJiw+f3332EwGLC7uzu2qVu/34+DgwNYrVbRKmDAHwuuwuEwJiYmBE9lq9VqWCwWJJNJXjnBr0X34eEhvF7vyKp0rVbD8/Mznp6e0Gq1YDQaYbfb4fV6oVarkclk8PT0JOhzMU1yXtoq/iyiW0hDml6vh0ajAa1Wy/v1i8UibDbboENjs9lEoVDA8/Mzbm9voVKpYLPZMDk5OXKg+vT0JPhcAv6wfb30qwtlHBGBtVoNsVgMW1tbY+uK63Q6IZFIEAwGMT8/L8q+JQiCINFNjJ1qtYqLiwtMTEyI0nr8LVQq1aBb5c7Ojmg3e7PZDIPBgHg8LkoVfXZ2Fqenp5ienhb0Hl+2hX+ZVV6v15HJZJDJZNDpdAaizmKx/PR6FosF4XBYUNydENGtUCj+dAspXwpAjUYjSPzl8/kfzimVSgWHwzHwZ+fzeeTzeZyeng684JOTk4MKONPYR4yKLNPyXQzGERHY7/cRCoXg8XjGav1otVqDBdSJRAKtVgsLCwtjE/kEQZDoJgjBVCoVBINBeDweOJ1OxONxBINBbG5uit4gg8Fut+P5+RmRSES0aXIAWFhYwOHhIZxOp2B/KuOZfXp6Epy4wlhM9Hr9D0LbbrfD7/e/W8WVy+XQarUolUq8RPNL0c0HmUw2aAUvhj2CK0IWUtZqNUGNaJjmPG/td4vFAovFgoWFBVQqFTw/P+P09BRKpRI2mw3tdht2u12wICwWi2i1WqJYqMYVERiLxaBQKDA1NTW286HX6yEYDGJqagpOpxN2ux0XFxcIhULw+/1juW69jmh9fSwpFYUg/ppIaRf8+ZBIJIOfYb976+/HWbl5fn5GMBjE0tISnE4ngD/aoet0OlxeXo51n/h8PuRyOeRyOdG2qVar4XK5cHd3J8r2ZmdnEY/HBW2j1Wqh2+3i+fkZBwcHaLVa8Hq92N3dhcfjYW2bYKIDhQwi+Ipu4NdWu4VUuiuViiDRXSwWYTAYWAs5vV4Pj8eDb9++YX5+Ho1GA/F4HOVyedCgiC/xeFyURlDAeCICy+UyHh8fx9JC/iWhUAharXbgF2cWWEqlUpydnYm+6HfUNZiJaSXBTRAkuolPJLhfXpxftycexbgv6KlUCldXV1hZWflp2ntpaQntdls08ToMuVwOv9+Pq6srUW+Ss7OzKBQKg4YoQjCZTFAoFMhkMpye1+/38fT0hPPzc+zt7SGfz8NgMGBubg4LCwswGo2cB1NCRfefOcFEaKVbiJ9bSOt3pjGUSqXC1NQU0uk0/v3vf+Py8pLzsWS6iDKDYyEwEYGMR10Mer0eQqEQFhcXBUdtvkU0GkWz2fwpR18ikcDv98NkMuH4+Bj1el3U6/d7jxEEQaKb+ARw7Sj5ERf0u7s7xGIxbG5uDq10SSQSrK6uDhbwjQuz2Qy73Y7r62vRtimTyTA/P4+bmxvRRDzbanez2UQ0GsW///1vPDw8wGQy4bfffsP6+jpmZ2c5i/fXAq5araLT6fAe5MjlcjQaDd6i+1dUujudzsDewodqtSooWk+I6Ab+N5vb6XTiy5cv+Pr1KwwGA66vr/Gf//wH8Xic1WAmHo8LXl/AMI6IwEgkAoPBIIr1ZRTpdBpPT0+DqvYwPB4P3G43Tk5OUC6Xx1pMGfdMJEEQJLoJgRdpRlC/JazHeUG/urpCLpfD1tbWmxVAhUKBtbU1RCIRFIvFse2X+fl51Go1UcW9w+GARCIRZZsTExPodrtvViYLhQKCweDAPrK6uort7W243e6BLcJqtaJWq/EWvRKJBCaTCYVCgfdnEWIx+VX2EiHWkm63i3a7zbtrY6vVQrPZFJSyk06nf+gmqlKp4Ha78e3bNwQCAZTLZfz+++8Ih8Mjq7OtVgvPz8+i+KSZiEAxo/yYZk2Li4tjOw9KpRJubm6wtrb27vngcrmwtLSEYDAoSHiPKoC8nIUUsriZIAgS3cSYYHuBHtcFvd/v4/z8HOVyGV++fGE1BazVarG8vIyLiwvRpmt/OqGlUiwvLyMSifAWpMPwer24u7sT5KFlGFbt7vV6SCQSOD4+RiQSwcTEBL59+4alpSWYTKafjtvLtvB8+ZW+7l9lLxFiLalWq4KsJYVCQVA0Xz6fh0qlGvkezGYzVlZW8O3bN+h0OpyenuLs7AyZTOYHsffw8ACn0ylKjKfYEYGdTgfhcBiBQGBsMaPNZhMXFxfw+/2s/flWqxV+vx/BYBDZbFZwsYT5N0EQJLoJ4t0b4/HxMXq9HjY3NzlVDi0WCzweD4LBIG9rAxsxODMzg1AoJNo2jUYjzGbzoIW6ECYnJ1Gr1VCpVNDpdJBIJLC/v49SqQSPx4Pt7W24XK53RQeTYvKrRLcQX/evspcIqXS/bP/OVzSLYS1hs2/dbje+fv2K6elpJJNJHB4eDnLbU6mUKAsoxxEReHV1NWgSNA663S6CwSDcbvcPkZtshff6+jqurq6QSqV4F0pez06S+CYIEt3EJ4XrBVrsC3qn08Hp6Sm0Wi3W1tZ4Rb65XC5YrVZcXFyMzW8+MzMDiUQiOC3kJQsLC3h8fBRcQWeEyvn5OX7//XdUKhV8+fIFy8vLMJvNrI/Zy7bwfAcn3W6X9+f5M9pLhFa6f5Xo7vV6yGaznDzOUqkUVqsVGxsb8Hq9eH5+xv7+PpRKpeCoRiYi0Ov1inZs0uk0qtUq5ufnx3b8Q6EQDAYD70GHXq/H+vo6bm9v8fj4KMp7YmYgX1sGCYIg0U38YrheoMW8oDebTZyenkKn02FpaUmQoPd6vZBKpaItUBxGIBBAPB4XlLLxEqaCeHt7y3sb9Xod4XAYqVQK7XYbX758gd/v593441dWu7VaLRqNBq/mR7/SXvIrKt2MnYrvcX5+fobRaOQ9YDCbzVheXoZUKoXBYMD+/j5ubm7QbDZ5bU/siMBms4mbm5vBexwHt7e36HQ6grP89Xo9vnz5gru7Ozw8PPC+jr/+f4oLJAgS3cQnFd6jLtDvLdThS6PRwPHxMSwWi2DBzbC8vIxisYhEIjGW/aRSqeD1ehEKhUTriul2u1EulzkvQKxUKgiFQjg5OYFWq8W3b9/gdrsFV8scDgfS6TTvYytEdEskEmg0GtRqNV6i+1fZS35FpVuotSSdTgu2cTANlfx+/6B768HBAWfxPY6IwHA4DLfbLSgZ5r3P/vz8jNXVVVGuXXq9Hpubm0gkEohGo3RTIgiCRDchHMZ+cHJyAofDgfn5edEsK0wTivv7e1Gb2rwWpVqtVrSMcKlUioWFBUQiEdZi++LiAsFgEDqdDl+/fsXMzAxkMhmmp6eRyWQEic+XbeE/WnQD/C0mv0p08610M++Vr2AXIrrb7TaKxSJnD/JrHh4eBi3flUolFhYWsLu7y1l8ix0RmEgk0O12RWtH/5pisYhIJIK1tTVRF2dqtVpsbGzg6ekJ0WhUlEXWBEGQ6Cb+xoJ7f38fR0dHcDgc8Hg8or+GWq3G6uoqQqGQoA6Hb7G0tIRMJiMoHu8ldrsdcrn8zSo1k5AQDAZhMBh+ENsMCoUCDoeD9xT1y4EFX4uJUqmESqUS5Avnc9xkMhn6/b5oMxBcxDMf0S2kyt3v9wUll6TTaUxMTAjyYT8/P0Mul//0HoaJ70gkMlJAih0RWKvVEIvFEAgExrKgsNFo4OLiAsvLy4KSZ966fm1sbODx8RH/+c9/Pvx8JgiCRDfxF6HdbqPf76PT6YwtTQD4IxlkcXERwWBwLD5fpltlKBQSLTHF6/UiGo3+tL12u43b21scHBxAq9UOFdsvcbvdgtt52+125PN53p9NSLVbaGzgR1e7+S6krNVqvEV3pVKBSqXiXSV/nc3Nh3g8/mYl+aX47nQ62N/fRzwe/+m8FDMisN/vIxQKYX5+nrfX/b2iQTAYxNzcnCBrz3s0m030ej1IpVJR0o0IgiDRTfzNYCwlLpcL6+vruLi4EK1SPIzJyUk4HA4Eg8GxVIssFgtsNpto3Sr1ej0mJiYQi8UA/G/O9sHBAXq9HnZ2duDxeN6tTqrValitViSTSUGDCovFwrtDpRDR/WeLDeRrL6lUKr/Ez12v19FoNASJxmKxiHa7DZvNxuqY+P1+rK2toVQq4fDwcJDzLXZEYCwWg0KhgMvlEv049/t9XFxcwGQyidIE6K19e35+jtXVVWxtbQ2sJgRBECS6CVY0m82Bh9vj8QyaboxbeHs8HqjVaoTD4bFsf2FhAZVKBel0WpTtzc/P4+npCalUCgcHB8jn81hdXcXi4iInv+vMzAweHh4EDTaEWEzMZjPK5TKvartKpUKv1+M1Q/HRsYHMrA0f0V2r1XjbE4SI7qenJ0xOTgqyXrxX5R41mFpdXcXCwgLi8TjOzs5we3srWkRguVzG4+Mj/H7/WI717e0t+v3+WLtaMoJ7ZWUFZrN5YDV5enoSbBkjCIJEN/E3oNPp4Pz8HJOTkz94uD9KePv9fjQajUEFWdST/f91qxQSlfZ6XymVStzc3MDj8WBtbY1Xi2+dTgeDwSAo+k9IW3gmRq5YLPJ6bSGLKT8yNvBXxAX2ej2Uy2WYTCZeryvUWlKtVlEul3lXpycmJrC1tTUYsGSzWcEWrV6vh8vLSywuLvK23LzF4+MjcrkcVlZWxtZ4hhHcTLY+g1qtxvr6Ou7v70XL8SYIgkQ3IQIv87OH/Y7L34sluJkc7mGLJj9CeEulUqyuriKVSvG2S7yFXq+H2+0W1K2y0+kgEong6OgINptNlGYjMzMzghr5CG0L/yt83R9tL+EruhuNBuRyOa/ki2KxCL1ez+v8KJVKkEgkvAZyDPF4HNPT04I82K1WC9VqFVtbW2i1Wtjb28PT0xPvmMpIJAKj0cip0Q9bCoUCotGo6Eklr48LI7iHzWBotVp8+fIF0WhUUMt4giBIdBMiCu6X+dkvhfQowT3q78Wg3+/j7Ozs3cY3HyG8lUol1tbWcH19jVKpJPr2Z2dn0e/3eU0Bp1Ip/P7776jX6/j69Ss8Hg+8Xi8ikYigHHSTyQSlUilooCHEYvIrRPdH20v4ZnT/qnxuoVXuZrOJbDYr2NPMRAQyGd9fvnxBIpHAyckJZz9/LpdDLpcbi+2jXq/j8vISy8vLY1mYyQjuYDA4UnC/HNyvr6/j+vpatOvky6LL6/vFOIsxBEGQ6P7TM0qg/ao2wBcXF5DL5awa33yE8NbpdPD7/Tg/PxfFCvKaQCCA+/t71mKx2Wzi7OwMDw8PWF9fx9ra2qBqOjExAbVaLWgxJCC82i2kLbzBYECr1eIlgvkupvyz2Et+heju9/uCG+I8PDzA6XQKqvgOiwjU6/XY3t7G1NQUzs/PcXNzw8py0ul0cHV1Bb/fL3oVutPpIBgMDtag/ErB/XI/BQIBXF5e8o7kHHZevGx0Nu5iDEEQJLr/Urxuz/4rBPfV1RUajQYnD+RHCO+JiQnMzMzg7OxM9MYTarUaCwsLCIVC7+7zZDKJg4MDGAwGbG9vD2197fV6EYvFBInIiYkJ9Ho9Qc1qhC6o5PPaOp3uT9GV8qMzutvtNhqNBi97SC6Xg1arhVqt5i1CU6kU3G63oH32VkTg5OQkdnZ20O12cXBwgOfn53evM3a7XXRRzCSVWK3WsSShvBTcgUCA0yDKbDbD7/cjGAwKEt6/qhhDEASJ7r8Uv7pCcXd3h3K5jC9fvnD2nX6E8Ha73TAajbi8vBR9206nE2q1emS3ylqthpOTE6TTaWxsbMDj8Yz0xmq1WkxOTgqOCxNa7RbSFt5isfDqbCmTyaBQKFCv1zk976PtJXwzuvmK7kKhAJPJxOu7LdRakkwmYbPZBHWNZBMRyGTgBwIBxGIxXF5eDj2m6XQatVoN8/Pzoh/Xm5sbSKVS0ZJVXlMulweC22q1cn6+1WqF1+vFxcWFoEE52UgIgkQ38ScmlUohnU7/YJXgykcIb5/Ph16vx7r1OheWlpbw9PT0Q3IH4/c+OTnBxMQENjY2WIkuj8eD5+dnQZ01JycnUavVeFfFhLSFt1gsvI8hH1/3R9tL+FS6+/0+6vU6r7hAvtaSbreLXC7HW3QzmfFC2qr3ej3c3d2xFrImkwlbW1tQq9U4ODj4YW1Cs9nEzc0NAoGAKE11XpJIJFAsFrG8vDw2wX12dsZbcL/8XjudTpyenvKatXtpISEbCUGQ6CZ4VC1+Jc/Pz7i9vcX6+rqgathHCG+JRIKVlRXkcjnRY7gUCsWgW2W320W9Xsfx8TGen5+xubkJt9vN+ljJ5XLMzc3h5uZG0GcVo9rNx2KiVqshk8l4DRr4iG65XI5er/dhrbP5VLprtRrUajUvschXdD8/P8NsNvP2PT89PcFgMAhqe35/fw+TyTTUSjXyZiKVYn5+HoFAAJFIZNABNhwOw+12Q6/Xi3o8c7kc7u/vsba2Jjg9aJTgDgaD8Pv9ggQ3w9zcHEwmEy4uLqhdPEGQ6CY+EqZa8drTLdbfv0WlUsHNzQ3W1tYE3Zg/UnjL5XKsra0hGo0K8jwPw2q1wmq14vj4GEdHR7Db7djY2OCVgOByudBut9/1t76F0+lEoVDgbNdgENIWnm+KiV6v//QJJnwWUvJt/95oNNDr9Xh9v5iGOHzh0wznJc1mE8lkEgsLC7yeb7FYsLu7i263i99//x3NZlPQ+xl1XEKhEFZXV3n73tkI7qWlJUxMTIi2XWbmgOusHVW2CYJENyGC8H65Ev3177j8PVuq1ergZsKlivUZhLdGo8HKygpCoRCvhXujaLVaqNVqqNVq8Hg8nKrbw26Oi4uLiEQivKtZMpkMU1NTvKvdQtrC8xXdOp3u0yeY8IkM5Ovn5lvlbrVaKJfLvIVeJpOBQqHg3YwH+N+IQCEzYHK5HPPz8+j3+2i327i7uxNtMXS73UYwGITX6xX9GsYUJcYhuJnrw8rKCsrlMqf1H6OKLmIWYwiCINFNiCw6Li4u4PF4RJku/RXC22QyYX5+HsFgUHBnPOCPqfzDw0NYrVZsbGwgFosJrryazWbo9XpBraCnp6eRyWR4vxe+FhOz2Yxisch5wKDRaNBsNjk/7yMTTPhUuqvV6of6udPpNGw2G2/vs9Aq97CIQL4FhVAoBK/Xi52dHZRKJRwfH/OevXm53fPzc9jtdkFxim8J7rOzM/h8PtEF98tB9draGh4fHzkNjEcVXcQoxhAEQaKbEJFOp4Pff/8dOp0OTqdzrK81buHtdDphs9lwfn7O+0bT7/cRiUQQiUSwurqKmZkZGI1GTE1NIRwOC36PXq8XDw8PvAWlQqGAw+HgLdz5toWXy+XQ6XScmxJJJBJotVrOFpOPspf0ej30+33O3l8hySV8ovGenp54i8lCoYButwubzcZ7P70VEciFWCwGpVIJl8sFlUqFzc1N2O12HB4e8o60BP6IHVQoFGNJQXkpuIXsQ7aDzZmZGVxeXo5tATpBECS6iV9EJBKBwWBAqVQStEjvswjvhYUFyOVyXF1dcX5uvV7H0dERms0mtre3f8hRnp2dRafTQSKREPT+1Go1XC7XyDhCNszMzCCVSvGq6AtpCy/EYvJZE0z4WEt6vR6azSZnb3+lUoFCoeBsz6hWq2i327xzrIVWudlEBLKhVCrh8fERS0tLPzw+Ozs7aI9+c3PDeVYkHo+jUqmMJankIwU381keHh7g8XhwcXHxodGZBEGQ6CbGSCwWQz6fx9raGra3t5HJZBAOh8c+HTlu4b28vIxKpcJpEJFOp3F0dASXy4Xl5eWf7AYSiWSQOSzUNz47O4tcLsc7/k+lUsFqtfLudMnXYvLRovsjBIcQawlXf78QawnfBZTVahWVSoW3YOYaEfjWdkKhEHw+39BBDtNgqtls4vDwkLXdJJvNIpFIYG1tTfTYwWq1+mGCu9/vIxwOI51OY2trC7Ozs3C5XDg7O/vQ+EyCIEh0E2Mgm80imUxiY2MDcrkcSqUSm5ub6HQ6ODk5GfuFfpzCWyqVYm1tDYlE4t20kH6/j7u7O0SjUayvr8Plco0UUxqNBvPz86y6Vb6FTCbD/Py8oAjBmZkZJBIJXosy+baFNxqNqNfrnM8NPu3gP0p0/xkWUQqxlsTjcUELgPlEBA4jEonAaDS+KV4VCgVWV1dht9sH8ZzvHYdwOIzV1VXB8abDtn16eorFxcWxC+5Op4PT01N0Oh1sbm4OPsv8/Dx0Oh2urq7Il00QJLqJPyvNZhPhcBh+v/+HKXKpVIrV1VWYTCYcHR2JmgTy0cJbpVJhdXUVV1dXIwVfp9NBMBhErVbD1tYWq7bcLpcLSqVScIdJp9OJfr+PdDrN6/k6nQ4Gg4G3D5ZPtVsikcBkMnE+Vnwq3QqF4kMqfHwr3VxFd6/XQ6lU4mwRKRQKUCgUvER+s9lELpfj3QJdaEQgQy6XQy6Xg8/nY/X3c3NzWF5extXV1cjZqlarhWAwCJ/Px+p7y1dw2+32sZ5/jKVNr9djdXX1p7UFPp8PzWbzQ6x/BEGQ6CZEptfrIRgMYnZ2dmRSyfz8PObm5nB8fCx69vVHCm+DwYClpSUEg8GfqqaFQgHfv3+H0WjEysoKJ+G1tLSEVCrFeVHhaxYXF3F7e8s7QpBplsOnCsa3LTyflvBMJZlL5fojK90fIbpLpRJ0Oh3nBZtCrCUPDw9wOp28m+mIERHYbrdxdXUFv9/P6bObzWbs7u7i+fkZwWDwh1jBXq+H8/NzOJ1O0UXxRwruYrGI4+NjuN3ukfYdmUyG1dVVJBIJWlhJECS6CTa8zEvl+rjYzQ+ur6+h0WgwPT39rihbXV1FKBQSvdvjRwpvm82GqakpBIPBgbhNp9MDf+nc3BznfaxUKuHz+QbdKvliNBphMplwf3/P6/kmkwlKpZJXwx2+beE/ytf9kZ7uj7CX8LGW9Ho9ZDIZXqK70+kglUrB7Xbz2i9iRQReX1/DbrfzWgSqVCoH9rejo6NB4k44HIZarcbc3Jyo50KtVvswwf309ITz83MEAoF3ZyJUKhX8fj8trCQIEt0EG8H9Mi+VEXijHmcYR8bqw8MDSqUSlpaWWAlNk8mEzc1NPDw8cO6U9pmE9+zsLLRaLUKhEOLxOKLRKDY2NgTl7dpsNphMJkG+bOCPtJVkMolms8nr+TMzM7xFOx+LCZNNzTVXmavolsvl6Ha7Y/eycq10dzod9Ho9ztXffD7PWXjmcjno9XpeleZEIgGbzcZ5QMEgRkTg09MTarWaoBg/qVSKQCAAp9OJ09NTXF9fo16vw+/3iy64T05O4PV6xy647+7uEIvFsLm5yXogZrVaMTU1hbOzM1GaCY0q7Iyz4EMQBInuscNVNIyre1ihUMD9/T3W19c5TTdrNBpsbW0NOlaK1T3uo4X34uIiCoUCkskkNjc3ebVyH7bNYrGIbDbLexsqlQrT09O8BzUTExPo9/u8qs9828LzqXZ/1sWUXCvdlUqFc5W70+mgVqtx7gbJdwFlr9dDMpnkHRMoRkRgs9lEJBJBIBAQJVXE7XbDarXi8fERDodD1KSSl4Kbr5WH7XG5uLhAsVjE1tYW5+ZKHo8HWq1W8ED/vcIONdUhCBLdf3q4tOMVu9LQarVweXkJr9cLtVrN+flyuRzr6+tQqVQ/TPP+WYR3s9nEycnJ4IYqlk9dJpMhEAjg6upKkDicmZkZTOfzfT6fajfftvB8RDffxZQfIbq5VLprtRpnsVQoFGAymTh9nzudDgqFAq+qayqVgtFo5NUxU6yIwFAoBLfbDb1eL8pxKpfLSKfTWF5exsPDg6Curq+P5+np6dgFd6vVwvHxMaRSKTY2NjivI2Dw+XzI5/O840LfKuxQu3iC+HXIaReIC3Mxe+/C9vp3Qi+E/X4fFxcXgtsjSyQS+Hw+JBIJHB0dYXV1VXCMGBvhvbKywrspCPCHDeL09BQOhwMejwdTU1M4Pj6GWq3mXHkchtFohNPpxNXVFdbW1viNcKVSeL1e3NzcYGdnh/PzJycnEY1GUS6XOSc5OBwOxONxTgkXFosF19fXQ21Rb4nuWq327nO63e4glrDf7yOZTEIikaDVaqHb7aLVag26SI6y5PzrX//64bxl7BlyuRxyuRxSqRRKpRJyuRz1eh35fH5gM9FoNG/OBFWrVc5Cko+fO5PJwGKxcF542e/38fDwgEAgwOtcFCMi8OHhAf1+X7Af/KVgPT8/x9LS0sDWdX5+jnq9jsXFRd7FCUZwz8/Pj1VwM7OETqdTsA9dLpdjdXUVJycn0Ov1vI/Ty3328v4y6nGCIEh0EyyIxWLo9/uCY78YpqenodFoEAwGsbi4OLablRjCu1gs4vLyEnNzcwNRqdVqsby8jIuLC2xtbfGq/L/G4/Hg6OgIj4+PvOPZ7HY7EokEUqkUnE4n5xuo2+1GPB7HysoKp+darVaEw2E0Gg3W+0KhUECtVqNcLrO+6UulUqhUKtTrdahUKpTLZdTr9Z9+gD8sTUqlEr1eD+12G1arFSqVCjKZDEqlElKpFBKJBEql8ifB9a9//Qv//Oc/fxAOjDjvdDoDT3ar1Rr8u1aroVAooNVqoV6vo9/vQ6PRDH7UajXUajUMBgOq1Srn6nM+n+d8Xjw9PfGyhzw/P0OpVPISY0xEIJ+B30she39/j+3tbVGuA0za0tTU1CAvm1lgeXFxgcvLS14WFmYwPj8/L7jT5ltks1mEw2H4fD7RvOIGgwFerxeXl5fY3d3lNTAbVtgRu+BDEASJ7g+H64VLzAsd0wBnc3NTVA+k1WrFxsbGIOPa4/F8OuGdy+VweXmJ5eXln6IRLRYL5ubmcHZ2hq2tLd6Rai+PWSAQwPHxMcxmM2+/+OLiIs7OzmC32znfSF0uF2KxGOr1OqfXf9kWnksVjrGYvCfuKpUKyuUyarUaut0ujo6OIJVKByJWqVRicnJyIHBffu67uzvIZDJMTU0JOjajBhOdTgexWOynRXlMtZ35aTQayGQyqNfraDabiMViyGaz0Gg00Ov1MBgMI6utzWYTnU6HU3W80WigVquNjPR8i3g8zruaKjQisN/v4/LyEvPz86IMZoE/bCparfanqjnTU+D6+hrBYHBoxvVbgvvk5GTsgjuRSOD+/h5ra2uizwq6XC5ks1mEQiGsrq7SjZYgSHQTzI1o2JQd18e50mq1cHV1hcXFRV7ezvfQ6XTY3t5GMBgcpAmI3YaZr/BOpVKIRqNYW1sbaSGZmppCrVbDxcUF1tfXBfvntVot5ubmEAqFsLm5yWt7er0eVqsVsViM88yEVCrF9PQ04vE4lpaWOD3X4XAMZgS4iO5YLPbDczqdDorFIsrlMkqlEiqVCuRy+WAa3Gw2Q6VSsf5sCoVirOsHRnWjlMlk0Ov1PwllpkX53Nwc6vU6isUikskkGo0G9Ho9zGYz9Ho9TCbTwLPLx1qSTqdht9s5n0OFQgHdbpdXKg+zpkBIKkg0GoVKpeI92zNse61WCxsbGyMHVEtLS4hEIjg6OmLllWYEt8fjGZvg7vf7uLm5GSyYFGsA8prl5WV8//6d8wwbeboJ4vNBCylFvghzWSUuxurxUCgEm802Vq+iQqEY3BBPTk7GtuiNy+LKWCyG+/t7bGxsvOvZ9nq9kEgkoqUBTE9PQy6X847wA/5oTJRKpThH8jGvn8lkOB8HPm3hTSYTKpUKcrkcbm9vsb+/j3//+9+Ix+Po9XpwuVzY3t7Gt2/fsLKyArfbDZvNxulzKZXKsXal5LqIksnnNpvNcLlcCAQC2N3dxbdv3zA9PY1er4eHhwf85z//wf7+Pm5vb/H09MTZZ883tSQej/NOLBEaEVgqlZBKpTgP+N4aeDw9PWF1dfXdwQezCPK9Rd4vBTdXCxdbut0ugsEgGo3GWAU3MzhcXl5GJBLhlAzEFHZeL+4f9ThBECS6iTdIpVLodruCEwhYnShS6cDCcXR0xDmhQkzhHYvFkMlk8OXLF1YWC4lEgpWVFRSLRSQSCVHep9/vRzKZ5CRgXwvNmZkZXhGCcrkcTqeTV7ID28zuarWKWCyGk5MT9Ho93NzcDCqO/+f//B9sbm5iYWEBdrv9J8HBNTZw3JGBoyrd74nuYe/TbrdjYWEBm5ub+D//5/8MsvCLxSLu7u5wfHyMWCz27nlRqVTQ6/U42xEqlQqq1SovsS40IrDb7Q6aTfHNBX8t4G9ubrC2tsZ6UDQ7O4u5uTmcn58PFd4fIbgbjQaOjo6g0WiwtrbG2SLGB6PRiLm5ucHC5nEVggiCINFNjLhhRSKRsdk9RjE3N4eFhQWcnJwIyq3mK7wZn+3Gxgan6pJMJsPa2hru7+85d2ccJRQXFxdxeXnJu7272+1GrVbjFW3odruRSqU4Z2+Pagvf7/eRy+UQiUSwv7+Ps7MztFotzM3NwePxwGKxYH5+nlUknkajQbvdZp31Pu7IQL6VbjaDOZPJhMnJSajVavzXf/0XZmZm0Gg0EAwG8Z///AfX19fIZrM/nSNCqtzT09OcLSliRARGIhGYTKbBQkchNJvNQadGrnnoDocDc3NzA8vbSzF8cnKCubm5sQnuUqmEo6MjuFwuQYkqfK8X/X5/7A3MCIIg0U28oNvt4uTkBBMTE2Pxcb+H3W7H2toarq6uRMvRZSO8Y7EYSqUS7/xbtVo9aHkvRqXebrfDaDTyvglKJBIsLCwgEolwrjipVCpYrVbOOb4v28L3+/1BtfF//ud/EI1GIZfL4ff78dtvv8Hn88FqtcJqtXIeGGi1Wtb7eNz2Eq7dKLm2f2f83FKpFBMTE/D7/fjHP/6B5eVlKBQK3N3d4b//+79xfX2NfD6PXq+HdDrNWXQ3Gg3k83leC06FRgTmcjnk83ksLi6Kcv0KBoOYmZnhtYgU+KNTrNfrxenpKSqVyg+CWyyv+WvS6TSCwSD8fj+mp6c//LorkUhgs9mQTCZ5Z/0TBEGim+BIMpmE2WxGrVYbVCQ/GqPRiO3tbaRSKVxdXY1lmvKl8A6FQigWi5zSC0a978XFRQSDQVGEns/nQy6X4109Z1p4Pz4+cn7u7OwsEokE50q72WzG7e0tfv/9d4TDYUilUuzs7GB7extzc3MwGo0/VPD0ej06nQ6nFvZcmuQoFAp0Op2xTXVz6UbZ7/c5N8YZ1frdZDLB4/Fgd3cXu7u7kEqluLq6wt7eHiQSCefj9vDwAJfLxfn8ZyIC+caJttttXF1dIRAIiGKluLy8hMFggNvtFrQdi8UCr9eLi4sLHB8fY2ZmZmyCOxaL4e7uDhsbG7wHCkIHjsFgEM/Pz/B4PLi6uuI9w0YQBIlugiXMQqZAIICtrS0YDAYcHBzg+fn5w9+LSqXC1tYWWq0Wzs7OOFsd2ApEq9WKTCYDt9stipVmcnISDocDwWBQ8I2L6VYZDod5i3iv14toNMp5/2m1WhgMBqRSqXf/lmkZfnh4OEji8Pl8+Pr1KxYWFt616nDtTsnV161QKMZW7eZiL2k0GlAqlazFZb/fR7FYfDe5RKPRwOv14rfffoNGo4FKpcLJyQmOj4+RSqXePQ/b7Taenp54VViFRgReX19jcnJSlCZTt7e36Ha78Pl8ohxbZkDY7/fHIoZ7vR4uLy+Ry+WwtbXF2QojBtlsFgcHB9Dr9dja2sLs7Cx0Op1oC8MJgiDRTYy4wV9dXcHv90OhUEAikcDj8WB1dRW3t7cIh8OsfbRiwXildTodjo6OeKVxvEUsFkOr1RrYQsRqGe/xeKBSqRAOhwVvy2QyweFw4OrqitfzdTod7HY7otEo5+fOzs4iHo+PrBIXCgVcXV3hv//7vwcDl99++w0TExOcZkgsFgunaj7XdvDjXEzJZSFlpVLhlLVdKpWg1WpZZ8D3ej1UKhWsra3h//v//j84nU48Pj4O7CejbAPJZBJ2u53zAkYmIpBv18inpyfRMvpTqRSen59ZJZWwHSAxiyYDgQDOzs5Evf60222cnp6i3+9jY2NDlMWjXOh2u7i6usLNzQ1WV1fh8XgG+83v9yOfz4t2PSQIgkQ3MUSAms3mn3yZRqMROzs7kEgk+P79+y/x+3m9XrjdbhwfH4v2+oyHe21tDVarlXWcIFsCgQAajQZisZjgbc3Pz6PRaLCqOo96fjqdRq1W4/Q8o9EIlUqFTCbzw+Ask8ng8PAQ4XAYcrkcX79+xcbGBiYnJyGTyVinmLwU3Vz2+2cS3Vwq3XysJVzyuZ+fn2E0GqFQKCCVSuF0OrG1tTWwn1xcXAwWKTMDqV6vh0QiwSsmUEhEYLPZRCQS4dUJ8jXFYhG3t7dYW1sT3KSKeW8nJydwu92YmpoaWE3EstvVajUcHh4OLG4fuVidGSwdHByg3+9jd3f3p2u+TCbD4uIirq6uPrzQQhAEie6/PKVSCZlMZmTFSSaTYWlpCYuLi7i4uMDd3d2Hx0ExmcYXFxe8xedLwZ3NZn+44XHJ8WZ18v+/bnepVOoH0coHplvl7e0tr0Yvcrkcc3NzvKaMmWp3u93G/f09vn//jmQyCZfLhW/fvg21j1itVtRqNdbvVaVSQaFQsLaMMKKSrQ98nPYSLpVuPosouXRQHZVa8tJ+YrfbEYvF8J///AfxeBzJZBImk4lzB1ShEYGhUAgzMzOcKv/DaDQauLi4wPLysigLv5vNJo6Pj+F2u3+w21itVszPz+P09JTT+oNhx/T4+Bgej2dsXXhH0e/3EYvFcH5+joWFBfj9/pFWp4mJCZhMJlGKBgRBkOgm/h+9Xg9XV1eYn59/t0o0MTGB3d1dVKtVHB4ecq6cCsVisWBjYwP39/e4vb3lLbgzmQzW19d/uuGILbyVSiXW1tZwfX3NO3ObQafTYXZ2FqFQiNfzp6am0Gw2OUcx6vV6NJtN/Oc//0GpVEIgEMDGxgZcLtfIafyXbeG5HFsuvm4u1e5xVbr7/T663S7r6ioX0d3tdlGtVll7ndvtNkql0puRe1KpFFNTU9je3kYgEEA+n8ft7e1gsSmXa4aQiMCHhwf0+33eTXhe7qOzszPMzc1x7tg5SnAzFe5h/na73Q63242TkxNeg7jHx8dBy/Vxto4fRr1ex/HxMUqlEnZ2dlhFMy4sLODx8XFsfRMIgiDR/aG87Nwl5HEhxGIx6HQ61vm4CoUCa2trmJqawvHxsWgNYdii1Wqxvb2NcrmM8/NzTosVU6kUnp6esL6+PtISILbw1ul08Pv9OD8/F1QhA/7I0pVIJLy6VUokEiwuLrKOEGw0Gri9vcXh4SFMJhN0Oh3W1tZYd0bkYzEZl697XKKbi7Wk1+uh0WiwrsYWCgUYjUbW1oN0Oo2JiQnWf2+xWOB0OqHX69Hv97G3t8d6wa2QiMBarYb7+3sEAgHBA56LiwtYLBZeMYejBPfU1NSbC0qdTiecTidOT085DVQikQgeHh6wubkpyqJRrmL/6OgIk5OTWF9fZz0zo1AosLCwwHugTxAEie5PJbhfdu5ihDTXx4VQLpfx+PjIK+7L5XJha2sL6XRa8JQrV+RyOb58+QK5XI6joyNWr53L5RCNRrG+vv5u0oLYwntiYgJutxvBYFCwRzIQCODh4YFTesdLoaXVat/MP2ci3A4PDyGVSrG7u4uVlRW0221O1XqubeHNZjPK5TLrQRSXBJNxiW4u1pJarQaNRsP6e8vVz82nIU48Hsfc3Bz8fj+2trbQbDbfFd9CIgL7/T4uLy9ZJdqwEbEAROmY+1Jws4kanJ2dhdVqxfn5+bvfZyY3vFqtYmtri7ONR+igMBgMIplMYnNzk1c6jcvlglwuRzwe/9ACE0EQJLpF5TO0yL2+vsbCwgLvuC+NRjOo3BwcHAj2LnO9iPv9fkxOTuLo6OhNcVcsFnF5eYlAIMD6pie28Ha73TAYDLi8vBS0HZVKJahbpdfrHXi0X9LpdBCNRrG/vw+5XI5v377B4/FALpdDIpHA7XZzrrBzqXbLZDLo9XrW+5prVvc4PN1cKt3j9HPX63U0m01O/u98Po9+v4+JiYnBd5kR35VKBfv7+0ilUj9dp4REBEajUahUKsEdHR8fH5HP57G8vCxYrLVaLU6Cm2F+fh4KhQKhUGjktZzxhyuVSqyvr4uyyJMt2WwW379/h06nw/b2tiC/u9/vRzwe57We5KMLSQRBoptgVQH4aBGeTCYhlUoFewslEgnm5uawvr6OaDSKy8vLsWRqj2JmZgaLi4s4Ozsbmider9dxeXmJ5eVlTqJkHMLb5/Oh2+0KbrU8OTkJvV7Py9eu0WjgdDpxd3c3GPzd399jb28PzWYTW1tbWFhY+EkguFwuFItFTj7+UW3hR8HF163ValGv11lt+zPYS7iI7larhXa7zdrK8/T0hMnJSU6iJR6PD/VUazQarK2tYXl5GU9PT9jf3x8MpoVEBDI9APx+v6B9ns/nEY1GRUkqabVaOD4+hsvl4tVMJxAIoN1u4/r6+qfflctlHB0dweFwYGlp6cMEZa/Xw/X1NW5ubrCysoL5+XnBr61WqzE9PS1ai/jPUHAiCBLdf1N+xSi/2Wzi/v5e1JuBwWDAzs4O5HI5Dg4OPjTj1Waz4cuXL7i5ufmhGttsNnF6egqPx8O7uYWYwlsikWB1dRW5XI5Xl8jXAv75+ZlzC3UAmJubQzabRSKRwP7+PkqlEra2tuD3+0fOBEilUkxPT3OaZn7ZFl5s0S2VSqFWq1kNAj6DvYSL6OaaWsK17XulUkGtVsPk5OSb5/3GxgaWlpYQjUZxcnKCcDjMKyKw2+0iFArB5/OxHqQMo16vIxQKYWVlRbBN46Xg5rugUyqVYm1tDeVy+YfrzvPzM87OzrC4uCi4MyYXyuUyDg4O0O12sbu7K6p3fHZ2Fo1Gg/dsJtlICIJE99+Wm5sbOJ1OUSK2Xt+EfD4ffD4fQqEQIpHIh7UT1uv12N7exvPzM0KhEDqdDs7OzgYLn4QgpvCWy+VYW1tDNBoVtC25XA6/349wOMx5ZoGp0N7e3mJxcRFra2usRMz09DSen585CVguFhODwYBms8l6+2wtJuNqBT+uSjcXP3epVIJEIuEUvRePxweLctmc+7u7u9BoNGg0GigUCpwHMJFIBCaTifVi7WEw3+f5+XnBYpKxlAgR3C+/hysrK4jH48jlcojH47i5ucGXL18EfV6uhZv7+3sEg8FBMx+2XU+5iGafz4ebmxte61LIRkIQJLp/Kb/qwpPL5VCpVHh3kWOD1WrFzs4Oms0mDg8PPyxySqlUYnNzE71eD3t7ezCbzZibmxNl22IKb41Gg+XlZVxeXgrqcmexWGC321l3q+z1eojH4zg8PMTk5CS0Wi2nG6hcLofT6XxzIeZr7HY78vk8q4GBRCKB2Wz+0/i62Va6O50OOp0O68WDhUKBdaWb6wLKRqOBfD4Pl8vFSTDlcrlBzOb3799ZpxZls1nk83ksLi4KEpXn5+eYmJgQPIBmBLfD4RAsuF9/n8/Pz5FKpbC9vS04f5zL8Tw+PkahUMD29jbsdvvYXstoNGJiYoJXd1uCIEh0/1KYEf9rTzfXx7m+ZiQSweLi4ti7oCkUCqysrGBmZgYnJyeCV7+zPumkUuj1eshkMmSzWVGzxMUU3mazGfPz8zg7OxPkgZ+fn0etVnu3mlwoFAYdRbe2tjA7O4vFxUXc3t5ymo1wu914fHxk/Z7lcjksFgvraWku0YFcEkwUCoXoFhO2lW4unShrtRokEgmrmQemO+hbNpHXxONxuFwuTpVQJiLQbDZjcXERX758QTqdxsnJyZsLmJkkHKGV1+vra8hkMsFJJS8Ft5hFh06ng3g8Do1G86EdHFOpFA4PD2G32/HlyxfeC+K5Xm/S6TSv9CSCIEh0/3LhzfwIeZwtiURiUK34KBwOB7a3t5HNZnFycjL2aMF0Oo1UKoWtrS14PB4cHx/z8j1/hPB2Op2w2Ww4Pz/nfUylUikCgQAikcjQfdvtdnF9fY1QKASv1/uDlcRkMsFgMHAaEKlUKthsNiSTSU7nAFuLCRdfN9es7nFUutmI7nFZS3K5HLRaLesKervdRjqd5hQdNywiUK/XD1KLTk9PEY/Hh56/V1dXcDgcguwgiUQCpVIJy8vLggdIJycnmJycFFVw1+t1HB4ewmAwYHd3F3a7XfBAms1nOT8/RyKRwMbGxof6xhUKBRYXF4cuHhWrwEQQBInuPz3M4kmxplS5oFarsbm5CavVioODA05NU7hQKBRwe3uLtbU1KJVKOBwOrK6uIhQKcRKJHym8maQQthaRYej1eszMzPzUxOL5+Rn7+/sAgN3d3aGDrYWFBSQSCU6DoZmZGSQSCdYVci5t4TUaDaRSKasZCrVaPbBusBHd46h0s7GXcBHdhUKBtejmai1JJBKw2+2sF38CoyMCJRIJPB4PdnZ2BufZy6r309MT6vU65ufnee/fXC6H+/t7rK2tCaqUvxTcYtnNmGN1fHyM2dnZwaDE6/VCo9Hg5uZmLNe4XC6Hg4MDaDQabG9vc4qhFAu73Y5ut8tpUeW4CkkEQZDo/nT0ej3s7+9Do9EIbkohhJmZGXz58gXxeBwXFxeiVoM6nQ7C4TB8Pt8PU/kmkwlbW1tIJBK4ubkR7eIupvAOBAKoVCqCLDgzMzPo9/uIx+PodDq4vLzE7e0t/H4/fD7fyHg1tVqNqakpTvGDWq0WRqMRqVSK1d9zbQvPxWLCZTGl2KJb7Ep3v99n7efudrvI5/OsPby9Xg/JZJLToJtNRKBarcbW1tagPXo0GkWj0UAkEhGUo12r1QYt04VcsxjBbbfbRRXcqVRqEEX62mceCARQKpV4dY596/jd3NwM7DoLCwu/bF1Qr9eDXq/H5eXlWPLvCYIg0f2nplKpQKlUQqVSYW9vD+l0+pe9FyZlRKVS4fv376JYP5hOd06nc2g1lxEGtVpNlK6QYgtvmUyGtbU1JBIJZLNZQeL9/v4eBwcHUCgU2NnZYVU1nZmZQbFYRKlU4iTyR9kKhvGrLSZi20uYc4hNBZat6C6Xy1Cr1ayEfCaTgdlsZp1V/fj4CLPZzClq7+bmhnVE4NTUFHZ2dgaVWJfLxbsK2263cXZ2Bq/Xy6vV/GvBbbPZRBXcd3d3uL+/x8bGxtABEhMlmEwmOXVxfev6fXBwgHa7jd3dXc79BsQkk8lgb28P/X4fNpuN9YJagiBIdP9tiMfjmJ2dxcrKCpaXl/Hw8IDj42NRbgi8TgypFF6vF4FAAOFwGDc3N4KiBaPRKKRS6ZsVOblcjvX1dajVahwdHfHurjYu4a1SqbC6uopwOMxrkVK/38fT09NAhC0sLLCekpfJZFhYWOA0JW40GqFSqVhPMXNpC2+xWFAsFlkJeraLKcW2l7C1ljCvyeZvueRzp9Np1gso+/0+Hh4eOFW5n56eIJFIONlXNBoN7HY7ZDIZkskkrwE1k1QyOTkpqHHXS8Ht8XhEOea9Xg8XFxeDxchvLY7VarVYWlrC+fm5oHUs8Xgcp6enmJubw/Ly8od2tXwt/I+Pj3F/f4/l5WUsLy/D6/Xi8fGRqt0EQaKbYGBylZkbmMlkwvb2NpxOJ4LBIMLh8Fgah7AVrLu7u2i32zg4OOAlNtPpNDKZDKtGP0zWrMvlwtHREafK7kcIb4PBAJ/Ph2AwyOmYMLFhzWYTu7u7MBgMg46TbGE6GnLx28/OznKyxLCtdsvlcmi1WhSLxXf/9lfZS8axiJKtn7vZbKJcLrNeEJ3JZKBWq1l3uOz1eri7u+OcFlKtVhGPx7G5uYm1tTXc3Nzg9vaWk6Xr6uoKSqVSkBecEdwTExOiCW6mmY5UKsXGxgarY2+1WjE5OYlwOMz59ZjvdC6Xw87ODqeEGjFhEmjOzs7gcDiws7MzWBirUqngcrkoQpAgSHQTwI8Rga8FqdPpxLdv36BQKPD9+3fE4/EPa2TzWmAtLy9jbm4Op6ennHyQ9Xp94B3l0uluenoafr8fwWBQNKuNWMLbbrdjamoKwWCQ1fFIp9M4OjrC9PQ0lpaWIJPJ4PP5kMlkOL+PxcVF3N3dsbbfWK3WQYYzW9HNti08W4sJF3vJr6h0sxXd3W4X5XKZVaU7nU7Dbrezjv0c1fJ9FExEIBdrR7/fRygUwsLCAtRq9WBw3+l0cHh4yGpmKR6Po1KpIBAICDoup6enmJiYECTcX1KpVHB4eAibzYZAIMDJS72wsDDIx2fL09MTDg8PMTExgY2NjQ+JAhx2PB8eHrC/vw+ZTIavX78OzXafnZ1FLpf7sF4MBEGQ6P60pFIpGAyGkRUuxlawtbWFUqmE79+/4/n5+Ze818nJSezs7CCfz+P4+PjdmzRzk/d4PKwreK8F48bGBu7u7kSr1IglvGdnZ6HVan9KI3lNNBpFLBbDxsbGD5UwhUKBpaUlzt0qDQYDzGYzp4EPl2o3l7bwbEW3XC6HXC5/93wR29PNNqObreguFoswGAyshDQXa0kul0O/34fVamX198MiAtkQjUahVqt/WFQok8mwtLSEqakpHB0dvTnAzWazSCQSWFtb491DoNPp4PT0FFarVTTBnc1mcXp6Cq/XyztqcGVlBalU6t2ZvE6ng4uLC8TjcWxsbPySpCnmnGHW22xubsLr9Y60tUilUszMzFC1myBIdP+96XQ6iEajrKZXNRoNVldX4fP5EI1GcXp6+ksqFyqVChsbG7DZbDg8PHwzHeP29hYqlUpQhzqdToft7W3k83lcXFyIUukXS3j7/X60Wq2hNhFmqrtUKmFzc3Oot9RqtcJqtXLK0wX+qMw9Pj6y9rzb7XY0Gg3WVh22FhOTyYRarcZq0MCm2i12R0q23SjZim62fu5qtYp2u83a+821yj0qIvC9AUMqlcLS0tLQ37tcrsEAd1g300qlgnA4jNXVVd5V3U6ng5OTE1gsFtEE98PDA66urrC+vi6o06NSqcTi4iIuLi5GnoP5fB7fv3+HSqX6ZVGA9XodZ2dniEQi8Hq9WF9fZ9XUyeVyodFosLKDEQRBovsvycPDA5xOJ+tOeMAf1cWdnR3YbDacnJzg+vr6lyyScbvd2NjYQCKRwPn5+U/v4fn5Gc/Pz/D5fIJjsxQKBTY2NiCRSHByciKKBUEM4S2RSLC6uop0Ov2DSC0Wizg8PITVasX6+vqb1Vav14tKpcIpT1epVMLtdiMSibB+n0ySCVuRzqYtvEQigclkEs1iIpFIIJfLRTufuXSjZCOg2Pq5uWRzl8tl1Ot11lVxNhGBr+l2uwiHw1haWnpzf2i1WmxtbSGTyfxgnWq1Wjg/P4fP5+M1Y/VacHOt0A+j3+/j+vp60NKd7/t6fW212Ww/LVbu9XqIRCIIh8Pw+/3wer1j7xY87BhGIhEcHR3BYrFgd3eX9czIy2tALBajGy9BkOj+NbzstMX1caFCstls4vHxEVNTU7ze99TUFL59+waJRIL9/X0kEokPb17AVKE1Gg2+f/8+sCS0Wi1EIhGsrKxw8nG/eaJKpVheXobVasXR0ZEoVX4xhLdCocD6+joikQiKxSIeHx8RDAbh8/kwOzv77nnCdKu8vr7mlKDgdrtRqVRYv2+n04lSqcSqoQ2XtvBsLSa/IsGETaW70WhALpe/myLTbrfRaDRYiTsu1hKmys32esIlIpAhEonAZDKxWtSpVCqxtbUFlUqFk5MTNBoNnJ+fw+l08q4kM5YSsQR3p9PB2dkZGo3G4L2KxcLCAhqNxsDCV61WcXh4OFgAzbYpkpg8Pj5ib28P3W4XX79+hdvt5nX/mZycRKvVomo3QZDo/jWC+2WnLeYiNurxlxUWMbpzxeNxTE9PC7phyOVyLC4uYnNzc+DxY7tgTsz9uLCwgJWVFVxfXw/amU9NTYlSfXrN3NwcFhYWcHJyIigvW0zhrdVqsby8jLOzM0SjUayvr7NOrQD+8GlPT09zSlBgIh3ZNhOSSqWYmppiXe1mazH5zIsp2VS6uVpL3hM7hUIBCoWC1Tbr9ToKhQJr+xWfiMBsNot8Po/FxUVO+87n88Fms+H79++Qy+W8M7QZwW0ymUQR3I1GA0dHR9BqtYK7YI5iZWUFkUgEsVgMJycnmJmZwcrKyodHARaLxUF34PX19XdnKtgOKiKRCO/710cUpAiCRPdfEK4XHUaMi0GtVkMmk+FV5R4l+tbX1wc5zsFgEPV6/UP3p8lkwu7u7mD6m4msGgd2ux3r6+u4vr4e6j/9aOHd6XRwf38PhUIBmUzGy+s5OzuLbrfLqZGFzWaDQqHA4+Mjq7+fnp7G8/Mzq4o627bwOp0OvV7v3b/TarVoNBrvevLF9HWziQwU28/NxVry8PCAqakpVsKRT0QgEyUXCAR4idNerwelUolyucwppnKY4OYabTiMUqk0SAEalvYk6o1RKsXDwwO2trYEZZHzodls4vLyEpeXl5idncXm5ib0er0o27ZarZBIJLwKFh9VkCIIEt3Em6N8rsTjcTgcDtErJxMTE/j69SvMZjOOjo4QiUREbePORuQ0m014vV6cn58jFouN7QJsMBiwtbWFp6cnXF1dCX4dvsK72Wzi9PQUKpVq4LO8uLjgNagLBAKIxWKsLCAMi4uLiMVirI6zXC6H0+lkNVDh0haeTUt4iUQCjUbz7mcTu9L9nr2Erehm4+fu9Xp4fn5mZS1pt9tIp9OYnp5m9Vn4RAReXV3B4XDwGgBnMhmkUilsbm5ie3sb0WiUU6QeI7iNRqMogjudTiMYDMLv94tWrBj1OgcHB3A4HDCbzR9qxej1eojFYjg4OIBGo8G3b98ELQ4dhdvt5nQs3ytciVmQIggS3X8TMc1cNJgR/Gtx/XIUP2yUz5ZyuYxMJjO2qCmJRAK3242vX7+i2+1if3+fdSVU6AU4FAphdnZ20G66VCrh+Ph4bFV3lUqFzc1NtFotnJ6eCh5gcBXetVpt4FX1+/2QyWQDgcGlcySDRqPB/Pw8Li8vWd/EdDodJiYmWC+QcrvdSKVSrPYVW4uJ1WoVzWLyGe0l9Xod/X7/3QXP2WwWBoOBVWJKIpHA5OQkK7sAn4jAVCqFRqPBKyWkXC7j+voaq6urUCqVUKvVgwWWbBrpdLtdnJ2dwWg0cra1DCMajeLu7g4bGxucFg9yodPp4PLyErFYDF++fMHs7Cx8Ph9isdiHzBpmMhns7++jWq1iZ2cHHo9nbIs17XY7er0er9kLruugCIIg0T1ScA8T2GITi8UwNTUl2gLDUTA50Ovr63h6esLBwYGgeDw2IkIikQwqd0qlEuvr65icnMTR0dHYhL9MJsPa2hr0ej2Ojo4E3yDZCm+m5bLL5cL8/PwPawJWVlZQLBY5WUUYXC4XVCoVp0zd+fl5PD09saqQq1Qq2Gw2Vu+NbVt4s9mMQqHw7veFzWJKsbpSttttyGSyN0VAv99HvV5/V0yztZawXUDZ7XaRTCbhdrtZfRauEYGNRgO3t7ecm8QwAv/8/BxLS0s/WBqUSiU2NjZQrVbfnFnqdrs4PT2FwWAQLLh7vR4uLy+Rz+fHGtFXKBRwcHAAhUKBnZ2dwedWKpXweDwIh8Njq+S+bN0eCASwsrLyIY12FhYWcH9/z/lzDSs8iVWQIggS3X9DwT3qgiHGhaRcLqNQKHxoQwW9Xo/NzU3Mzs4iHA7j4uKCdb4zW2q1GuLxOPx+/0/7aXp6Gpubm4NUj3G1s/d6vXC73Tg+PhY8uHhPeBeLRZyenmJ+fn6ocGIGAvf397wWtvr9fqRSKdZT2wqFArOzs6wjBGdmZpBMJlllnrOpdiuVSqhUqnfFOdtKtxiebjbWklqtBrVa/W5FkY21pNPpoFAosLIDPD4+wmw2Q6PRvPu3fCICw+EwZmZmOIvUXq+HYDCI6elp2Gy2oef16uoq6vX60Mx8RnDr9XrBgptpEw+AdUt3rvT7fdze3iIUCsHn82FxcfGnc4GxAYphx3j9+Ua1bv8ILBYLFAoFp6hSgiBIdAsS3Mx/X06LvbaXjLKd8Kl8xGIxuFyusVe5h2G32/H161fodDocHh5yaiX+HtfX15iZmRkpIpj8X51Oh4ODg7F11HS5XFheXsbl5eWbTXuECO9KpYLLy0ssLS0NbbnMoFarsbq6ilAoxMmjzYjopaUlhEIh1sdoenoajUaDlcjXarUwGo2s9hHbtvBsUkw+0l4i9iLK90R3JpOBxWJ5d8Ei07qb7cCba0RgPB5Hv9/nNbAPhULQ6/VvPlcqlWJ9fR29Xg/n5+eD8/Ol4Pb5fIIH8YeHh7BYLFheXh6LzYKJAqzX69jZ2XnTtrK0tIREIsEp0vO94/9e6/aPYG5uTpR1N1TZJggS3awufq9/hv1u1HO4Uq/XUSwWWU8pj+VgS6WYm5vDzs4Oms0m9vf3efn6XpJMJtHv999dECaRSDA/P4/V1VXc3t4iHA6LJvpfi+XNzU3c39/j9vZWVOGdz+cRDAaxuLg4tBL4GsbTenZ2xrl6OzExAYvFwtobLpFI4PV6WceBMc1y3vtbtm3h2YhulUqFXq/35r4Q014ixiLKcrkMlUr17rbYppak02lotVpWcZpcIwKr1Sri8TgCgQDn/XV3d4dWqzWyY+VLmIq3VCodNKs6OzsTRXDn83kcHx9jfn6eVadePiQSCZycnGB6ehqrq6vvDs4Ym8nV1ZWg1+XSuv0jsFgskEqlrNZjjLsgRRAkuglRub+/H/h1fzUqlWrgH0wkEjg6OmLdIvwlzWYT0WiUU9dJo9GInZ0dAMDBwQGv130PjUaD7e1tlMvlH6pxQoT3+fk5zs/Psby8zEpwM0xOTsLhcOD8/JxzC3uv14tisch6ZsBqtUKtVrPyaxuNRqjValbTy2wsJmazGZVK5d19/V61W0x7iRiVbjZ+7kajgVqtxmqRH9uW71wjApmFzAsLC1Cr1Zz2VTqdRjqdxurqKuvvsVQqHSy03N/fh0ajESy4k8kkQqEQVldXWTcX4nq9Oj09RTqdxvb2Nut8dOCPWbRut8trBq1eryMYDOLm5gYLCwusW7d/BLOzs7i/v+dVrBKrIEUQJLoJUanX63h6ehp0tfssGI1GbG9vY2pqChcXFwiFQpyqjFdXV5iamuLsHZXJZIN2yufn57i7uxP9Yi2Xy/HlyxfI5XIcHx8Lmhp+eTPh8z49Hg+USiXnSplMJht0q2R7XLxeL+7v71kJ15mZGVY3XDZt4aVSKQwGw7t++vdEt1it4Nl0o2Qjutn4udPpNOx2+7uCNZfLQSKRsOpqyDUi8O7uDmq1mpOQBP7wjN/c3GB9fZ2z7a3b7aLT6UAul6PT6Qj6DkciESQSCWxtbY3F25zJZHB4eAiTyYTNzU3OAxPgj8WHsViM9Xex2+3i9vYWR0dHMJvN+Pr1K6emWeOm0WigUCigVCqxrnYTBEGi+9PDTD0rlUocHh7i8vKSVUvsj8LhcODr169QqVT4/v077u/v363KplIpNJtNTgu8XjMxMYGdnR1Uq1UcHR1x9j6/h0Qigd/vHySovLfQbxiVSgXhcBjr6+tYW1vj3UAnEAigVqtxqioxAyOXy8W6W6VWq4XD4cDd3d27f8s0ynjPOsK2LTwbi8lHJZi8V+nudrtotVpvLmbs9XoolUrvVrrZWkvYVrm5RgQWi0U8PT2xsoa8fp3z83MEAgHOlddut4tgMAitVotv375BJpPxystntlOtVrG1tcVLDL+3/VAohLu7O6ytrWFubo63B9loNMJut7NasJxKpbC3t4d2uy2odfs4qFaruLy8xOHhIeRyOebn50VfKEoQBInuX0Kn0xksnJqfn8dvv/0Gg8GAYDCIs7Ozscb4cUEmk2F+fh7b29uoVCrY398fKbI6nQ4ikQiWlpYEL3JSKpVYW1uDy+XC8fExr5i995iZmYHP58PZ2Rmn1frFYhHBYBA+nw8mk0lQ50qpVIq1tTUkk0nOiQFzc3Not9tIJpOs/z6bzbJqu8622s3GYiLmYkoxKt1vie5arfau0CwWi9Dr9W8ujiyXy+j3++9WpMvlMhqNBqt0Ey4RgYyo5NoinMnSnp2d5Zx9zaScqNVqLC0tDQa3rVaLk/BuNps4Pj4exIuK7W8uFov4/v07ZDIZdnd3Wfno2Xy3isXiyPO8WCzi8PAQqVQK6+vr8Pv9v2Th/Kj3dnZ2Nljw+ttvv2F+fh7T09OoVqufqhBEECS6CV48Pz9jYmJicIOXyWRwu9347bffYLfbcX19jaOjo7ElenBFrVZjZWUFfr8f9/f3ODk5+eliHIvFOHfHew+Xy4WtrS2k02mcnZ2JHi04MTGBL1++IBKJsBKZlUoF5+fnWFxc/GFKWIjwZgYY19fXnKruEokEy8vLiEajrHLI5XI55ubmWC3CtNvtaDab73rr2bSFNxgMaLfbb1p5dDrdh3SlfG8hpVh+brbZ3PF4nFW1k2tE4M3NDSwWC2fbwuXlJYxGI+uOmC8F99nZGdRqNfx+/w/n6OrqKhqNBivhXS6XcXR0BIfDMRDuYtHv93F3d4eLiwssLi7C5/OJloAik8ng8XhwfX39w2d82brd7XaL2rpdKNlsFsfHxwiHw7DZbPjtt98wMzMzGExKpVJMTU2xHtQTBEGi+9OSSCSG+iwlEgmcTie+fv06qDbu7+8jlUp9isUoZrMZOzs7mJycxNnZGa6urtButwf+9Jc3XLHQaDTY3NyE0WjEwcGB6Bmyer0e29vbeH5+RigUGrmfmU6T8/PzQxdNChHeer0efr8f5+fnnHzmGo0GHo+HdbdKl8uFdrv97mBOIpEMkkze+zs2beHNZvOb1W6ZTAaFQvHm4EEMe8l7lW4x/Nz9fh/pdPpda0m9XkehUGAVDcclIjCbzaJQKHBus357e4tut8t54eMowT24mfy/xZXVavXN5k6ZTAZnZ2fw+XyipzkxcYPVahW7u7tj8VA7nU6oVCqkUqmhrdvHsQiUz8Dj6ekJ379/RzQaxfT0NL59+waXyzX03GJmssRYxEwQxBtFMdoF4yOXy0Eqlb5bLbPZbLDZbCgUCojH44hGo3C73XC5XO/m/o4bl8sFu92OWCyG/f19KJXKsXbUlEgkmJubg9VqxeXlJbLZLHw+n2j7QalUYnNzE6FQCCcnJz9FhjWbTQSDQczOzr4pkl4K75WVFVYdCxkmJiYGiQabm5usP9vU1BSy2Sxisdi7cWoSiQSLi4sIh8OwWq1vijin04lYLPau5cLhcODy8hJzc3Mj/4ZpCf/Wgj7GYsL4qWu1GprNJlqtFprNJsrlMnK5HLLZLNrt9iAR5eW/AeBf//rX/17I5HLI5XJIJBIolUo0m03c399Dr9dDpVINYv9UKhUkEgmq1eqbgrrT6aBWq705m5PP56FWq99tchOPxzE1NfWukOYSEcg0V1lZWeH03UilUnh+fsb29jan6jJjKVGpVG8OuJkFzEdHR1AoFD+J6vv7eySTSXz58kX0SnAymUQ0GsX8/PzYs68XFhZwcnKCWCw2WJAuth+dD71eD4+Pj3h4eIBarYbX62W1cFetVmNychKJRGJsUY0EQZDoHiupVAoul4v1zc1sNg+i1+LxOO7v7zE1NYXp6elf6guUy+Xwer3Q6XS4ublBOp2GwWAY60p8g8GA3d1dRCIRfP/+HYFAQLRUA6lUipWVFdzd3eHw8HAQ4dXpdBAMBmG321lV4IQIb7fbjVqthsvLS6ytrbF+nt/vx8HBAaxW67v2HrPZDL1ej4eHhzftClKpFNPT04Ouom8dE+APa8Aof6zFYhmZj84I6k6ng2g0itvbWzQaDSiVSmg0GiiVSqjV6kGXyLm5OSiVyoFYVSgUA4H5r3/9C//85z9/EMlMgkaj0cDZ2RmMRiNardbAFtNoNAa2k0ajAa1Wi263C6PR+JN/mrGWvPXdZWMtabVayGQy+Pbt27ti6e7uDisrK6zOg6urKzidTk7fiWKxiLu7O2xubnLyTzOCW6lUssoAl8vlWF1dHfi1Jycn0e/3cXV1hWq1iu3t7XeTZbjQarUQDofR6XSwtbXFqtOnECqVCm5vbyGVSmE0Glkfs3HS6XSQSCSQTCYH74mrh93lcg0KDuNoSEQQBInuscHEMfGxYej1eiwvL6PRaCAej2Nvbw+Tk5OYmZn5ZdWUXq+HeDyOpaUlyOVyRCIRJJNJeL3esWXOSqVS+Hw+5HI5XFxcwOFwYH5+XjT/5/z8PLRaLY6Pj7G8vIz7+3vodDpOlR4hwtvn8+H09BS3t7eskyqUSiV8Ph9CoRB2dnberXJ6vV4cHh7C6XS+KXSmpqbw+++/w+PxvLmAj5mGHnVDV6lUkMvlqFQqUCqVg6p1LpdDp9OBwWCAUqlEr9eD3++HTqf76QafzWaRTCY57Uum0s2cNwqFAlNTU0P/tlQq4eTkBAqFAk9PT7i+voZUKoXVaoXZbIbRaHzXz93tdpHNZt+1diQSCTgcjncHzVwiAlOpFBqNBiex12g0cHFxgUAgwEmUchXcDFqtFmtrazg7O4NUKkUikYBcLsfm5qaogu75+RnX19dwuVyCkknY0G63cXd3h2w2C4/HA6vVOkhFEmORJt8Bx8PDAx4fH2Gz2bCxscH7emw0GqFUKpFOpzlHTxIEQaL7hwvwSx8s18f5kEwmMTU1JcgWoVar4fP54PF48PDwMGiNPDs7yzkbWyiPj4/QaDSDyp7FYkEymcTx8TEmJyfh8XjG1l3NarVid3cXV1dXODw8RCAQEO3zOxwOqNVqnJ2dQaFQYH19nfONm6/wZhafHR4eQqvVsr7R2Ww2ZLPZQYLMe+eQy+XC7e3tm6JJLpfD6XTi4eHhTSHpcDhweHgIr9f7037qdDoolUqQyWQ4PT1Fr9eDzWaDyWSCy+WCVquFVCpFrVZDMBgcKVSEppe8t4iy1+vBYDD8YJOp1WoolUooFAq4ublBp9OBzWZDJpOB2Wz+STRns1kYjcZ3YwkfHx+xvb395vtlIgKZplHviefb21tsbGywPk87nQ7Ozs4wNzfHymrwWnArFApeXS6NRiNmZmZwcXEBp9PJOdLwLbrdLm5ublAsFrG6uirqou7X9Pt9JJNJxGKxQbwqc62bmZlBNBrF+vr6h16P6/U64vE4MpkMnE4ndnd3RWm8Njs7i3g8TqKbIMbEX3YOiWlHy/wwNyiuj/O9SD89PYnmK1QoFIO4Qb1ej7OzM5ydnaFYLH7Ivmy323h4ePhBpEgkEkxPT+Pr16/o9/vY398ftIQfBwqFAqurq5iensbJyQkeHh5E23atVoNMJoNEIsHt7S2vz8B3caVcLsf6+jru7u44PW9xcRH5fB7ZbJbVjbRQKLybmOJ2u5FKpd5sgvO6LXy328XT0xOCwSD29vYGPmqNRoP/+q//QiAQgMvlgl6vH1Q4NRoNms3myCx4oeklfBZRMoOepaUlbG9vQy6Xw2QyIZlMYm9vD+fn50in0wNPOZts7sfHR1gslndnp7hEBIZCIU6D7n6/j8vLS1gslpGV/1GC+/z8nLfgBv5YiJpIJGCxWFAsFt88r7hQKpVwcHAAiUSCnZ2dsQpupnV7Lpcb2rp9ampqYCH6CMrlMi4uLnB0dASVSoXffvsNXq9XtE7HTJoRm7hRgiC485etdP/KBJDHx8ehPlGhyGQyzMzMDMRROByGQqHAzMwMp9bkXInH45iYmBhamVQoFPD5fJiamsLNzQ2SySQWFxc5WQO44HQ6YTabEQqFkM1mEQgEBO3nYrGI29tbfPnyBVqtFhcXFwgGg5wXqL0W3lwq3hqNBsvLy7i8vMTm5iar6X+mW+XFxQV2d3ffFJlMBvvNzQ22trZG/p1KpYLNZkMikXhzsaTdbsf9/T1SqRTy+TysVismJyextLQEpVKJbreLf//73yMHrxKJBFqtFtVqdeg5JVR0s4kLfGsRH5NaMj09jenpabTbbRQKBaTTaVxdXcFkMqFQKGB5efnN68/Dw8O7fn0mIpCNDS0ej0MikXBK/GAauXBJOGEEt1wuRyAQ4FWASKVSuLu7w/LyMkwmE05PTwcLP4Vc02OxGB4fH+Hz+cZ6zavX64hEIqjVavB6vSPXr0gkEng8HkSjUdhstrHZW/L5POLxOGq1GmZmZhAIBMbiu5ZIJJiamkIqleKcisM8f9S9WMyZZIL4s0KrJcYkuoV0amRzYXO5XPj27RvcbvdY4wabzSZSqdS7nfR0Oh02Njbg8XgQDodxfn4+tpb3arUam5ubsFgsODg4QDqd5rWdVquFy8tLBAIBGAwGyGQyrK2tQa1W4+joiNf751vxNpvNmJ+fx9nZGeuKoMlkgtPpZNWt0uFwDCLu3mJmZgbJZHJoFbparSIcDiMajaJcLsNqteIf//gHVlZWMDk5ORC6MpkMOp3uzZmYt5rkSCQSyGQy3pXR97pRvhcXmM/nf7BhKBQK2O12rK6u4h//+MfAP/7777/j5uZmaPxhOp2GVqt9N6GDbURgtVp9d6Hra5LJJPL5PFZWVliLQUZwM4M6PiLy9vYW9/f32NzcHCxGXV1dRb1e550FXa/XB/7pnZ2dsQnul63bTSYTq9btExMTkEgkY+m18Pz8jMPDQ9zc3MDhcOC3337D9PT0WBc6Tk9PI5PJvNuVeNTAiPl5LbjFmkkmCBLdnxzmC89cBCQSyeBHbKrV6sAz+hHY7XZsb2/D5/MhnU7j999/x8PDww/RakKIRCKsp76BP/zGX79+hcFgwOHhIe7u7kR7L6+ZnZ3Fly9fEIvFcHl5yVmkXVxcYGpq6oebqkQigc/ng8vlwtHR0btNY8QU3k6nEzabDefn56wHTx6PB81mE4+Pj+/+7eLiIm5vb9+8mWq1WhiNxh+2l81mcXh4OIiM293dHYieUbMB73WnfK8dvJBqd6vVerPSXavVOInul8hkMtTrdQQCgYEN5fj4GCcnJz8cazYt39lGBDIWEa/Xy3ohdT6fRywWw/r6OusZm36/j4uLC8hkMiwvL3O+PjKCvVwuY3t7+4cZGybR5O7ujrMt7vHxEUdHR3A6nVhfXxc1+eQlL1u37+7uYmZmhvU+mJubE+1a1+/3kUqlsL+/j3g8jtnZWXz9+hUOh+NDxKpCoYBerx9YyAiCEI+/fHrJS8H98qL28vdiX7h/xSKUl3GD9/f3osQNVioVlEolzgksUqkUs7OzcDqduLu7w97eHubn58eyX/R6PXZ2dnB7e4vv37/D7/ezWiwWjUYhlUpHCqPp6WloNBoEg0EsLi5ybnjB12qysLCAYDCI6+trVgvPmG6Vx8fHMJvNb1pTjEYjTCYT7u/v30xomZ2dxfn5OVqtFlKpFDQaDebn53+I0HM4HIjH4yPXLVgsljc7Yup0ujf96EyDHD5JDO12e+Tzms0mpFLpyEW/lUoFcrl85CCzXq+j2WwOzjGPx4O5uTnkcjnc3d2h1WoN9tNb5yGXiMC7uztoNBpW+d3MoCIUCmFlZYW1SO/3+zg/P4dUKuUluFutFoLBIHQ63cjKOrMw/OLiAtvb2+8O5NvtNsLhMFqtFjY3N8eWklQqlXBzcwOJRIK1tTVeBZOJiQnEYjEkk8l3B1ujYBbePjw8QKfTwefzjc2mx6YAcH9/P6jii3HfJQjiL17pHvbFH2eloNPp4Onp6Zeu/Nbr9VhZWcHW1hZarRb29vZwc3PDyypxf3+P6elp3gksSqUSfr8fa2treHx8xOHhIa/KMRuRv7i4CL/fj3A4jEgk8mY1N51OI5PJvCsurFYrNjc3cXd392aHPTbCm0vFe3l5GeVymfViUa1Wi7m5uTe7bL4U9clkcuT50G63kcvl0G63UalUsL29PbDyvNxX77WFNxqNg1zsUaL7rcVaQhJM3rKXvGctea8L5dPT008DMIlEgomJCWxtbWF1dRW5XA7NZhPxeHxk5ZNtRGCxWMTT0xPr5A8ma35+fp51hrdQwV2pVHB4eAibzQa/3//m8ycnJweWqLfO1Ww2i+/fv0On02Fra2ssgptp3X5xcQG3242trS1BM5Rzc3O8Zhnb7Tai0Sh+//13lEolrK2tYX19/ZcJbmYQ0Wq13l18TRAEie4fxPVrK8lre8ko2wmfUXoqlXo3Ruyj0Gg0WFpawtevXyGTyXB4eIjLy0vWq9KZKjeXxINRGAwGbG1twe124+LiApeXl5xaoLPFYrFgd3cXzWYTh4eHQ+0LjUYDkUjkp06Ubwna7e1tFAoFXFxccPY58hHejLf84eGBVToJgMHg6P7+/s2/U6lUmJ6e/qmBTavVwu3tLfb399Fut7G0tIRmszmyGvleW3iJRPJmS3jGIjDKQjIuewlXP/cw0f1WxbnX60EqlWJzcxO1Wm1gEXgpxJiIwPey2bvdLkKhEJaWllidq4x4ttlsrAf+jKWEmTHhKriz2SxOT0/h9XpZr2NhPOzxeHzoZ766usLNzQ1WVlZEzeV/eYzG0bp9YmICKpWKtW+92Wzi5uYGe3t7aLVa2NrawsrKiuidOvneP+12O6/1MlTlJoi/oeh+uWjj5cKO178b9Rw+/CpryVsolcof4gZPT09ZxQ0+PDwIqnKPqnJ9+/YNGo0GBwcHiMVivBbrvIVcLsfKygpmZmZwenr6w42dERhcG/ooFAp8+fIFUqkUx8fHnMUgH+GtUqmwurqKcDj8pvf5JX6/H4lE4t3q1MzMDMrlMorFInq9Hh4eHvD9+3f0ej3s7OxgcXFx4B99y9fJNMp5axD0lq/7rWq3ENHNt9Ld7/dRLBZHVhhLpRKkUumboojxcmu1Wvj9fmxsbAzEdyaTQb/fZx0ReHNzA4vFwrrz6/X1NWQyGetGS8z3AQCnxZYvrxHX19dYX1+H3W7n9Nzl5WU8Pj7+cB0ql8s4ODhAv9/H7u6uaB1oX5LJZLC/vz/ojOnxeERdlDg3N4dEIvHmPaRarSIUCuHg4ABSqRRfv37F0tLS2DtpcsXpdOLp6Un0azRBkOgmBFOpVNBut8faGl0ITNzgb7/9BpvNhnA4jKOjo6GV1Hq9jkKhIEqV+6cTTiqFx+PBzs4OqtUq9vb2xpJx63A4sLOzg1wuh+PjYzQajUGGNJ+qllQqRSAQgM1mG1lFF1t4GwwG+Hw+BINBVgJUpVINulW+daOUSqVYWFhAKBTC3t4eCoUCNjc3sbi4+IMQnJmZebNy/rItvNiim/F084FvpbtYLEKr1Y70e79X5WYa7LwceGs0Gvj9fvj9fsTjcXz//h2FQuHdqvDz8zOKxSLr2LaHhweUSqU3YwzFEtxMS/dUKsXbksGko1xdXaHT6SAWiw1sMX6/X9TBPnPcT05OEIvF4Pf7OfnduTAxMQGlUjl0MFoqlRAMBnF6egqtVotv375hYWFhbAtDhaLT6aDValnPtr13zgidSSYIEt3EDzfkycnJTx+FJJVKf4gbjMVi2N/fx9PT0+BCKNTLzQaVSoWVlZVB+/Xj42POQpbNa2xsbGBiYgIHBwd4fHzklT37ktnZWXi9XpyennK+GfER3na7HVNTUwgGg6wqTna7HXq9fpDPPGqAmEwm0W634XA4sLa2NrTyzzTKeMuH/1a1m6nc1Wq1ob9/K8GEr6e72+1CIpEMrV72+/03k0ve8nP3+31kMpk3B2wPDw+Ympoa+toWiwXb29vo9/vo9Xq4vr4eOahot9u4vr5GIBBg9R3M5XKIx+Osk0oYwd3v9zkLbqa7JWOHEJKRbzKZYLFYsL+/j1KphJ2dHc4V8/dg9uXp6Snsdjt2dnbG7pVmqt0vj8/x8TEuLy9htVrx22+/YXZ2dmwdfMXkLQvZW+fXqMeFzCQTBIluYnCjTyQSqFaryGazf5qLChM3uLi4iKenJ/z++++4u7tDLpcbS5V71I13Z2cHTqcTZ2dng7QCMXG5XJDL5ZBIJAiHw4JajDP7bX19HdfX15w7Y/IR3rOzs9BqtQiFQqz+3ufzIZfL/WQN6Xa7iEQiOD09hcPhwMbGBlKp1MiFXxKJ5N1qt8PhQDqdHnnOv1XtHoe95C1rSb1eh0qlGmkneMvPncvloNVqR1ZHma6E09PTbw7MFQoF/vGPf0ChUODw8HCoZzYcDsPpdLLqtMhYFVZXV1kJYCZ+sN/vY3V1lZPgbjQaODo6glarxdramuBBeSqVGnz+2dlZUSu+/X4fiUQC+/v7kEgk+Pr1K6ampj6kKMLMdt7d3eHg4AB3d3eYmprCt2/fRg7KPhv9fh/ZbBaFQgG5XG5oFj1BECS6fwmFQgFarRZ2ux3xeBz//ve/cXNz86dZ+W2xWPDlyxesra0hnU6j0+kgHo8LFqdccDqd+PbtGxQKBb5//454PC7a4OX6+nqQH65SqXBwcCA4g5ZZHPr09ISrqytO75WP8F5aWkKr1WKVoiKXy+H3+3F1dTU4hsViEQcHB2i32/j69SucTicMBgOsVitisdibx6VcLo+sVr9uC/8aq9X6puiu1WpD9x1fewlfa0mn00G1Wh0pdN+zljw8PMDhcIysXjIRgV6vd2DvWV9fRzweRzAYHCwsTqVSaDabb0Y6vhxgMJGWbAQ6I7h7vR5nwV0sFnF0dITp6WksLi4K+u60222cn58jkUhgc3MT6+vruLq6Ei3PP5/P4/v378hmswPb1EdVlXu9HpLJ5GCx7Pz8PHZ2dv4Us6DAH1axm5sb/Pvf/0Y8HofVaoXNZhPFYkIQBCD7v//3//5f2g3CuLu7G9gAnE4n7HY76vU6otEoEokEOp0O1Gr1p59OZBIFNjY2UCwWB1Pgb/lcxX59i8UCm82Gx8dHxGIxqFQqQXFhz8/PeHp6GrR1t1qt0Ov1uLq6Qr1e/ykKjwtyuXxgr0ilUrDZbKyrWGq1GgaDARcXFzAYDO/6S5lYupubGyiVyjcTOJjtN5tNPD09oVKp4OHhYZAw8bJCaTKZcHV1BZvNNrRCzPgvn5+fR3YBZH4/zBqgVCpxe3s7tNGIRCLB09MTrFbrT68tlUoRjUZHtqOPxWJDhWmlUkGtVhtqA8lkMlAqlUPtBblcDq1Wa+hC6G63i5ubGywtLQ09vt1uF+FwGH6/f+T3JBaLQSaT/dDCXalUwuVyodlsIhwOQyaT4e7uDmtra+9Wffv9Ps7OzmCz2d6sroshuNPpNMLhMJaXlwWnfORyOZydnQ0GnkqlEkqlEp1OB9lsFlarlfe26/U6wuEwnp6e4PV6MT8//2FJUp1OBw8PD4N9vLi4iHw+D5vNNhbvuJgwA4SrqytkMhkYjUb4fD643e5Bp97PGBJAECS6/4a0223c3Nz8sPhHLpfDbDZjenoaRqNx0HyBsZ5oNJpPOcWYTCahUCgGXRqZKuf19TWq1So0Gs2HLPpRKBSYnJyEVqvF3d0dnp+fodfrOb92t9tFMBiE3+//Qbir1Wo4nU48Pz8jFovBaDTy9qZKpVJMTk6iVqshEokMFZBiCW9m0HBxcQGTyfTue5bJZIPK+MbGxtDUDeacfXx8HCmodDodbm5uMDk5OVRUajQa3NzcDJ06l8lkyGQy0Ol0Qz9fsViEQqH4aRAhkUgQj8dHTsePEt3FYhGdTmfoACGZTMJsNg8dsCSTSej1+qGJGYx9ZpToSCQSkMlkIxsFNZtNXF1dYXV19af9J5FIYDKZYDabEQqFoNFoMDU19a51IxwOQyqVwufzsRbc3W4Xq6urnK490WgUDw8P2NjYYFVNH0Wv18PNzQ0SiQSWl5fhcrl+EP4mkwl3d3cjz5P3vufRaHRwji4vL4+tkc5rWq0WYrEYwuEw5HI5lpaW4Ha7oVar3xyM/mq63S7S6TQikciguDE3N4eFhQWYzeYfzlO1Wo1YLAaHwzHWdT4EQaKbeJdUKgUAI2+4KpUKVqsVbrcbSqUSz8/PuLm5QaVSgVQqhUaj+RTTjr1e76dMYJlMBovFgqmpKTSbTVxfX6NYLEKlUn1I9Uaj0cDlcqHX6yEcDqPRaMBkMrEWDZFIBFqtdmglUCqVwm63Q6lUDqpTJpOJ97GwWCyQyWQIhUKsBDRf4c0I1MvLS9jt9pGV1UQigZubG8zPzyOTybxpfTAajYjFYtBqtUNjy6RSKdrtNkql0tBKpFQqRaVSQa/XG5pk0Wg00Gw2h1aYa7XaDx0eX3+3RlXgR4nufD4/mDF5zd3dHdxu99DtRSIRzMzMDB3YRSIRuFyuoUKOEbQ+n2/koPD6+nowTT+KdDqNbrcLg8GAaDQKg8EwclAVj8dRLBaxtrb27vna7/cRCoU4C27melCpVLCxsSHo+14ul3F2dgaFQjFy0a5EIoHBYEA4HObkvU6lUjg/Px9EbFqt1g+5ntbrddzd3eH6+ho6nQ5+vx9Op/OHc0Cr1eL29nbkYPWj6ff7yOfziEajuL6+Rr/fh8vlwtLS0iBjfBgSiQTNZhP1en0sMY4EQaKbYE08Hsfk5OS70/0SiWTg+56amhp4/+7u7tBsNqFQKAQlAQiFaegwbPAglUphMpkwPT2NXq+H29tbZDIZKBSKsVeUmJuxy+VCsVjE1dUVpFIpDAbDmzfXQqGAeDz+rtDQ6XSYnJxEIpHA4+MjzGYz7ylpvV4Pg8GAy8tLKBQK1k0uuApvZqbk9vYWDofjh8/X6XRweXmJUqmEL1++DMRnPB4fWamVSCRQq9WIRCIjBY9Op8PV1dXIyrNUKkUymRz5GqlUaui51el0kM/nR9pBjEbj0P0xSnRnMhmoVKqfqrIvPdWvP1+z2RzYb17TbDYRi8Xg8/mG7penpye02+2Rrb9LpRIeHh7eTAmpVqu4urrCly9fBgLt6upqMCB6+TxmdmZjY+NdIccI7k6nw0lwt9ttnJ2dQS6XD63Oc+H+/h43Nzfwer2Ym5t78z2oVCo0Gg2USqV3E0ZKpRLOz89RqVQQCARYzQ6IQaVSQSQSwd3dHcxmM5aXl0cOfqVSKbrdLgqFgiDbjBjvOR6PIxwOo1qtYmJiYjBI0Gq1rAYpCoUC9/f3H7bAniBIdBM/wXg932t9POxibDAYPpX/m6n0vSX4GAH8svshM7Wu0+nGWmGSSqWwWq2YmJhAIpFAPB4fWZnt9Xo4OzvD4uIiK+HLeLOZ6p5cLufdDlqtVsNms+H6+npkBVcM4W00GlGtVge2EIlEgnq9jpOTE1gsFgQCgcE5ZDKZBuJwVKWKyePtdrtDbQQymQyNRgO1Wm2oINJoNIO1Da/PXZVKNWgI81p0SSQSPDw8/OB1ZsjlclCr1UMHtKNE99PTEwwGw0/PqVarKBaLQ2c9GNvXMBvA4+MjlErlyCr15eUl5ufnRx6v8/NzzM7OjjyfmHPV4/EMjo1er4fNZkMsFhvMLkgkElQqFVxcXIysFr8mFAqh3W5jbW2NteBm8qxtNtvIgQYbGo3GYIHo+vo6a2uKyWTC9fU1zGbz0JmDVquF6+trxONxzM3N/ZQtPy4KhQKur6+RSCRgt9sRCARgtVrfFfoajQa3t7eYnp7+0BnNVquFZDKJ6+vrwXdicXERMzMzMBgMnO2NKpUKiURi5HEhCIJE99hJpVLo9XqCFph8Bv83EwvFpeWyTqeDy+WCRqNBMplENBqFRCKBTqcb6/tVKBRwOBxQq9W4ublBPp+HwWD4oTr98PCAXq/HKgHitZCdmJgYxCYylhG+7/Hh4QHPz8+YmJhgtU+4Cm+r1Yp0Oo1yuYxer4fLy0t4PB643e6fjqPFYkEoFILFYhl502Sm910u19D3q9VqcXV1NVRAvJyCfi3KJRLJwLv9WiwqFApEo1FMT0//9JqFQgEymWyoYB0luh8fH2GxWH4ajOXzeXS73aHC+uHhAWazeejrXF9fY3Z2duixyGazKJVKmJ+fH7o/mUWsb6V93N3dQSKR/LQN5hxKp9N4fHyEVqvF+fk5FhcXWQ3k+AjuXC6H8/NzeL1eVoszR/H09ISLiwu4XC74fD5OBQSpVAqFQoGHh4cfEj96vR7i8ThCodBgESbfgTEXnp+fEQ6HkclkMDU1Bb/fz8niJpfLUSqV0Ov1xt7evdvtIpPJ4Pb2Fnd3d1AqlYO+AkJm8Bjq9fqbA3eCIEh0jxW21hIu1YRf4f++ubmBw+HgdRPTaDRwOBwwmUyDhTndbhc6nW6s071arRZTU1NotVqD7G2j0YhWq4WrqyusrKzwuskoFAq4XC7UajVcXV1Bq9XystBIpVI4HA4Ui0Xc399jYmKClfjgIrwlEglsNhuurq6QzWaxtrY2chpbLpcPkkScTufQ80ihUKDZbCKfzw/trKpQKFAulwf7etjvGQH9mna7jXK5PHS7z8/PQz3MlUoF3W53aGV9lOhmbDSvBxbpdBpqtXqoYLi+vsb8/PxPx6darQ6SMIZxdXUFt9s99Pvf6/Vwfn4Ov98/shJbLBYRjUZHNrWRSCSYnJxEvV7H9fU17Hb7u50sGcHdarU4Ce5kMolIJPLmOfQenU4HoVBocC6+5WF/C71ej0QiAalUCr1ej+fnZwSDQUgkEqysrMBut491YN/v95FOp3F5eYlyuYyZmRksLS1Br9fzuv4qlUpEo9GfFo+KRT6fRywWw/X1NbrdLpxOJ5aWlkRPTlEqlXh4eBi5fokgCBYD8b/Ch3h5IXuZ+cvm8de/41JVKBaLWFpaGsvnmZiYwMTEBDqdDjKZzMCTNzk5yVsgD4PpOBgIBARtx2AwYGVlBfV6HfF4HHt7e3A4HJiZmRnb9C/TvMXpdOLu7g57e3tQKBSYnp4eajvhst35+XlYrdaBiPB6vZwHERKJBEtLS3h4eMDR0RFWV1dZHbeXOd4rKysj/a39fh+RSAQKhQKdTgedTufN7TocDmSz2YG3eRgejwd7e3uYmpoaKiZnZmZwcXEx1Pv9si38689psVgG6wZewzTJeS3klUol56z7Uc1xqtXqUD9qtVqFVCodKk6YLrOjBHOr1RqZTHF/fw+TyTTSVtHtdhEKheD3+98dHDYaDRgMBmSzWWSz2aEDF76CmzmH8vk8tra2eIu0fD6PcDg8sF4IFcU+nw9nZ2dIpVLodDrw+/1j7yTZ6/Xw+Pg4sK6xnVV4D6PRiF6vh2KxKNpnYAaE6XQaSqUSDocDXq93rBGJer0enU4HjUbj08cgEsRn5U/fHIfJEWZ+GCEw6vGXNxshLWmfn5+h0+nG7r2Wy+VwuVzY3NzE9vY2FAoFLi8vsbe3h1gshkajIWj7j4+PsNlson0OjUaDpaUlfP36FVKpFAcHBwiFQiM7D4qBQqHA0tISZmdnUa/XkclkUCwWBW/XZDJhd3cX/X4fBwcHb7ZDfwu32z0QEZlMhtVz3mug0+12cX5+jlarhe3tbaysrODy8nJkExuGpaUlZDKZkU155HI55ubmRraRZ6rvwzopMsJ+WNtonU6Hbrc79Hwd1Q6eT4Oct0T3sEHEW63f0+n0/8/em/U2tuXX4YvzPM8UB80SNUuluvfCjv+NGMiAtjsJbAQG8mIgQB6ST+GXfIEAyUsSw0gDDmLATgC34yFOOu1Op2+VqjQP1ECR4jzP83D4f7jeOxwlUlOJ3WcBQlWRKvLw8Jy91/7t9VtraCBOIBAYqEMnC9lwOIzZ2dmhx3lzcwONRvNgVZnc4xsbG3C5XLi6uhq6eLm8vEStVhuZcBNLzXK5/GjCTawALy8vsby8TMN/noJGo0Glezwe78Wj25vNJu7u7vDtt98il8thdXW1qwn5OeYos9mMSCTypNep1+sIBoP4/PkzTk5OwOFwsLGxgZ2dHUxNTb2KJ/l9CbMsWLD4JSDd45JmQsafikQi8er+q2KxGE6nE1999RVcLhcajQb29/dxeHiISCTyYKVz0Lm7z3HiKRAKhZidncVXX30FqVSK4+NjnJ6ePgsZHvZZQqEQVldX4XA44Ha7cX5+/uRFCY/Hw9LSEmZnZ3F2dgafz/eo60en02FjYwMej+feWPVRiHez2cTR0REEAgFWV1fB4/GgUqkwNzeHk5OTe5NESVolcbUYBCLbGZZC53A4EAgEhpLuYbHwarV64IQ9LA5eKBSOlYraaDTA5/P7FthkF2AQqRwW/Z7NZoe685TLZRQKhaH3DWkaHbbDk0wmkcvlhu42dI4x0WiUOo+o1WpsbGwgEAj0JZMSS8319fWRSG+tVsPBwQHEYjHW19cfteguFos05XR3d/fJxLg3un1rawvFYpGmdT43arUaPB4PPnz4gGq1iu3t7RfTipvNZqRSqbFTfhmGQTwex8nJCfb29lAqlTA3N4dvvvkGMzMzr+ZHTmAwGEYuHLBgwWLAHPyL+sF6q9ujyE7GGQjz+fyT45CfAoVCAYVCgbm5OaTTacRiMdze3kKj0cBkMo3kVxuPxyESiV60IYnP58PhcMBmsyEWi+Hy8hJCoRB2u/3ebfJxQbaESeVQp9MhEAhgf38fVqsVdrv9SRpzvV4PpVKJy8tLHBwcwOVyjS1hkcvl2NnZodXFYQmHw4j3ysoK5HI5Dg4OoNfrMT093fUdm0wmlMtlnJ2dYXNzc+j3T1I/r6+v4XK5Bi5M5+bmqL/0oKZMDoczUOrQGQvf+5xWq0UqlerThN5HusepdI9b5W6328jlclhaWup77r7Y90AgMLDxE/jOym7Ya5JjvL6+poulYSChVJubm136dJlMhq2tLRwdHYHH48Fut49NuAuFAs7OzmCz2YZW60e53wKBAObn55+cUkkWPx6PB0KhEFtbW5RMWiwW3N3dDT2fj0G5XEYgEEAymYTZbMb79+9f3JFDKBRCq9UiFAqN1OCdzWYRi8WQTCahVCphMpnGDjZ6CRDXpGazOdZCbdBYRObe55B7smDBku4vgM4qdm9Fu1NuMuz/jDNBSCSSN6Fre4r+m4SmvIaVFZfLhcVioUmQPp8PXq8Xdru9y6XgMSARzNvb213v53Q6YTabcXt7i729PczOzj6aIPzBH/wBnZhJgEmr1cLf+Tt/Z6zGIkIq3G43jo+Psbq6+uC2MCHeZ2dn4PF4MBgMfYSbYGZmBufn53S7fxhmZ2fx+fNnxOPxgedEo9FAKpUiGAwO9KAm1e5BCyciMel9TqPRDJStCAQCcLlc1Gq1rurwuKS7Xq8PJE/DSHc+n4dYLO47/wzDIJlMDnQlqdfrSCaT+PrrrwceAwkkGkaOLi8vYTab77XQq9VqtAlz0HGLRCKsra3h5OQE8XgcPB5vZMKdSCRwfX2NpaWlRy16a7Ua3G43AODdu3dP7teoVCq4vb1FqVTC7OxsX/OlzWbDx48fUalUntSnQRYbfr8f+XweVqsVX3/99atas5rNZng8HjidzoH3brlcpjptYmM6MzPzpiz6OBwOtFotMpnMWDu9g+ZilmizYEn3LwjhfmlkMpkXb+p51Jf5t/pvi8WCarWKWCyGi4sLSoSI1R4hD9ls9lkrSKN+TwaDAQaDAZlMBn6/Hz6fDzabbahV3UMIBoPQ6XQDJ2WRSASXy0WtGEOhEObn58eu7qfTaQgEAupswOFw0Gw28dOf/hT/5J/8k7EmRi6Xi5WVFfh8Puzv72N9ff3BbWK5XA4ej4dmswmdTnfvImV5eRmHh4fw+/1D3S64XC5cLheOj4+HRsrPzc3h4OAAJpOp7/Pp9Xp4vV7kcrk+RxCDwYDb29u+aphQKKQOKL3nn1S7O4+Dy+WCw+Gg1WqNtEvxXHruVCoFhUIx8DsNBoMwm80DyVosFgOHwxlaIY9EIqjValhdXR36GRiGwenpKaampu4lxVKpFEqlEslkEk6nc6Tz4/f7EQ6HsbGx8Sj7ung8jpubG9jt9qFhQKOi1WrB7/cjEonAbrcPDQ/i8/mw2WzUWeWx47Xf70e1WoXNZoPL5foiFWONRkNdfMiiq9FoUBlRrVaD0WjE2traszlivQRUKhWy2eyzyCtfc95mweItgPuL8CHGuXGfo6o7LEHvLeEh/Xc8HodKpXqV5pv7JqHNzU2srKwgl8vh22+/xd3d3Vja9EajgXA4/KCVmlKpxM7ODqxWK87OzqjLw6iQSqXg8/ng8XiUDIpEIng8HvzFX/wFksnk2J9/enoaMzMzODw8RDqdHvp7zWYTh4eHMBgMWFtbG9pc2UlW19bWEA6H79VfyuVy2Gw2WrnshUQioc4wg+4ju90+UNvN5/Oh0WgGvvewRqxhzZTjVLvr9frA67lcLg8kMcP03MOkJc1mE9FodKAkozPxchCq1Sq8Xi9cLte9Y9DFxQXkcvmDpPbq6gq1Wg07OzsIhUJDG1uB/5dMmUwmsbOzMzbhbjabOD8/h9/vx8bGxpMJdywWw8ePH1Gr1bC7uwu73X7vObHb7SiXy/de84OQSCTw+fNneDwemM1mfPXVV0NlQa81T5lMJiQSCSQSCZydneHjx4/I5XKYnp7GN998g7m5uTdNuIHvpHuJROJRZHnQXM3hcOgPCxa/6Jj4SnenW0nnJDNM032f1nsUVKtVNJvNNz8wdmKQ/pt4I6dSqZH03y99fJ12gx8+fIDZbIbNZntw+9rr9cJsNo+89WwymaDX6+H3+/Hp0yeqa31oIia2fMB3zZXkutHpdDg7O4NWq4XBYMD8/PxY2nGj0QixWEyTC3s9rlutFo6Pj6HT6aikZBQ7QaFQiLW1NRwfH1Pv70FwOBxIp9NDUyGdTic+fvyIYrHYR9ZMJhN8Pt/ASrLJZEIgEOiT3mi1WgQCgb5FkkwmG7jwIA4mo3y/jUZjYHW6WCz2HV+r1UKxWOyr0jebTeRyuYFa90gkAq1WO/CafMgi0O12w+Fw3Luj4fV60Wg0sLKycu/nvL6+Rrlcpv7e6+vrOD09BZ/P73NDaTQaODs7o7KmcQlnNpuF2+2GXq9/shUg2W3icDhYW1sbebeJw+HA4XDg7u7uwR1GhmEQi8UQCAQgEAgwPT39rL0jT0E+n0e1WkUqlUKxWITZbMby8vKrxNc/JwQCAUQiEYrF4pP7gZ5D7smCxSThF8K9pPdn0HPD/s+4SKfTjw6PeAsLFJ1Oh7m5OaoZDAQC+PnPf46bm5uxPZGfG512gxwOh9oNDrPBq1arSCaTIwWGdILH42FmZgY7OzsoFArY29t7sFLdSbQ6rxsSm351dQUOh4NPnz6N7dCiVCqxvb2NSCSC6+vrrgXixcUFZDJZl4b7ITtBArlcjqWlJZydnd3rALG8vAy/3z+wmZGcq5ubm/7Bg8vF1NTUwGq3VqtFuVzuc49RqVQ0QbOXdD/VwWRQpbter4PD4fQ9nsvlBsZhx+PxgfHeDMMM1bc/ZBHo9/vB4XDubVqMxWJIJBJYXV29dwF8fX2NYrHYFagjl8vhcrlweXnZZWtZLpdxcHAAlUqFlZWVsQgzwzDweDzUS3x+fv7RhLter1M3oampKWxvb49N1kwmE2q12tDrvdVq0QV7MpnE0tIStre3vzjhrlQquLu7w8ePH3F5eQmFQgGJRAKn0wmTyTRxhJvgMdaBLKFmweIXRF7ymkgkEs/m3/olP4PZbIbVan0x/++noNdu8OjoCKenp30+2aFQCFar9dHNUGKxGKurq1haWoLP58PR0dFQP/Hl5eWhsheBQIB8Po90Oo35+Xmcn5/D6/WONcGIxWJsb2+jWq3i9PQUrVaLEt3FxcU+IjYq8dbpdJiamqKvOey9Z2dn4Xa7Bx6z2WymEdO9sFqtSKfTfaSepCn2enaTWPfeY5ZKpahUKn3vP468ZFCle5iee5i0ZFhjaSwWg1wuH/ha91kEFotFBIPBe5ta8/k81SzfJ/ci6bQbGxt9ZI1YRp6dnaFarSKbzeLo6AgOh2NoTP0wlEol7O/vU/nHY8c7hmHojpJIJML79++H6t1HIWyDrCobjQa8Xi8+fPhAz836+voXjSpvNpuIRCI4PDzE4eEhGo0GXC4X3r9/D4fDQSUmkwy1Wj3UUnTc75UFC5Z0sxhaTclmswiFQvD7/V+8MvwU0t3pEvDc/t/PBWI3+PXXX0Or1eLi4oLqn+v1OhKJxKMtz3onkHfv3sFgMOD4+BhXV1d91VUulzv0PLRaLYjFYvzv//2/4fV6sbu7S4nLQ2E1vYR0bW0NEokEHz58QDabxfLy8tCJaVTibbfbIZfLh2q3CbEWi8UD9dsAMD8/D4/H01eh5vP5MJvNA6vdw4JyBlXJSCpk7/kaJyBnUCPlOKS7Wq2iXC4P3MkaVuUmFoGDdlsYhoHb7cbc3NxQmVS1WsXZ2RmWl5fvlZ6QnahBhJvAaDRiamoKh4eHOD8/h8vlGtuDPxgM4ujoiDY3PnZBm0wmsbe3h0KhgJ2dHczMzDy5qmsymVCpVJBOp1GtVnF9fY2PHz+i2WxiZ2cHLpfri8n+2u02UqkUzs/P8eHDB2QyGdjtdnzzzTd9jdsGgwHJZHIiq77EASYQCCCfz4/tOz7ovHVqutlKOItfdPDZUzA6iDbU6XTS2ONarQaNRkN/3no8bqVSQbPZHLq9+xz+38++MuRyYbVaYbFYkEgk4PV6UavVoFKpnm17lsPhwGq1wmg04u7uDnt7e1RjzeFwMD09jb/6q78a6lLSbreh1Wrx4x//GIuLi1hbW6PVLqfT2afVvu841Go14vE4ms0mSqXSvVW7USPjFxcXcXx8jNvb26EyiMXFRXz69Ak6na7vPYleORAIwOl0dj1ns9mwt7cHp9PZRXqHxcJrNBpcXl72vT+RmHQSJ6FQOHKa6SDLwEHx8vV6HbVare8eILHvvdd3MpkEn88feG7vswj0er2QSqVDq7skEdLhcNwrWRuFcBM0m00wDAOpVDqWwxKxAmy329jZ2Xn0OFYqleDxeFCv1589up00Il5dXYFhGFgsFnz11VdftBm8UChQmz/yXS8uLt67WCF2s5lM5s1LFavVKjKZDDKZDLLZLIRCITQaDV2AFgqFkT/DMELNEm0Wv0zg/d7v/d7vsadhNJAwGavVCq1WC6vVCrPZDA6Hg2w2C6/Xi0gkgnK5jHa7DaFQ+MXDDHoRiUQglUof3DLmcDiQSqUwGAywWq1gGAbhcJgSXtJM85rgcDiQyWQwGAwIBALgcrkIBALgcDiQy+XPshjgcrnQarXQ6XQIh8Pw+/2QSCTQarX4+c9/fq81YLvdBpfLhdvtxrt376BQKKDX63F3d4dEIgG1Wv1g5bBSqeDi4gJra2vQarU4Pz+HUCi813GCNEqen5/TmPZB506v18Pj8YDH4w18PR6PB5lMhqurq4H2jSQcyGg0dn0OHo+HarWKSqXSR7KazSby+XzXxCwSiWgDbCeJrFQqqFarXddmrVZDPp/vk3zc3d31hYz4fD44HI6u4/b7/TCbzV3XaiqVAsMwfa95fX0Np9PZd11fXl7Cbrf3VaJjsRiKxeLAkKxsNgu/34+1tbWhRPn8/Jzq9YfB4/Egn89jY2Pj3muHYRiawLq9vY1MJjPw+xiERCKB09NTmEwmLC0tPaq63Ww24fF4qNRmcXHxyb7ancjlcri5uaHf3fr6et/185pENBwO4+rqColEAkqlEgsLC7DZbAP7BIYtuHK53Jtp8uw8rkwmg1AoBI/Hg3A4DAC0F8hut0Or1UIikaBer6NYLE5sjxMLFizpfuPw+/0wGo1dkwkhMHq9Hna7HWq1mobUeDwepFIp1Go1ajH3pTVsNzc3cDqdY/tKKxQKmM1mGAwGVCoV+Hw+hEIhGq/9miEToVAIXC4Xm5ubUKlUiMViVPogl8ufZaEjEAhgMpkgkUjg8XiQTqfh9XofrKrx+XzUajWkUiksLCxAIBDAbDajVqvh8vISYrF46BZ4s9nE8fExpqen6cSm0+mo3OW+hdIoxJssKNxu99DfkUgkqFQqSCaTfUElfD6fart7PXqlUimurq7ozkDncd3c3MBms3U9XiwW6WKp8/On0+muynCz2UQymexzQekl3e12Gz6fr0+/7PF4MDs723VNBINBqFSqrkp3oVBAIpHo2wXI5XKIx+NYWFjoI7kkwKaXpLdaLZycnGBxcXHoYolUg++zEPR4PMjlcg8S7nq9jqOjI4jFYqysrIDH40Gr1eLm5gZCofDe6+3y8hLxeBxra2uP8l1ut9uIRCI4OzuDXC7H6uoqVCrVs41zqVQKV1dXiMfjMJvNNFcgk8n0XZ8vTUbj8Tg8Hg/8fj9EIhGcTidmZ2dHWkwPul89Hk/f/fLaaLfbKBQKiEaj8Pl8uL29Rb1eh0KhgMPhwNzcHAwGA80J6B0PgsEgrFYrSw5YsBgRrLxkRDAMg1wu96Cdl0wmg0wmg81mozHTJOK4UqlApVJRKcpDgSjPjXK5jFar9STdI9F/O51OurW6v79Pt1YNBsOLEvB2u41oNEot3RQKBVZXV2m08zh2g6NAq9VCo9EgFAqNfJ2IxWKcnp7CZrNhY2MDHA4HTqeTEt5kMomFhYW+83R1dQWDwdBFOqVSKXZ2dnB2dobz8/N7bdtGkZpIJBK4XC5cXFxga2trYDVybm4Onz59GkiuHQ4HPn78iHw+3yXbkEgkUKvViEQiXVKaYbHwRNfd+VkHOZiMqukeJC2pVCoQCAR9ZCGTyfRpsId5cwcCgYFa7vssAq+vr6HVaodWAKPRKFKpFHZ2dp5MuIvFIg3T6TxOPp+PlZUVHB0dDVxgZbNZXF5eQqvV4t27d49aqHZGt29ubj6bnrrdbiORSFDXF4fDAb1eT8+VxWLB3t7es6RUPnQcmUwGsVgM6XQaarWahhY9lSgLhUJIJBIUCoVXb/qsVCpdkhGxWAyNRgOn0wmVSjXytSCTydBoNIaGUrFgwaIfbKV7RBSLRZTL5bEivzkcDh3QSFIkn89HPp/H3d0dgsEgSqUSGIaBUCh88a3ScDgMsVj8bNuBIpEIWq0WNpsNQqEQyWSSOixwuVxIJJJnr+Ikk0lUKpU+0iQQCKDX62E2m1EoFHB1dYVKpQKpVPrkCYHD4UCpVGJ/f3+kz9NutyGRSHB5eYnV1VVK/kUiESwWC3K5HG5vbyGXyykZCoVCyOfzAxsneTweTCYT0uk0jV4fdq2MUvEmOxM3NzcwmUx9kyz5vG63u8/WjMPhQCgUwufz9d0LpKrdW71rt9tIJpNdBF4gEMDr9fYRRZ/PB6vVSo+Jy+Xi7u6u7/vurXQT7Wln1S2Xy6Fer3fJSCqVCmKxWFdFvN1u4+rqCnNzc13XSqlUQiAQwNLSUtfnqdVquLq6wurqah8hTiaTiEajWF1dHUhestksrq+vsbm5OXRReHt7OxLhJo17CwsLA8clMqZ4vV5YLBbaqOb1euHz+bC4uNi3AzEKqtUqLi8vEYlEMDs7+2xR5QzDIBKJ4OLiAtVqFdPT0zQspvMYeTwearUayuXyizhJFYtFBAIBXF5eolQqQafTYWlpCWazGVKp9NnGNCIxeWl5RrPZRCqVQigUws3NDSKRCLhcLvR6Pebn52Gz2aDRaB41XudyOSpLY8GCxcNgK90jgkRDPwUCgYBGoHdWHBKJBK6vrylB12g0Y1UcRkU8Hh/aRPdUUqrT6aDT6ai0hkxaRqMRJpPpyeeus/J433YmsRt0OBwIh8M4OjqCUqmE3W4fGlzyEC4vL3F5eQk+n9/n3nEfgeDxePijP/ojWCwWMAzTRei++uoruN1uGAwGGtZzX+WTw+FQP+39/X2sra0NlS6MUvG2WCwol8s4Ozuj1fhOKBQKWK1WXF5eYn19ves5o9GIUCiEaDTa5Y6hUCgglUoRj8e7qsaDYuHFYjG4XG5f4ySpdpPqHwkieigKflgTZS8ZGORakslkIBaL+6qmgUBgYILhMIvAer2O6+trrK6uDjxWotd3uVxDK7S3t7fIZDLY3Ny8l3AHg0EEg0Gsr6/fe29NTU0hk8nQxdDFxQXEYjF2d3fHXox2Rrc/Z5x6s9lEOBxGKBSCUqmEy+V68F41Go04Pz+Hw+F4lmJFrVZDPB5HLBZDq9WCyWQauhP0XNBqtTg9Pe0LbHsq2u028vk8rWaT+0mj0cBmsz3rDqtKpRrYc8GCBQuWdD8J+Xx+7BCWhyCRSCCRSGC1Wqm2LpPJ4O7uDsViEUqlkpLwcaObB1Wn6vX6i1dV+Hw+repXq1XEYjFcXFwA+M7yy2QyPdoZIZvNotFojOT1S+wGbTYbotEoLi4uIBKJHnSKGIS7uzv4/f6xJ3digXd7e9v1eLlcxj/8h/8Q7969w9XVFY6Pj++1leuEw+GARCLB8fExlpaWhjZijUK85+bmcHp6iuvraywuLg58r8PDQ4RCoT73lfn5eZyensJgMHSdF7vdDo/H0/UddcbCd1ZkicSkkxiTOPjOLXcSkHPf+R9mF9ir+81kMn2SmUHSEqLL722SJBaBRFvcCdKAOogwNptNnJ6eYnp6emhz4yiEu91u4/r6GoVCAdvb2yNdM0tLS/j48SPi8Tjm5ubGthEk58jr9UKtVmN3d/dZKtv1eh3BYBDRaBQ6nQ6bm5sjE0KVSgWpVIpYLPZoTXGr1UIymUQsFkOhUIDBYMDCwsKryT0kEgl4PB7dkXsKyuUyJdm5XA4SiQQajQYzMzPPqrEfNM4MciJiwYIFS7qfVDnI5XIvuoVGtvSVSiWcTif1BM9kMri4uKCNdORnXL1yJpOBUql81aad59Z/D7N0uw+D7AZvb2/hcDhgMBhGei2ZTAahUDg0XGYYiGyIvAepaJFquUAggEQigUKhgM/nQ6vVGqgf7oXBYKDR8eVyeej/GYV4u1wuHB4eDoyBJ9X1g4ODvh4EhUIBrVYLv9/fJdXQaDTgcDhIpVJdC4JBsfBarZZWTTvPdbFY7DoOEpBz32JtUBpluVzuOuZ2u41sNtvVFNlqtWioUSeCwSDMZnPf9TnMIjASiaBer/fZKZL3PT8/pzKzQfB6vQ8S7mazifPzc3C5XGxtbY20CCRpkAKBAAzDjO2WUSgUaEjTysrKo3eLOlGpVBAIBJBIJGAymfDu3btH9V+YTCZEo9GxSTfRaadSKahUKlgsFqytrX0Rpym1Wv2oVN1Go0FJdiaTAYfDobauS0tLr6axJo3XD+1EsWDBgiXdY00SMpnsVZtFeDwelWyQyhsZYG9vbyEQCCgBV6vVDw54qVTqUe4Ez4Wn+n8zDIN4PI73798/elFjNBphNBqpNppois1m870TbqvVQrVaBZfLBZ/PH8tXtt1u09/ncDg0LRD4Tg+ZSqWwvb2NZrMJt9uNdDqN5eXlB0mIQqHA9vY2Tk9PUS6XB6ZWjkK8SSDPwcEBdUvpnVRnZmbgdruxvb3d9R4zMzP49OkTLBZLFyEmyYGdr6XVanF5eYlqtUp/V61WU29o8roymawvUGeUVMreNMp2u03vW4JisQiRSNT1e8lkEiqVquvebjabiEaj2N3d7Vv0Ea/o3vHB6/Via2tr4Hdwc3MDDoeDubm5oYQ7nU7fq+GuVqs4OTmBVqsd+jq9SCQSuLm5gdVqxfr6Oq6urnB7ezuwSj+IrN/e3iKbzWJmZubRSZKdKBaL8Pv9yGazsFqtT/bYNhqN8Hq9fYurQSiVStRPWygUwmQy9Wn4vwT0ej28Xu+DpJthGCoZIeFAKpUKWq2W7n59EQLB59OE2bdmf8iCBUu6nwG9DVqPfXzcyshzaZIfC5FIBLPZTLeGi8Ui9VO9uLiAXC6nJFyhUHR97larhXw+32d79qW+v8fov6PRKJRK5bOEDxFniXw+j0AggLu7O1itVkxNTQ0kPe12G3w+H1wu90lBDgzDUILXarVweXmJubk58Pl88Pl8bG1tIRAI4PPnz5ibm3uQ6IhEImxtbcHtduP4+HhgY98oxFskEmF1dRUnJycDXSgsFgtSqVSfJZ9QKITNZoPH48Hq6ip93GAwwOv1IpfL0a36zlh4Ug3m8/mQyWTI5XL0mIY5mDyUfFev17uIV7lchlgs7roPBum5iRVdJ8LhMPR6fdfCh2EYeL3ePveidrsNt9sNp9M5kPiFw2Hkcrm+BQuBz+dDKpXC5ubmUAKYy+Vwfn4Op9M5UlW31Wrh+voa+Xwea2tr9H6anZ3Fp0+fBp6Hzs9J9OIWiwXv379/cgWTeJaXy2XYbDYsLS09S1WUy+XCbDYjEokMXIjU63Wq0yaytI2NjVd3jXpo8ZzP54f2JHRKRmQyGTQaDebn51991/I+EEkYS7pZsPgFI929MbHk3+M+Pi4KhcKzbKs+90Anl8tht9upnWEmk8H19TWq1SrUajUl4cRa67XDbEapkoyq/47FYiOnOo4KpVI5kt3g7u4uVldXcXFxgaOjo0cThna7DaPRiF/7tV+Dz+eDUqnsm6jsdjs0Gg3cbjdSqdSD6XY8Hg+rq6u4vb3F/v4+1tfXB1a9HiLeCoUCCwsLOD09xfb2dh8BWFxcxOfPn6HT6bruBZJGmc1mu17TbrcjEAh06WNNJhMuLi66JBhE103+L1mAdFbEH1PpHtZE2SnFqdfryOfzXQsGhmEQCoWwubnZ9X+HWQQGAgHweLyB1ybpz9je3h54zfh8PiSTyXsJN/Ggd7lcIzl15HI5uN1uaDQa7O7udu3gCAQCzM7O4vr6Gu/eves7pmQyidvbW8hksielUna+nt/vp7Ipk8n07ETRbDbj8PCQSn4YhqE67Xw+D71ej7m5uWdNxnyJIgRZoHZKRng8HpUkuVyuV81CGHcuSiaTLJtiweIXjXR/qbjYfD5/b2rclwaXy6UEmxAQMnCTSU8kEiGRSECj0bzJwfs+/bdKpUKlUnmxSopUKsXS0hKmp6cRDAbx6dMnGnYklUqp9/q40pJBBJmkGxYKhaFSGblcjp2dHXi9Xnz69AlLS0sPEq7Z2VlIpVIcHh7C5XINJBkPEW+DwUAdTTY3N7sIm1AoxMLCAk3bJISNy+Vibm4ONzc3ePfuHSVVJpMJPp+vi/wOioXXaDTweDxdFXRSOesk3Q9Fwfc2UvaSboZh+jyRE4kEdDpd1+eMxWLUhYWgVqshHA7j3bt3Xe9ZLBYRDAb7Hge+q7RfXFxgdXV1IHkdhXD7fD7EYjFsbW09WJ0l4UDRaBSLi4tD7xWigw6FQlTS0BndvrCw8CQbvna7jVgshkAgQJuZXzLERiKRQCqV4u7uDvV6HclkEkqlEiaTaaht41sBKZY0Gg1cXV3R+0Gj0WB6evpZdvVeA1qtFh6P59ldWFiwYEn3GybjzyEjGYRarYZGo/HmqsT3QSAQUP0yAHz8+JEmN15eXtIYeGJN+NYGyl799+3tLZVjjKL/fixEIhHm5ubgdDoRCoX67AYNBsOTri3i3/3nf/7n+O3f/u179aSEzOp0Orjdbuj1+r5kxV6YzWaIxWJcXFxgenp6YNPeQ8Tb6XSiXC7D7Xb3SSn0ej1SqRRubm66dMF6vR6hUAiRSITKH7hcLmw2GwKBAJaXl7tIHyG2wHe7DeVyuctOkEhMCFkbVV7SW+nulI3kcrm+VL1ev24A1Je7E4MsAhmGgdvtxvz8fN/YQJxKZmdnBzph3N3d3Uu4yWvXajXs7Ow8qDsm35dQKBzJCnBxcREHBwfQ6XSIRCKIx+NUuvLY+6rVaiESiSAYDEIqlWJhYeHFq8vlchmxWAylUgnFYhFOp/PZPMNfCkQWmMlkkM/nIZfLIZPJUC6X8c0330wkaRUKheByuahWq2Npy19SEsqCBUu6nxmdUpHnkpEMAqmYTeoKniSGzc/P0/NCGnK8Xm+Xh6tGo3lTIQccDgdarRbX19dYWVlBvV5/Mf/vrpuCz4fT6YTdbqd2g2KxGHa7nU7oj72+CPH+H//jf8BoND54/MSi7fr6Gp8/f4bL5brXPlKtVmNra4s2WA7Suj5EvJeWlnB0dASfz9e3wzM/P4/Pnz/3uZPMz8/j+PgYRqORkmeLxYKPHz92SUVMJhP29/cxNzcHDocDDocDtVrdZeUnEokQj8fB5/NRqVRQLBZRLBbx4cMHNBoN6iLzk5/8BDwej6ZWXl1dQSQSQSaTIZ/Pd7mi9OqYy+UyarVa12OJRAICgaCLKA+zCPR6vZBKpX3+xO12G2dnZzSoaRDhjsfj2NraGkiO6/U6zs7OIBaL+3YbBiEcDlOt/ajBXWKxGHK5HPv7+zCbzfjqq68evfvVaDQQCoUQDoehVqvv9Y9/rvGM6LRrtRpMJhPW19fptffWCHdnA3wmk6EN8FNTU11+7qlUCvV6faKKO50gC4dRSfdLS0JZsGBJ9wsR7pfGIG3oJIFUU8iigcPhQKVSQaVSYXp6Gs1mk1oThsNhtFqtLmvCLz2J5fN56uRCiNxz+38PQ6/d4O3tLXg8HhiGedL1JxQKUS6X8ad/+qf4p//0nz5YmeTz+XC5XIjH4zg+PobNZrvX7UAikWB7extnZ2c4PT2Fy+Xq0+/eR7y5XC7W1taovKeTWPJ4PCwvL+Ps7Azv3r2j14dMJoNer4fP56P2e3w+H2azGcFgkD42KBZeLpcjGAwilUrR7XbymlKpFFKpFNVqldrp8fl8/OQnP8H3vvc96iyzv78Pi8WCWq2GUqnUZa+nVCqRy+W6Gonj8XgfYQ4EAn3ndZBFYDabRSKR6HM3Ab6LgOfz+QNDqPx+P+Lx+NAKd6lUwunpKcxm80DrwV5yfnl5iUajge3t7ZHJTjabxc3NDfh8Png83kBbxFHJZCAQQCwWg8FgGOsYxgXDMEilUojFYsjlctDpdJiZmelaMKlUKqRSqbESg18CnVavmUwGjUYDarUaWq0Ws7OzQ0m1VqtFPB4fyTL0LUIul9P0ThYsWPwCke7XXvmWSqUv7lzyFGQymXvDHvh8PvR6Pd3KJ3HaREYgEom6rAlfWyMZj8f7NKHP7f89yjVH5DqHh4dP3vVgGIbqUP/yL/8Sm5ubI8VxG41GqFSqLmvBYQsNPp+PjY0NXF9f4/DwEGtra30T/n3EWyAQYG1tDUdHRxCLxV0NhEqlEmazGVdXV1hbW6OPT09PY29vD1arlWqQSaOl0+mkRNNkMiEYDKJQKCAej4NhGLRaLZjNZjgcDojFYvzsZz/D3NwcuFwums0mbm9vB35WHo8HLpcLoVBIr5N8Po9isYidnR0aGpJKpXB9fQ2v1wu9Xo9oNNqVtJnNZtFqtbqutUEWgUTmNKjBlXymra2tgYQ7Fothc3Nz4EI2nU5TucpD6X7JZBLX19ewWCxwOp0jXY/VahUejwfFYhFzc3NUEnR3d9f1HT6EcrkMv9+PdDoNs9mM9+/fv9jCPJfLIRaLIZFIQKFQwGQyDVxAksU4cVx5bZBQs0wmQ/sVNBrNg7tSnVAqlUilUhM7z0gkEmQymZF//yUloSxYsKT7GclP55/kZh12Az/Hjd27TT1pSKVSfdrc+yAWi6mjSOeEEggEcH5+TicUYk34kmi324jH4wMb1Qie6v89LpRKJdLp9LNU77RaLS4uLrpszx6qFIlEImxubiIYDGJ/fx+zs7NDEwY5HA4WFxcRDAZxcHCA1dXVvu/sPuItk8loVXt7e7uL9E5PT+Pg4ACRSIReKwKBAE6nEx6PhxJaoVAIg8FAG/cikQgikQjK5TLkcjklJh8+fIBarabVUolEQn+HNLAyDDNw0dfrXNLp2yyVSlEqlaDRaLC6uopSqQS/349Go4HLy0tMTU3R4J7OKuMwi8Dr62tqOdl7nwUCAezs7PSRwocIdzgcpuT3PpekVquFm5sb5HI5rK6ujuSodF90u8ViQSAQQDqdfjClldhr5vN5TE1NYX5+/kUasiuVCmKxGGKxGHg8HkwmE3Z3dx+UXWi1WqqDf2mJBilMkB9SmLDb7Y8uTCiVSvh8vomdZ5RKJfx+/8jNlKyMhAVLuicA992Uw557yo3caDTQbDZfVKP4kqjX62g0Gk86fkJqHQ4HWq0WtSa8vLxEvV7vsiZ8bnlHJpOBRCIZ6XUf6/89Lr7//e/jP/7H//gs1T1S8T48PMRv//Zv4+bmBqFQCPPz8w+6Vdhstj5rwWEyFZvNBolEgpOTEywsLPSFJN1HvEn4BrESJISSpFUeHh52kWWr1YpwONyl+bZYLDg8PEQkEoFWq6ULAalU2uViQr5vQvhLpRK9du9LpexNoywWi13XPNFzczgcyOVyCAQCTE9PQ6lUUsLbaDTgcrm6iHKvRWAymUQ+n++TlZRKJVxeXg7cTSASjEGEu91uw+PxIJvN9i1qBpFet9sNlUo10O5vEB6KbudyubDb7fB6vfT89IIESVWrVdjt9i7S/lxoNptUp12tVmE0GrG6ujrWuEX6P5LJ5LNbi7ZarS6STSR4Op0O8/PzzzIWSKVSMAzT1f8wSZDJZGAYZqJ16SxYsKT7C6NQKLypIIXHHH9vUM5TwOPxuqp89XqdJqT5fD7qK0ukKE+thHXqfse6qMfw/x4XcrkczWbz2bbU+Xw+JW1ff/01wuEwDg8PYTQaMT09fe85JH7KndaCwyqWOp0Om5ubtMGyVzN8H/GemppCuVzG+fk51tbW6PUklUrhdDrhdrtpGiNJXry5uYFcLqeVbZFIBIPBQN1CemPhNRoNEokEdT8htoFE2kGaJQd9b4Mq3Z3nIZPJ0N2qdruNRCJBo8fVajVOTk5Qq9Xw6dMnTE1NQafT9VkE1ut1XF9f99nQNRoNnJ6e0sCSXsIdiUSwtbXVd720Wi2cn58DwFAfb3K8d3d3iEQiWFhYGMl+j0S3t9vtB6PbSbU7lUrR126329Rju91uw+FwwGAwPOuOUbvdpjrtbDYLjUYDp9M5lPyPAp1Oh2g0+mTS3W636Q5fOp1GqVSCUqmEVquF1Wp9sR4fEpQziaSbjEeFQoEl3SxYsKT7cQPv2dkZeDweLi4uqFezTCabmEExn8/fq+d+KkicMiFGJEEtEonA7XbTBDWNRvOoBDWiW34KXlv/PS4YhoFYLMZPf/pTAMA333wDk8kEr9eLjx8/PmjlxuFwMDs7S60FSUz4oGqkTCajDZblchlLS0tdv3cf8Z6fn8fJyQk8Hg9tiiSEPJ1Ow+/3UyJPGtz29vZgNpuxs7NDXTmmp6dpVbIzFl6j0eD6+ppuT8tksi6NqFAoHGobeJ9Hd7VapTsKwHcyEJlMRolBrVZDoVDAV199hWq1Cr/fj7u7O2i12i7ycHV1BYvF0kVgGYbB2dkZTCbTwKbMYYS7Vqvh5OQEKpWKugoNQqVSwcXFBQQCQVfT6jDU63UaKT87OztSdDupdgeDQWi1WuqxLRQKMTMz86Ds5DFjEtFpy2QymEwmLC8vP0tCpUajwdXVFVqt1tivV6lUaCU7m83Sa3J6ehoqlepVelkUCgUKhcKDmv63glqthmKxiFKpRG0bz8/P8Wu/9msPjvUvKQllwYIl3RMI0kBFoqpLpRLC4TBKpRJarVYXCe8MT3lrpPu5t1ofqnTIZDLYbDYwDEOtCT0eDyqVSpc14UM7CMViEQzDPKtu/Ln03889AZN4+J/+9KdwuVxQqVRYWFiA1WqFx+Oheu/7QktUKhW1Fvz06RNcLtfAcycUCrG5uQm3242joyOsra11EdZhxJvD4WBlZQUHBwcIh8NdceRLS0v4/PkztFot2u02rq6uqLc2aaAUiUSQSqWIx+M0mbAzFl4gEEAsFtP01944+PtSKev1OpWlNBoNMAxDCXOvVWCva0kwGKQOHnK5HDabDdlsFsViEWdnZ5ibm0Mmk0G9Xu/bHbi6uoJQKOyzVQwGg4hEIgMlJfl8HmdnZ3A4HPfem5FIBF6vF9PT0w9Gv7fbbQSDQQQCAWoBOA7pNBqN8Pl8+Pbbb6FUKrG0tPSsi3Wy29TZmPociZe9EAgEtCHxIeLabDa7JCPtdhsajQYGg+FeqdZLguii3xparVYXsSZ/53K51Gdcq9VCIpGgWq2OXFx5CUkoCxYs6Z5glEqlgQEXzWaTDj7FYpEGNAgEgj4iLpVKv4jHN9kifclK90PEVK1WQ61WY2ZmBo1GA9lslmpESWWK/PROckQT/BLn7rX03+NObFKpFH/4h3+If/kv/yVdxGxsbFDnDalUirm5uaHWbMTOL5FI4PT0FFarFQ6Ho+8ccrlcrKyswOfzYX9/H2tra11b5sOIN5/Px/r6Og4ODiCRSCiZFQqFmJubw8nJCbhcLmZnZ2E0GuHxeOD1erG4uAjgu2j4m5sbWoHtjYUnum6lUgmRSASGYWgVm8hLBqHRaNAKdK/FZyaToRIlQrTI8TSbTUSj0a5k0JubG8zNzVEi+vnzZ7Tbbezs7HSdR7/fj3K53OdUEgwGEQ6Hsbm52bfNnkgkcH19jaWlpaGyKdLgWa/XR0qiTKVS8Hg8dBdjHNu+er1OQ40kEglEIhFWV1ef5XpuNptIJpOIRqMol8swGAxDF4LPCa1Wi3w+P9A/PZ/PI51OI5PJoFwu034Um832JmSESqWSFhu+RJJmu91GpVLpI9iNRoMm88rlchgMBshksr4xu1Ao4Pr6miUOLFiwpPvxpHvQYMzn8ymh7ETngJVMJnF3d4dqtdoVJU4Grpf2vy6XyxCJRF+kYjOsCmUwGGgTH9nOJUSEbOeSlMx0Ov2gV/Gz3ACP0H+/1ITI5/NRq9Xwp3/6p/jBD35AH9fpdNBqtdSFhPg4D6tmGgwGqFQqXF5e4vDwEMvLywPJ2PT0NKRSKY6OjrC8vNwlJRhGvMViMVZWVnB2dkZJYblcRiQSoQstQnicTif29vZoY6NGowGPx6MLqt5YeI1Gg7u7O/q9E1038YuvVCpDySO5zntJdzabpQFByWQSGo2G7kiFQiHo9Xp6L/ZaBE5PTyOVSqFWq9GKPJfLRTKZRDgcxs7OTte1cB/hJg4im5ubQzXBqVQKV1dXMJvNWF1dvXfBWS6XcXNzg1qtNnZ0e7VaRSAQoLsOOzs7EAqF+PDhw5Ma+drtNt1BIjsMNpvtxRbPg6DT6ahWnthFEskISeIlhZS3FnjG5/MhkUhQLBZHcqZ5ChqNRlfVmvyQcCmZTAaz2QyZTDbyQk4ikaBSqbBx8CxYsKR7fDAMA4ZhxiKtEokEEomkq9mJYZiuQS2TyaBYLNJKZu/Pc2gbge88bl964H4KyLmyWq1djUt3d3e02lMsFiEUCl/NPWZU/bdaraaTy3NfcyKRCG63G1artauRj8PhwG63d+m9Z2ZmhtoFCoVCrK+vIxQK4eDgYGhiodFohFgsHih5GEa8VSoV5ubmaNT51dUV7HY7LBYLPn/+TC3o+Hw+pqen4fF4sLm5CeC7arff76eV3s5YeJVKhWKxSDW5RGJCSHculxtKIAhx7nQ8KRaLVNpCSDX5fAzDUIJM/t1rEUi0zZ1ynJmZGVxdXWFjY6Nr4RwKhRAKhbC1tdVFuNvtNi4vL1Eul7G9vT1wsc0wDG5ubpDJZLCysnLv7lSz2YTP53tUdHuxWEQgEEAmk4HVasVXX33VNb7pdDrE4/F7g5eGvW40GkUikYBYLIbZbB7oY/7SaDQaKBQKqFar+PnPfw4ul0ulY8vLy29O/jcIpJnyucZuhmFQLpf7pCEMw1BpiFKphMViefL8w+fzIRAIUC6XJzpQjgULlnR/AVQqlWdJWONyuVRLPKzSkM/nEYlE+ioNpCr+mOMoFAoTY3XI4XCgVCqhVCrhdDqRTqdpFe/8/BzNZrNLivIa3fH36b+dTicuLy9fRHtIdOz/63/9L8zNzfXtpgiFQiwtLaFYLHZZDA4jalNTU33Wgr3ET6lUYnt7mzqbdDb3DSPeJpMJ8XgcFxcXWF9fp48vLy/j/Pwcu7u7EAgEsFgsCIfDSCQSdKfD6/Uil8tBpVJ1xcKT9MhsNgudTkfj3AHcKy/prXSTSnWnnpskVRKyH41GoVQq6U5Wr0VgsVhEMBjEu3fvaFDQ7e0tjo+PMT8/33VvhUIhBIPBPsLdaDRwdnYGoVCIra2tgTskhUIBFxcXUCqV2N3dvdfFJBKJ4O7uDnq9Hu/fvx+5IJDL5eD3+1EqlTA1NYXFxcWB72O323F0dISpqakHyVetVkM8Hkc0GkW73YbRaMTW1taLpVIOu1eIhWkmk0G1WoVarYZUKoVOpxt78fBWSPewxeVDqFarfdKQarUKiURC5xKNRtPVSPzcIDtfLOlmwYIl3WPhpQcOgUBASWTnxNopUYnH47i9ve3S1HWS8fsm3UqlMjFd8L3IZDLUMo9M8MS+6/b2tuvcqdXqZ9sdGLYg6NV/n56evnizj1gsxh/8wR/gd3/3dwdKB+RyOba2tpBIJChpm5ubGziZSqVSbG9vU43yIOs5sViM7e1tnJ+f4+TkBCsrK7QyOIh4393doVarQa1WIxqNdlXBTSYTrq6uqD54bm4Ol5eX0Ol01C0jEAhApVL1xcITXTch3ZFIhC42hrmXNJvNgfKSTCZDK9sk2ZSEcASDQeqMU6vVuiwCGYbBxcUF5ufn6flst9s0gjwQCECpVEIulyMcDg8k3OVyGaenp102ib0k2u/3IxwOY35+vs87vRMkul0gEGBjY2PkcSmVStEgILvd3mX3OAgSiQRSqRSZTGagNWGr1UIymUQsFkOxWIRer8fi4uKr9o2Q3cJMJoNcLkcdkhYWFqg9aiwWm9h0R6lUimg0eu/vNJvNrt1TQrBJ079MJoNer4fT6Xz1niKpVDpUBsaCBQuWdN87uL92cw2Hw4FUKoVUKu2ahDu7x0ulElKpFIrFIrhcbh8Rl0ql4HK5E11tSKfTtNkN+C6F0Ww2UylFsVhEJpNBMBjExcUFreCQlMyXmmSI/ntqaupFJ/V2uw2RSIRKpYL/+l//K/75P//nQ3/XYDBQIvj582faPNlbVeVwOJiZmaHWgqlUCvPz810LFh6Ph7W1NXg8HhwcHGB9fZ3qezuJt06nQ7lcxubmJng8Hg4PD+H3+2llcWZmBvv7+4hGozCbzVCr1VAoFAgGg3A4HDCZTPD5fJQgE4kJId1EUy+TyVAulynpHlTpbjQa4PP54HA4qFar4PP54PP51D2HEP9YLIaFhQUA32m7hUIhrWrf3t7CarVS0uz1eiGTyboWrW63G1KpFMvLy0gmk7i4uIDRaEQ0Gu3TcGezWVxcXAy17atWq7i4uACPx7vXCrBareL29haFQoFGt49y7cTjcQQCAbrAuY/Q98JisVCtO3m9bDaLaDSKdDoNlUoFi8VCF1AvDZIFQH5IFoDFYoHL5RooGSGLwkkl3eVymS7qK5VKn/a60Wh0jftGo/HNuGfx+Xw0m02WQLBgwZLu8dAZzPGlwePxqPyiE2TLvFQqIZvNIhgMolKpQCgUotVqIRKJUDI+Kd7izWYT1Wr1Xk2jXC6HXC6H3W4HwzDIZrPIZDK4urqi1VdCwl9iu1sgEDzKC3gctFotSCQSJBIJ/OQnP8H3vve9ob/L5XLhdDphNptxe3uLjx8/UgeRXiiVSrx79w43Nzf4/PkzlpeXu841h8PB/Pw8wuEwDg4OujTGarWa6n5XV1dpdXltbY1q30k1eXl5GUdHR1Cr1RCLxZidncX+/j7MZjOEQiFsNhv8fj9cLhcMBgNub29p+muj0aBx3gKBgEq9SJ9FJ9kb1kSZz+epRpXYfJLPEQgEaLNmPp9HLpfD0tISJcyJRKIrddLn86FWq1H9t16vRzabxd3dHTY3N7vurUgkAp/PN1SbHY1GcXt7C6fTOdQysNVqIRAIIBwOw2azYXl5+UGCyzAMIpEIgsEgJBLJgxaTw6DT6eDxeJBKpZDL5RCLxSASiWAymTA/P//ijdmd93Mmk0GtVqP38vT09EjjmEgkQqvVQrlcnphws3q9TsfydruNT58+oVqtQiQSUe31uI2NXwIymQzhcJglECxYsKR7fPL3Vpw/7ptcRCJRl+tEu91GNBpFMBgEwzCIRqMoFotoNpt9TZtyufzNNRflcrmxqtVcLrcvJZNYE97d3dFmKvLzXJ+32Wy+KOkm5EutVmNvbw98Ph+Li4uU1A67HlwuF/L5fJfeu7efgMfjYWlpCalUCmdnZzCbzTS0hsBqtUIikVCvapPJhLu7O5TLZayursLtdlOpiVAoxNraGo6PjyESiaBQKCCTyeBwOGhapVgshsViwe3tLZaXl2G1WrvcMkgipcVioRITs9lMHUwkEgn1/u7VTZNKcSfJ6tRzx2IxugDJZrNotVpU231zc4OZmRlwuVw0m01cXl5iaWmJXieJRAKxWKzLqSQSiSCVSmFhYQE3NzfY2NiAQCDA7e0tksnkQG1zo9HA1dUVqtXqvQ4mRFKmVqtpauZD1yFp4lSpVFhZWXm0LV+9Xkc8HqfymqmpKWxubr44cSU7V+l0mvaiaLVaLC0tPfqzqFQq5PP5N0e6exvrSRWbEFYSvkYclb6EdeBTQBxMWLBgMeGke1BK1SDyMey5cTW4z9VI+SXOU6vVgkaj6dKS9uoAE4kEisVilw6QVFS+lLc4ABqO8lgIhUIYjUZKssrlMtLpNKLRKC4vL6ltGLEmfMznXFhYoAmSrzFJi8ViHB8fQyaTwev1UheTYROyUqnEzs4OotEoTk9PodVqMTMz0ydj0Ol0ePfuHa6urnBwcIDl5eUukqLRaLC1tYXT01PE43Fa7RUIBH0ab7lcjsXFRZydnWF7exsikQg2m43qih0OBxwOB/b29qg7g8ViQTAYxPz8fFcsfCfpJg4mBoOBSkx6STdZHBeLRbr4ymQymJ2dpUR2Y2MDwHdVbrvdTsl4p0Xgzc0NtFotJevEd5h8ZkK4/X5/V4X77OwMfD4frVYLOzs7fQu7dDqNq6srGI1GrKysDLzmxoluB77b5QoGg4hGo9Dr9SN5eg+7vohOO5/PUy1wOBweqEV/DpAeDfJDejRsNtuz9WgolUrkcrmh7j6vgWq12pfYWKvVuvpzHA4HZDJZ1715e3uLVqs1cYQb+G4XkJWXsGAx4aSbND/1/nvQY08h2p0TOcMwL+6l/VIol8t9FSI+nw+VStW35d3Z8d7pLU463jsJ+Wu4huTz+QcT+MYB0cjbbDbaDJfJZHB7e4tyudyVkjmqBl6j0bzqhCgQCFCr1eDz+fB3/+7fRSAQgM/nw9TUFKxW69DqvdlshsFggN/vx6dPn2Cz2WCz2bqOnVSpI5EIDg8P+2QPUqkUs7OzuLi46CJEg5or9Xo9KpUKTk9Psb29DS6Xi+XlZZpWKZfLMTMzA4/Hg+3tbUxNTWFvbw9Op7MrFl6j0eD29pZW/+LxOD3WXl13vV7vqnTbbDY0m0363WazWQgEAkilUkqA1tbW+iwCE4kE8vk8lZXUajWcnZ1haWmJXhfEPYRU7oHvwli8Xi/4fD7ev3/fRagZhoHH40E6ncby8nKfEw05fhLdfp8FZOe9HQgEkEwmYTabsbu7+6j7MpvNIhaLIZlMQqlUwmQyYXV1lV4boVCI+qs/Fa1Wq0sy0mg06D03Ozv7IuOKQqFALBZ7lfuTFDR6tdck5ZQ0Nk5PT0MikTy40JdKpchmsxM595DFaed9yYIFiwkj3eOS50EEfFzSLRAIJtbgv1KpjNw8JRaLIRaLuxLyOr1dS6USwuEw9c7uJeLP6S1OqpUvZXXI4XC6UjI7o6BDoRAYhoFGo4FWq6WyiaE3zt82771GZDHx776+vobZbMY333yDUqmEQCCAjx8/wmw2w2azDTxeHo9HPbo9Hg/29vYGNuVZLBao1Wq43W6k02ksLS1BKBSiXC7j6uoK6+vriEajODw8xNraGoRC4UDibbfbUS6XcXFxgdXVVYhEIszPz+Pi4gLv3r2DyWRCKBRCLBaj3uehUAjT09N9sfDFYrErDp7ISwbdq+12mzYPk4Y/4mRBKtmBQABTU1PgcDi4u7ujFoH1eh03NzdYW1sDl8tFq9XC6ekpDXYBvtNi92q4i8Ui/b1kMolQKASbzUafI02+796961sYjRvdXigUEAgEkM1mMTU1ha+//npsqVS5XKZx7AKBACaTaeAOCPCdf3symXz0vZjP5+m9RcJeNBoNXC7Xq1iZKhQKlMvlZ+29INdYrzSESPdIr4nJZHpSY6NYLJ5oiQZpBmVJNwsWE0q6H0OyB8lRxiGtkygt6ZygnzKxcblcOoH0EpzOCYdEPAsEgj4iPkpFZxDh5vP5r9b0yefzu1Iyq9Uq0uk0TckUiURd1oSdFeLX3vplGAZKpRI//elPsbS0BI1Gg+XlZdRqNQQCAezt7cFgMMButw+8dsViMVZXV6n9HNF7d1b3JRIJtra24Pf78fnzZ8zNzSESicBut9PFit/vp9Hxcrl8IPFeXFzE8fExbm9vaUNnKpXC7e0t5ufnMT8/j/Pzc+j1etjtdhwcHFDJDImFJxITm82GWq2GVqs1tNKtUChQqVQgEonA5XKpnptIJ2ZmZlCtVmkEfK9F4OXlJSwWC90dcrvdkMvllEBHo1H4fD5sbm7Sc5tMJnF1dUV19kajEQcHB1Cr1Uin01Q2M6iZlUS3EyvH+8aaTCaDQCCAcrkMu90+UlNl7z0bj8cRi8VQr9dhNBqxvr7+4K6OwWDA+fk5te18COT8kh9y7zgcjr575zXA5XIhlUpRKpUeJVer1+t90pBKpQKxWEzHOqvVSjXYz71gIAFqE0kq+Pyh9p4sWLCk+xeAYA+qSIz7f3orQpNqt0f0dC/RBCoQCCj56l2kdGrFvV5vn3aRkPH7qh9fOtBHLBbDarX2pWT6/X6cn5/TqHLSkPkaVe5e4q1QKPD7v//7+Bf/4l9AqVTSSjLR4RLiZ7fbBzahkQa9SCSC4+Njuu1NrhcOh0PlHicnJ+ByuV1Jlg6HA1KpFMfHx5RwDiLeq6ur1NHEbDZjYWEBnz59oraAarUagUAA09PTUKvViEQilOQWCgVoNBqEQiHY7fauyllvBZBUunv9uS0WC1KpFBQKBYRCIW5ubmCxWMDj8XB1dUUtAsPhMBqNBnUz8Xq9aDabVHbSSbgLhQJyuRwajQZCoRDW19fpORaLxXA4HDg8PIRCoRjYBDlOdHsikUAgEADDMLDb7TAajSMvYhmGQSqVQiwWo97iMzMzY7mZyGQyalU6aCxsNptdkhHSR6LT6TA/P/8mqpwymezBHhHictIrDQFAxyy1Wg2bzUbtWF8aPB4PPB5vYiUa43h1DyuOPbUniwULlnS/EOF+iS3+13CmeCkMmyRfEiTSvVOy0NulTxLxyGTYScRlMhn1Fn8r0fW9KZmdulS32w2RSIRqtfpFjovP5+NHP/oR/tk/+2ddCyKn0wm73Y5IJIKzszNIpVLY7fY+ssXhcGC1WmE0GuHz+aiuujNSvN1ug8vlQq1WU2tB0g+g1+shEolwdnaGSqVCK+G9xHttbQ1HR0eQSCRQqVRYWlrC5eUldnd3MTMzg8+fP8NsNsPhcOD09BRTU1PUs3tmZgYXFxc0rppEuvem9RHLwEwmA5lMhlqtRq0HfT4fTCYTGo0GYrEY3r9/32URWKlU4PP5sLW1RaUoiUQC29vb9N+dFe4f/vCHqFar+NVf/VXaLEoQi8Vwd3dHP2vnc6NGt7fbbcRiMfj9fvp9dsq+HgKx+EskElAoFDCZTHC5XI8ey7RaLdLpNGQyGdrtdpdkpFQq0X4IUvF9a1CpVF3XCykOdBJsUhwgY5FOp3sweOy1iGupVJpI0j2qV/ewXi2WaLNgSfcbJdzP8buDUK/X3wz5GxfEgu1Lg8vl0ij13nPb6S0eCoVQLpept65arUYikYBcLn9TEh8ej0eTKYHvvJu/BOlmGAYSiQR3d3fY29vD+/fv+847abCMx+PweDzgcDhwOBx9On8+n4/5+XlYrVZ4PB6Ew2Hq73x1dUWlIel0Gufn51QDzOFwoFAouqLjFxcXBxJvEgu/tbUFjUYDg8GAq6srrKysYGpqCre3t1hZWYFUKqX6axILL5fLaepgqVSCXq8fqOkWCoUolUowGo1UWtJoNJDL5eByuRAMBqn7yenpKf0Mbrebpvblcjl4PB5sbW1BIBAgFovB6/VSwt1sNqFUKpHJZMDhcCipbjabuLq6omFBAoEAnz9/htFohEQioZXy+6Lbiad+MBiETCbD0tLSyCmPlUqF6rR5PB5MJhPev3//LGRNLBYjHo8jn88jm81Sa8eZmRkolco3667RKYPLZDLY39/vksHJ5XIaKPMYGdxrFTK+xPjyHBCJRDTU6qXnehYsWNL9QoS788+HVsHtdvtJmu5arTaxTSDEeeStQigUQigUdlVf2+02KpUKDg4OIBKJqFdxo9GgEpXOqvhb8E//9V//dfzwhz98FUeXQSRNp9Phxz/+8dAYbmKFZzKZkEqlEAgEhtoNSqVSrK+vI5VK4ebmBsB3lXOiR9Zqtdjd3cXV1RX29/exvLwMmUwGkUiE7e1tXFxc4Pj4GKurq33Em4SaEEcTklYZi8Vgt9uxt7eHXC4Hh8NBG0VJLDzRdWs0GqRSKVit1oGa7k55yd3dHfX81mq14HA4CIVC2N7e7rIIvLu7A4/Hw9TUFKrVKs7Pz+FyuSj593q92NjYoL7Dp6enePfuHYLBIP76r/8aKysrqFQquLy8hMFg6NJaT01Nwe12g2GYe6PbiUwlHA5Do9FQnfxDaDabVKddrVZhNBqxurr6ZGlWZ2NxJpMBwzBoNpuw2WxYXFx8c7kFpLGxV3tNGr6lUikajQZWVlYgl8snavdSLBajVqtN5BwkFApHWjDcN08/Zf5mwYIl3c8wuI773FNu1Gq1OjFJZoMWDI8NlPiSiyrSBEe8lQm57JxME4kESqUSuFzuQG/x16y86XQ6tFqtL3bOWq0W5HI5fvjDH+J3f/d37/3OSYU+l8tRu0GbzQaLxdLlsEC21vf29tBoNODxeOB0OsHn8yEQCLC6uopoNIqjoyM4HA5qP7i6uorb21vaYNlLvC0WC8rlMs7Pz7G+vo7l5WUcHx9DrVZjdnYWNzc3ePfuHXg8HpLJJJWY2Gw2XF9fw2azoVQqQSAQdJFuhmGoDKZWq0EikSCbzVJpitPpRDQapXIPYhFYLBYRCoXw7t076lTicDig0WgQj8cp4SYVcNJQaLFYIBKJwDAM/vqv/xp6vZ42tXaOHYVCAaVSCVarFXNzcwPHl2AwSEN7dnZ2HtydarfbVKedzWah1Wppw+ljK7WdFpqZTAaVSoVKRoiGeX9/nyaDfulxrVcaQhobyRhgtVr7rE3T6TREItHEyQXFYjEymcxEzkESiWSkBcMoVsCDfo8FC5Z0/4KhM1p6Ekl3rx3cJKBQKPQRDx6PR3XVgybgUqmEdDqNQCDQ5yxAJuKXlNp86W1pHo8HhmHwox/9iKZGmkwm+pkJKSWLA7FYjIWFBZTLZYRCIfh8PhiNRkxNTdHr3e/3Q6fTweFwwOfz4dtvv4XD4aC2e6Qie3V1hVgshsXFRQiFQvoa+/v7VGqysLCA09NTLC8vw+l0wu124/r6GouLi7Db7XC73djc3EQoFKIuKYFAAOvr67i9vcXCwgKq1WqXzrzVatEJmDRRkiTKcrlMyVW1WqVpni6XC36/HyqVCnK5HJ8/f8b8/DxEIhFOTk6gUqkwNTVF5TgkhTEWi8Hj8cDlclFi/e7dO5ycnODy8hK//uu/Tt+PYRj4/X6Ew2GYzWbMzc0hHA6jVqvh8+fPqFQqtDm3Xq+Dz+dDrVajUCjA7/djenp64O5aPp+nOm2ZTAaTyYTl5eVHk8hyuUzTH3O5HKRSKbRaLebm5qBUKvuuaYVCgXw+P9Bj/KUWk72WfJ0LbZJWSRpsH1poSyQSlMvlNyG5GweDnHomhlT8raa7t5LNggULlnQPJNytVgsfP36kUgiBQED/3vvvt+bnPanSmEqlMnKFXiQSQSQS0fRBQsh6vcU7PXR7JSrPEQf/pasvRL7g9/thNpuRyWRwc3NDtbepVIr6O7daLTQajb5rlRBzANSjupPQcTgcfPjwgVaUe7d9/+Zv/qbrcR6Ph4ODA3C5XPD5fPB4PFxfX0Mmk8FsNqNer6NarcJgMKBYLOLs7IzqvDc2NlCtVpHNZqFWq5FMJqFWq5HJZLqaKQkZ6ZSWSKVSKkWJxWIwGAxIJpP0WiEWgbe3t1TT6/F40G63MT8/30e4vV4vEokEtra2IBKJkE6nEYlEqKRDLBbjP/yH/4B2u43Z2VlIJBJIpVJYrVb89Kc/peT6Zz/7GVqtVpdEjpARn89HK3sSiQSbm5tYWloCh8OhntpEDjNKJPwgNBqNLskIh8OBRqOB2WyGy+V68D5QKBRIJpMvcv123q+EZPdKygwGw5MkZcR+r3OsmBTS/dbkJe12G41GA/V6HfV6vevvvf9uNpt96bHjFDPYyjYLlnT/koAM+pubmwMHmFKp1Pc4n88fSMYH/f2lCXqtVvsiOuPnIN1PWSxwOBxKqDtB0uLIpB6LxWha3CCJyjjfz1vYsmYYBlqtFvv7+5BIJGAYhp6PUqlE9a08Hu/R5/e+/9frNtBut+l5IeS42WwikUjA5/MBAA2zIdepUChEu92mJDQcDoPL5UIgEECr1dLG2mAwCC6Xi2g0CpFIhGKxSJsoZTIZjY73er1wuVy4urrC9PQ0bm9vYbVaUalUkEwmsbu7i0gkgnQ6je3tbSSTSXg8HmxsbEAsFuP8/Bz1eh3b29vwer04Pz9HNBpFu91Gs9mk54PD4YDH48Hr9VL9c7vdpve8SCR6kEAQAt5ut/Hzn/8ch4eHkMvlWFxcxPz8PN1hGOd66JSMkIo/8cwet99DqVTC6/U+eUztrVwTC0hyDxqNRrp4eYmq66RBJBK9SqV7XCJN5rLeQpRcLu+a746Pj9FsNu+di4Zpup/ak8WCBUu6J4x0dw4oo1hhDRu0KpVK3+OE/IxSQX+MRpkMjJNIugcFiTzHpKtSqfqaDavVKiUAyWQSd3d3tAm1tyo+bOLg8XhvoirTaDQgl8tRq9XA5XLp8RCHic5q9mMn5lEXPp3vT67DTpJKiGEnKS8UCgBAo69DoRC9DwjhI0Sez+fj6OgIPB4PbrcbYrEYDMPAbDYjnU6j0WigUqlQAkxsBufm5rC/v4+lpSUUi0VqFUh2BzY2NiAQCHB4eAipVIqNjQ0EAgH82Z/9GSUBXC63awHC4XDAMAxdNJA+kM7z/dC566yAq9Vq1Go1JBIJqoH/jd/4DVit1ntfo1gsUpKdz+chl8uh0WiwsLAAhULxpIW+VCpFu90eyRWpM8m2k2CThZ9cLodSqYTFYnn2JNthkEgkiMfjkzcxP2Gx0G63++aiYWS6k0h3zkEikQgKhaLvuXEW6vV6/cH58yV6sliwYEn3BOExgQQCgYDaUY1CigcNfiR0o/NxUu27j5iTv3O53InWor92CqhYLIZYLO7yQe4lDcSPmJCGXjJOrOS+NDrJX+/E9drNnoN8dodNoOR4exc1nQ1VDMOAYRjUajX6bwBU261QKNBut6kEglTDj4+PIRKJsLe3B6FQiOPjY0ilUupaolQq8e2330IoFNIo+KOjIxiNRuzt7eHbb79FKpWiFWvyOQZ9FvLYU891q9Wi71etVlEsFvGHf/iH+Ht/7+9hZWWF3tv1ep3qsrPZLHg8HvXLXl1dfXYyq1KpkM/nu0h356KVEOzeRatGo7l30foaIO4zkwgipSKLulGq0Y1G48WI9GOOnQULFizpfrBq+JKaaD6fDz6fP5I7CiHovYMs0Yt2PkdCUxiGwdnZ2b3V9LfYyf/apHsQuFwu5HI55HJ517Z+p+9vPp9HJBKhQT6ZTObNVGUmrTo0SjWYXNdEezwsqa6X8PJ4PFrtJvZlxA2i0WiAx+Oh1WrRqjR5D4Zh6A6GRCKhzaqveU5I5D2Hw0Gz2cRf/uVf4vDwEFtbW/R+J5KRmZmZF20SbLVa4PP5iEQiyOVy9D7g8Xh08anX66nf+VtrnHvLpLuTSA8a5xmGwcHBAZrNJr0mesdzsVgMpVLZ9dxbKLwIBIKJlPWwYMGS7i9Aup+jye45Cfqok2M8Hkc0GoXRaKQDOGlO6hzMORzOSPpzoVD4KgSdEKa3auslEAigVqv7HBy+/fbbibX1mkRyfh9BJ1IsHo/XpQnt/H3yO3w+n2qvyfOkut5J7jsr61/iMxN9vFKpRCqVwv/5P/8Hv/7rv47d3d0Xeb9BiY2kCNFut6HX62EwGCCXy9/MGPkQyAKq2Wy+yjEzDPNgJZr8nRDp3nFXIpFAqVSiVqvBZDLBYDBM3A4mn8/vC7JiwYIFS7oHYhJtjsjkIpVK+5IHB5HcQZNBqVTqe5yQk1EaRR87qb2FKvdjEAqFWO3hGyXo42ipB933b233gqRy/vjHP0Ymk8Gv/MqvPPo1O1NhCcEmqbBEGmI2m6mEqlwu4+TkBFNTUxN5TZBq92PzCxiGeVDWQf5NHIV6x0aJRAKVStX13EPjZSaToRLDSQNxQmLBggVLuh+ckCYtXIZg1Co9j8eDRCIZieiSCad3oimXy8jlciNNOIP+3XmcLy3peS6Qbd4/+7M/Qz6fR7VaZUk3i1cBwzCQy+Uol8v4/PkzIpEIfvCDH9x73zAM02XJR0g2IfEymQxqtRpTU1OQyWRDG7elUinV1E9iQUIoFPZVXYeNa4PINGnI7R3LHkOkx5qcJ7haLBQKkcvl2BuXBQuWdD9Muic1Ar7XY/m5Khak6XBUgt47gVUqlb5G0U6NItnG93q9A0n7W6j0NJtN/Mmf/AkikQi1invNBEwWLFqtFsRiMVqtFkKhEP7Tf/pP+K3f+i1otVraeNlJsEmyLiHYGo2GWruNC7FYjFKp9OSo+ZdemAwi0tVqFV6vF36/v28Hr5dMS6XSPnL9paQ0pO9gEiEQCFh5CQsWLOn+MsT1tUA8xr8UxiHonU1E4XCYNreRGO1RuvGHSV1eAn/0R3+EUChESQcb4MDiS4CEFPF4PJRKJfzn//yfsby83OWs8xKNjWKx+Iu4UQyTwg0i151SuM5xQSwWg8vlwmazvWqvylMhFArpzsSkYZIXDCxYsKSbxUggzguTAA6HQ9MCORwOdDodLBbLUKIxaNKt1WooFAoDAxxGaRQdNU3U7/fj7u4Oer2eduSzhJvFlybfYrEYhUIBbrcbP/jBD+BwOF7s/cRi8bMlJBIiPQqZHkakiTRmlKbvaDSKXC7X59U/CcT1SzXysmDBgiXdrwISjjOJmNQ0yockPRwOh06so5ARMnkPaxQl/+5ME72PnF9fX0OlUrEWWCze3CJbpVKhUqngj/7oj/Abv/EbcLlcL/JeD8WSdxLph8g0uZ977zcigel87jmKCJMqdRCJRG8uCv4X/ZyzYMGS7lfGJMtLJrXR6TnP+TgEnSyyBpEDYpdWr9eRSqUmaheBxS8PSNQ2j8fDn//5n6NUKj2bpWCz2ezaVapUKvD5fAPvl877rpNMDwpjee37aFKj4CcZrLyEBQuWdP/C4y15jI+DL9m8OkqaqNlsxg9/+EOo1WpWVsLizYEsCCUSCf7mb/4GAoEAm5ubQ4n0KKmGvUQa+G4njcPh9BFpkoj7VkEiyScNbKojCxYs6WbxhkHS4yaRNLzlSXtqagq/8Ru/gf/7f/8vS7pZvEmQ61IikeDHP/4xrq6usLGx0Uemie9zb1VaoVD0Vak778lsNgufzwen0zlx52ZSm55ZTTcLFizp/qWYvCZRosGe85fF+vo6/uZv/oa1CWTx5iEWixGJRFAul/Gbv/mbXWT6sdfvpFaLge9clVjyyp5zFizexL3BnoJuTLJP96SiVqu96XPearXw7/7dv2M13SwmZhErEokQjUbxs5/9DAqFgtrmPYVETeouz6QuGCbZlnSSF2ksWPzSk24Oh0N/Bj1233OPmbAmtdI9qe4l5Dt7q/if//N/olqtsqMFi4kBwzDQ6XRwu904Ojr6pSaAk4pJdi9hwYLFhJJuMtiTH0LOOh8j/77v938ZwEpjXgYfPnyAUqmk57dzQTds8TfoeRYsXhP1eh16vR4/+tGPEA6Hn/RabOWSxUvP84PGSXb8ZMGS7i9AJFmw+JJQKBTUNpD8tFottNtttFqtrscZhumyWcvn86hUKqhUKmg0GtRGi51EWLwGkanVatDpdPiTP/kT1Go1VKvVR1VP2Uo3i5e8TgcVyn6ZC2gsfnHB/0W5YVmweCn8q3/1r3BxcYGDgwNKmrlcLjgcDvL5PJRKJW0aIkS80WhgcXER09PTWFhYoK/13/7bf0MsFqOJgmyzEYvXGCM5HA7+zb/5NygWi1AoFPjqq6+wuLgIg8HA9iqwYMGCxWuNx+0JYqyDCHbvYw/9+yH85Cc/Ya8KFk8CwzBot9tDyUwul4Pf70ez2YRUKmVDJFi8Cvh8Pvh8PvL5PKrVKng8HlQqFdRqNSQSCVQqFbsIZPGs+N73vjf2vE7+/dS5nAWLNzkO/yIR7tccKN4ifvKTn0zksU/qcT/l2G9ubvBXf/VXyOfzkMvlAycZFiyeEyRhUiKRQCqVotFooFQqoVQqoV6vQywW47d+67dgs9nY+5Q97mc59lHASkdYsKR7Agg3CxaTjPn5eajVavzFX/wFwuEwRCIRTQDs1DKyYPHcY2mnREoikYBhGHA4HFSrVfzxH/8xFAoF5HI5/vE//sf09wQCAXvyWLwYeivaLFiwpPsLThK9N+J9ZKR31cwSFxZvFXq9Hr/zO7+Djx8/4uzsDOVyGZVKBcD/i6dnyTeLlyQ6nUmWEokEjUYDtVoNxWIR//bf/lvweDwoFAp8//vfR7VaRavVYjXgLJ59jmfHOBYs6X6DK+BRn/tlvYE7tXCTBJJeNolpjwKBAI1G49GVQIFAgF/91V/F8vIyotEoDg8PkU6nweFwUCqVwOPx2LAmFi+O3gZhEgXfbreRTqfxX/7LfwHDMKjX69je3gafz4dKpYJEIpmIxQVbPZ2c76fTBpgtoLFgSTdLXN8sSJiCWCyeqOMmHsCTdtwAwOPx0Gq1nrz9rtPpoNPpMD09jUQigXq9jvPzc4TDYVSr1Yk8NywmlwR1QqVSURvM6+trhEIhcLlc6HQ6/PZv//ab/zyTGho2yWFnT73mWKLNgiXdvyQgBPCXZbBj8TSQKv04IJaC9Xp94J/k70ajETKZDO12G16vl5WasPgiaDabVP/dbrdRLpfBMAxKpRJ+//d/HzweD7u7u1hYWGB3ZZ6ZiE5qhb5er7PXAgsWLOl+GKy+7AtchHw+ms3mRB67SCSi9muDiHPv3+v1OjgcDgQCAYRCIdVuC4VCiMViKJXKvuc4HA7+/b//99SKkAWLL0EAybUnlUrB4XDAMAyq1Sra7Tb++3//75BKpdja2sLKygpUKtVEysVYPA8mVS7IggVLulmMDB6PN5Hk9S2S7oeIc2fqZDab7SLKnX9KpdK+xx4zGbFVbhZvkYCTa1mhUIBhGPzf//t/cXJygqWlJbhcroH39aDq7dTU1Isd76TKNFqtFktcWbBgSTeLtwqBQDCRpJvL5b54QEyvpOMheQdpYOwlzDKZDGq1mj4WCAQgl8tflDQA/2+LnwWLt0bAO8m0UqlEoVDA0dERPn361Pc77Xa7S47F4XBQKBTwr//1v37Re38SHVcajQYr0WDBgiXdv9ggjXEsXg9CoRCNRmPsyX5UEl2v1+n79JJokUgEhULRJfMgko5RIJfL6eu/JNjtWhaTAIZhoFQq0W63UavVMDMzQ+9tktIqEom6iHe9XsfBwQF4PB4EAgFNziQ/5LHOP8e5F1h98euDtZZkwYIl3SOBWMBN6oJhkuUlzWbzweZC8idxDOnVRQsEAqhUqr7HXmoCEIlEKBQKL3p+ms0m+Hz+q+wIsGDxHISrWCzi7//9v4/19fW+5wctaHt7Isif1WoVhUKh77l2uz1U0tV77zcaDfD5/Ik8j5O60H6KjSoLFizpZjExC4a3RLqJr+9DUo5KpQKGYXB3dzdw8pTJZH0T61uZRIVCIarV6rOdr3K5TKO5yU+z2aTvIRaLweVy+/TdrOabxVta/LdaLZjN5rHuU3K/P3Zs6Qz26X2Ow+EgnU4PJeZvcWxh5SUsWLCk+5dmwphU0v2SUgci6RjF7q7RaKDdbg8k0SKRCHK5nD6WzWZRLBaxvLw8ceecuJeMex4rlQol1eVyGcViEbVaDRKJBDKZDDKZDFarFTKZDGKxGFKpFD6fD9fX12i32+Dz+XS7vvM8s8SbxZcEh8NBsViEy+WCxWJ5sffhcrkQi8Uj+ddfXl5CLpdDo9H0jVmlUmnkXbRhZP2lqtGTWqEHWHkJCxYs6R4RxKd7UhcM43pGD5J0DCPTzWazb9Ihf1cqlX0Ee9RBt9FoIJ1OT+Q5F4lEaLVaQz11a7VaX+W6XC5DJBJRcm0wGDA9PQ2JRDJUS76zs4PNzU0cHBwgEAhQCVSz2USr1UKr1UK5XH6Ury+Hw0Gz2aSfgVgTktcifyeEftDfORwOJSvkNQYtNoYdX+97DSJZvQ15D4FhGLRaLWrRyOFw6M+w9+891kHv88u+sBl2/jgcDsrlMsRiMX7zN3/zzRxvvV6HRCKBVCodq7gwqLBQLpcHVtHvk7r0VtFHvUcnmbiy8hIWLFjS/QtPuoVCIfL5PKrV6shNhqR5qXeCIJKOXoL9EnjpCv1rEO9sNkuj2zvJNZfLpeRarVZjamoKMpnsUdUxHo+HnZ0dbG1t9RHAH/3oR6hUKo8iUAzDQCKRQCAQIJ/P0y3tTuLZSRTI/+l8rNVqQSKRoFgsQqfTQSKRUFkMj8eDRCIBwzCoVCoQiUTgcDioVquQSCSoVquUtJOwIT6fTxvgiPMMj8ej543D4dC/E2kNIX71eh18Ph+VSgVcLpcuTMYJGyGvM+geI/How8j6WyHG4xzLoOtx0MKJYRgqYWu32+ByuajVarRxUiaT4Qc/+MGbIov1en2ssYvD4dDveVRyPEw2l8/nu54j/RkPSVzImCiXyydyTGSbV1mwYEn3yHhLlaxBko5hJJo0GGUymb4BnEg6egf3t5B4JpFIHkUYvwRIRbmTXFerVZyenkKhUEAmk0Eul8NkMkEmkz379jCXy6UNlblcDplMBplMBtFo9FHpmABQrVaxtrYGp9MJDoeDSqXSR9rK5XLXIoIQ53a7jWKxiEqlAoPBgGq1io2NDfj9foRCIczPz8NoNCISicDn88HlcqHRaODm5gZra2vw+XwQi8VQq9Xw+XxwOBwIhUJQqVTgcDhIJBKwWCwolUqoVCrQ6/XgcDiIx+PQ6XTg8/l0waNSqRCPxyGTySCRSOD3+2EymZDJZFCpVJDJZNBqtcDn85HL5aBWq8EwDDKZDJRKJcRiMUqlEorFIuRyOVKpFJXvkM/aarUQj8fp99p7vgnZJOeOyNXuq+Q/tzyh83gfGss6dzd6IZVK+/4/l8vt2jEgiy0OhwOFQoF/9I/+Ecxm85u6ZyuVCiQSyYu9PllUjvoew8bv3obRWq2GaDQKv98/UsPoWxnPyX0xqWmaLFiwpPsVIRAIXpwANpvNkRw6iKSjszLS+adYLO56rFqt4u7urqsSOgkgROUtbaeSuOteaUi9XodUKqXVa41Gg0wmAx6Ph+np6Rc9nnw+j2w2i0wmg2KxCIVCAY1Gg6WlJXz48GHsSY5Um3/nd34H8XgcCoUCWq226zoNhUIIh8NQKpWYm5uDUqmkz8diMXi9XqhUKqytrUEkEqFSqeDw8BA8Hg/v3r2DSCSCx+NBOp3G1tYWisUibm5usLGxgXA4DACw2+3Y39/H6uoqLi4usLCwALfbjaWlJaTTaZTLZSgUCiSTSahUKgiFQhSLRWg0GrRaLWSzWdjtdtRqNdTrdUxPT+Py8hJLS0u4u7vD/Pw8rq6u8P3vfx+np6fQ6/VQKpU4Pz/HysoKeDwezs7OMDU1BbvdjnK5DLfbjenpaZjNZvB4PNRqNSQSCWQyGZjNZlrdJOSbkNde56NqtTpQd9xJvklK6XPGfjebTYjF4q7XGyQT6lxMdk0MfD5cLhe4XC5SqRS1AiRSpmaziVqthkajAa1WC6lUCo1GA5FI9KaqnGSH4y1po0fdNTw+PqY7Y6M2jA7KF/gSDaPNZvNFFzosWLCk+xeIdOfz+bFX9aM2F9br9T5JB/m7RCIZaHc3btVyEkGq3V9iO7VarfaR60qlArFYTMm12WymFdRBBIoQyOdEqVSiJDuXy0EsFkOj0cDpdPbFbJPwHKJ9HnW3xuVyYWpqCjweD+FwGFqtFrVaDcFgENFoFHq9Hpubm1162Hw+j5ubG3A4HKysrFAiHg6H4fP54HQ6MTU1hVarhZOTE7TbbWxvbyOTyVDCnc1mkcvlsL29jbOzM9hsNmQyGahUKhSLRRgMBqTTaZhMJgSDQeh0Oko+yDUiFApRq9UgEAgglUpxd3cHo9GIXC4HhUJBdaXVahV6vR4ejwdra2vY39+HRCLBysoKJd7b29s4PT1FuVzG4uIitre34fP5EAqFsLCwgKmpKczOziKVSsHn80EgEGBqaqrreigWi4hEIiiVSjAajTAYDAgGgxAIBLBarV3jRTabRTqdRqlUglwuh06ng1wuH5l0N5tNFAoF5PN5almpUCigVCqhVCrB5XIfXMDe914cDgcymQwAcHZ2Rj/PIFLbed/4/X6USiUAoPdO589rL6pfusr90uOSRCIZuWGUXBeD5qHXbhglxSIWLFiwpPtekIl8HBLd6xnbOXj1SjrGDXYYB6TKxJLuwSCTT6/ums/nU1Kg1Wpht9shlUpH/p6USiXcbveTK5UkUp5IRrhcLjQaDUwmE5aWlu5dgKnVahQKBTSbTapJJQ2RA298Ph/5fB7/4B/8AwCAyWTC3d0dTk5OUCgUYDab8f79+66KZa1Ww+3tLXK5HGZmZmAymeh5vby8RKPRwNbWFqRSKZXcqFQqzM/PI5lMUsJdq9Xg9/uxvb2NSCQChmFgNBqxv7+Pra0tHB4eYnNzE4eHh1hdXaW6bJlMRkk2WSAXi0VKDmu1GnQ6HdxuN1wuF9xuN1ZWVnBycoJ3797h6OgIuVwOa2trOD4+xvr6ehfx3tragtvtxvHxMVZXVzEzM0NfL5VKYX5+HjqdDlqtFqFQCJeXlzCZTHA6neDz+ZBKpTAajSiVSggEAjg9PaULDnKMndeMw+FAo9FAPB5HLBZDIBCA0WiEyWQa6T7Q6XRd5JJcN6FQCCKRCBqNBhqNBiqV6klkN5fLYX5+fuBzPB6PEv1h91o+n0ckEkG5XKb9Ip0/Uqn0xaQIk0y6HxNfTwKFRsFLNoyymm4WLIYUNNqsx1hfdfHTp08jbc+RP99S09DPfvYzfPXVVxPXOX57ews+nw+Hw/Hk12o2mwOlIS9Zffvw4QNWV1fHWjQ0m01ks1lKtBuNBtRqNSVLo1a3CH7yk58glUohFoshm81CKpVCLBb3Vb6JDOL73/8+5ubmkM1mEQgEkMvlIBKJsL293TVxMwwDv9+PcDgMq9UKh8NBFySJRAI3NzewWCxUE57L5XB+fg6Hw4GpqSnE43F4PB5sbGwAAI6OjrC2tgYej4ejoyPs7Ozg9vaWfhf5fB4GgwGRSARarZZqycViMWKxGJaWlvD582esr68jGAxCoVCAy+XSCrnf78fCwgK8Xi+mpqaQzWbB5XJhNBopAS8UCri5ucH29jYqlQol3mq1Gre3t0gmk1hbW4NUKkWr1YLH40Emk8Hy8jJUKhWA77S5Xq8XqVSKSlE6yePd3R1isRgajQb0ej1dzN1HEGOxGGKxGHg8HiXg4xKvdruNQqFAr6tCoQCFQkGvLYVCMTLJLZfLOD4+xjfffPNsJLj3viQSnN778jnIst/vR7PZxOzs7ESNh41GAx8/fsSv/uqvvpljGtYwOqw4tbu727fYZMHilx1spbsHhGT/yq/8ykQev0gk6qoGTgokEgklxqPivjCZTt01kSa8ZOVFq9WiUCjcS7rb7TZyuRwlQ6VSCUqlEhqNBi6X69FV/mq1ilgsBqlUColEguXlZRweHiKfz6NYLNKeAAIulwu5XA6lUon9/X20Wi3Y7XasrKxgb28PlUoFCoUCQLdum2i0yYLh5uYG+Xwea2trXb/v8Xjgcrmg0Wi6CLdAIMDBwQEWFhYgl8uxv7+P2dlZ1Go1FAoFLC0tYW9vjzZYmkwmxONxWCwWhEIh6HS6rgqaUChEo9GATCZDMpmk+nqTyYRYLAa73Q6fz4eNjQ3s7e3BYrFgamoKl5eX2NjYQKVSwenpKba2troq3rOzs5BKpTg6OsLy8jI0Gg0WFxeRSqVwfn4Os9mM6elpCAQCLC4uolgswuPx0MZR0qAZiUSwuroKiUSCUCiEo6MjKJVK2O32vsowuQemp6cxPT2NXC6HeDyOz58/QyaTwWQyQa/Xj1TF5HA4tPrscDionCWTyeDq6gq1Wq1rcXcfuc3n88+6+0QaDvV6fdd90XkfR6NRKofovI/Jzzj38aTKHN5ipXichtGf//znrLyEBQuWdD8MYgc2qYM1Id2TZjUlkUgQjUaHktVqtYpisdg1ORPN46AwmdeGVqulThudKBaLXbps0nA2MzNDtbePQbPZRDweRzweR7lchtFoxNLSEiVzTqeTSjw8Hg/y+Tz4fD54PB6y2Sz+v//v/0MwGITD4egiQHa7HXd3d3A4HAN12wCQzWZxeXkJrVaL3d1d+hm8Xi8SiQSVmBDCvbm5CbFYjMPDQ5jNZhgMBng8HkilUpjNZnz+/Bmzs7NIJBKQSqUQiUTI5XJwuVy4vr6Gy+WiASed/r/EVk0mk+Hu7g4zMzPw+/2Ynp7Gp0+fMD8/D6/Xi2KxCIfDQTXdh4eHCIVCXU2Tq6urXcTbbDZDIpHg/Pwc09PTsFgs0Ol02N3dxeXlJfb39+FyuSCVSiGXy7G5uYlkMkmPk7jYkMWI0+mE3W5HNBrFxcUFRCIR7HZ7l0SkEyqVikpzUqkUPZdEbqTVakeuVnO5XGi1Wtok22g0qBTF7/cDACXgGo2ma8FeKBQGLhCeE0Q/3lsV7dWLp1KpsXesCoUC7Hb7xI3jj5GWvBUQz39WXsKCxQST7t4u/HEe733uIQgEgolNA5tUXbdCoUC1Wh0aJkP08VKpFHq9Hk6n80W1oI85/ouLC1QqlS4rPz6fD41GA4vFApfL9aRrimEYKh/J5XJUfz6IgBEi8r3vfQ/v3r1DrVbDH//xH6NcLsNut8PlclGZRO/iwev1Ip/PY25ujuq2yfsTYr20tASNRkPJkdvtRrPZxPb2NgQCAa2QkybM8/NzSKVSOJ1OZLNZJBIJvHv3DpFIBHw+HwaDAXt7e1hYWKB2gIVCATKZjPp3A+gKFyGVbqIhJ4sthmGgUCiQSqVgt9sRCASwvr6OcDhMJSIHBwe0gn18fIzb21vMzs52EW+1Wo2trS3aYDk3NweBQIC1tTVEIhEcHh7SplEA0Ov10Gq18Pv98Pv9MBqNXY48XC4XVqsVFosFiUQCPp8PXq8XdrsdRqNxaOiMXq+HXq9Hs9lEIpFAIBDA5eUlDAYDTCbT2KRYIBDAaDTCaDQC+H968EQigevr6y49OLkOvlRl9al68UqlMnIozlvCJGuim80meDweaxnIgsWkku5ez+BOe61Bjz+GaHdCKpWiXC5PZAMOqXRPwsDcW7luNBr4/PkzrRSSMBmpVPpmk9mazSYl2AzDYH9/H1qtFhqNBrOzs89Srcpms4jFYkgmk1AoFDCZTHC5XCOdk1qthlgshmg0iu9973tDdcWdum2tVkv10QTFYhEXFxeQyWTY3d2li4darYbT01PI5XKsrKyAw+FQwr2xsQGpVAqv14t6vY6NjQ00m01qB8jhcODz+bC+vo5kMgkejwe1Wg2Px4PZ2VlkMhloNBqUSiXIZLI+IsLhcKgPtlgsRrlc7pKYxONxrKyswOv1olQqYW5uDh6PB7u7u5iZmYHb7cb29jZWV1exv79PK++9xHt7exvn5+c4PT2l591isUCj0eDi4gKpVApLS0sQiUTgcrmo1+swm81ot9v4+PEjZmZmuryrORwOJb2ZTAaBQICSb2JROHCw5vNhsVhgsVhQrVYRj8dxeXmJdrtN9d+PGbOIZMBqtXbpwe/u7lAsFnF3d4dcLje2HvylQJrUyaKPoFMvnkwmcXd3h1qthpOTkxfRi78karXaF9mxew6M27z6EoUzFixY0v0EjHqzDYqpfuygPqkuIGKxGKlU6s0cD8MwfZXrUqkEhmGoc4FcLqcNcDabrcsr+q2BYRhayc5msyiXy1Cr1VCr1TAYDFAoFLDZbE9+n1KphFgshng8DoFAAJPJhJmZmZGrX8RBI5VKwWw2Y3d3d+gCYJBu++zsDF6vF7OzswgEAggGgzTohqBQKFC7P/KZewl3LBZDIpHA9vY2uFwuLi8vodfrodFo4PF4qFXe9fU1HA4HyuUyGo0GNBoNvF4v5ubmkM/nB5LuzntVJpOhVCpBo9EgkUhgeXkZNzc3aLVasNls8Pv9WFlZQTgcRjgcxtTUFLX/m5mZwdraGo6OjiCRSKBWq/uI9/r6Om5ubnBwcIC1tTVq47a1tYVAIIDPnz9jfn4eIpEImUwG7969A5/PR6FQ6NJ79+4ukIpyoVBAIBDA3d0drFYrpqam7u3LEIvFcDgccDgcKBQKiMfjODw8hFgshslkgsFgeFRfR6cenDSLW63WR+nBXxu9evFsNguv14vFxcUX0Yu/NHEdtBM1CRinSv9ShTMWLFjS/UIYV3YyCiY5llwsFn+RSjdphuptbKzVan1hMiTRsBepVArlcvnNke5CoUBJNmksU6vVNCyGXGupVArBYPDRpLtWq1H7uFarBaPRSMnrqMjlcggEAigUCpiamsL8/PxQScswv20AmJ+fx6dPn2i6aWcTJQAqRVhaWqK65Gg0Cp/Ph83NTUgkEuRyOXg8HmxtbUEgECAej6NYLOLdu3col8uIxWJ4//49stksms0m9Ho9bm9vYTQaaYy2Uqmk1fdOPXfnvUqaKUulEmw2G66vr6mOmTRi+v1+VCoVzM3N4fDwkGrgP336BJ1OB6VSieXlZZyfn2Nra2sg8V5YWEAoFMLBwQFWV1fpd+9wOKDVanFxcYF6vY6ZmRl6zhUKBba2tpBIJOB2u6FQKDA7O9tXxVQoFFhZWUGlUkEgEMDHjx9hMplgs9kerHgqFAr6uplMpmsRZTKZoNPpHtU7kMvloFKpHq0HfysV15fSi78kqtVql7RrklCr1Z68eHlq4YwFC5Z0PyPJHrYSHhZ9PO4NzOfz+5LlJgWEfLz0hPBQmIzRaKTbuKNuR0ulUmQymTcxWROSnclkIBKJqNRldXV16ASsVqtxeXk5VhNUq9VCIpFALBZDqVSCXq/HwsLC2FWuZDKJQCCARqNBnUiGEa1hftudSKfTaLfbqNVq2NjY6JpEfT4fYrEYNjc3KZnpJdzEho80G9ZqNerTzeVy4fF44HA4IBAIEAgEaLNbPB7H+vo6stksjYIvlUqw2+3IZrP3Vrqj0SgEAgFEIhEKhQL1HrdarbBarQgGg1hYWIDRaITP58PCwgJNv3z37h00Gg2mp6dxenqK7e3tgcSbBOKcnp52Vf6JG0yhUIDf74dEIumSPxgMBuh0OgQCAezv78NqtcJut/ddSxKJBIuLi5ienkYoFML+/j40Gg3sdvuDzdEcDocS5FarhWQyiUgkgqurK+j1ephMJqjV6pEX0UQT37vIGVUP/lR/8KeChCQNwlv3Fy+XyxNrt/dcJgRPKZyxYMGS7hcg3C8FqVSKSCQymV/o3w52g6qC44JMQOVyuUt//dQwmfsqdoFA4NXPWWf1LpvNot1uQ61WQ6fTYX5+fuSqDY/Hg0ajQTabvbdK1W63kU6nEYvFkMlkKJnTarVjnUOGYRCLxRAMBsHn82G327ucSAb9fqff9tLSUt/71et1XF1doV6vY2dnB7FYDBcXF9jY2EC73Ybb7UatVsPOzg69vnoJd7PZxOnpKaanpynxdLvdlDimUilUq1VMTU2hWCyiVCphbW0NmUyGkptgMAiNRoN2u02b4eLxeN93QSrdRPsNgH4HdrsdbrebvtfHjx+pJd/Hjx9htVqh1+uRSqXg8XiwuLgIi8WCcrmM8/NzrK+vDyTeWq0Wm5ubtMFyenoasVgMhUIBW1tbKBQKtNFxZmaGnmMulwun0wmz2Qyv14u9vb2hix6hUIiZmRk4HA6Ew2Gcnp5CJpPBbrePRJx5PB5MJhNMJhPq9Tp1P2k0GlT/fR+pKxaLEIlED+6yDNODBwIBnJ+fP9of/DlQKpW6kkBHwTh68ZfyF2+1Wmi1WhPbSFkul/tcnO4bCwddE08tnLFgwZLuVyTcT71ByUQ+qVAoFCgWi30Tx32D/CDdNfD/tlqVSiWNQn8pVxe5XI5ms9nlRPESaLVaXbrsarVKddkPBZg8BL1ej1gsNpBI5fN5qnGWSqUwmUxYXFwc+3w2m01EIhEEg0HI5XIsLCw8SMSG+W13IplM4vr6uivoxul04uTkhNoOSqVSbG5uUiIZiURwd3dHCXe73cbZ2Rm0Wi2deAOBANrtNux2O9rtNjweD+bn58HhcKiOnzRgkobDTCZDLf3EYjFtUOz9bogUTCKRoNFooNVqQaPRIBAIwOFwwGg0IhaLwel0wmg0IhgMYmZmBk6nk/qHEylNKpWCTqfD3NwcTk9PcXNzQ89tL/GWyWTY2dnB6ekp9UNfX1+nbjW7u7u4urrC/v4+lpeXu6rUIpEIy8vLyOfz8Hg8CIfDVKo0iDzb7XbYbDbEYjFcX1/TxwbFsg8jkkR3XyqVEI/HcXJyQnsFjEZjH8GLx+Mjv37nuPtc/uBPBfHwf65q8Wv6iz/k9//WMW6l+77mSRYsWNL9hQh37w1JZCSDtqCGPT7OAFsul58c6/2lIJFIUK1Wh05EvZXr3kniNcJk7iPe+Xz+WUk3qcARkt2Z0LewsPCsFTidToerqyu609CZMsjlcmEymbCzs/Ooz1ev1xEMBhGNRqHVarGxsfEgqbhPt925CLm+vkY+n6daZQIul4vp6WkcHx9Do9FgeXmZPtdLuAFQUkhs5orFIgKBAHZ2dgAAwWAQUqkUWq0WlUoF2WwWS0tL1A5xbm4O5XIZAGh1m3zGRqMxUF5CFohSqRSlUgkqlQrn5+dgGAYmkwkXFxfUJ3t/fx8OhwNWqxXhcJgSbaLn3t3dhUAggMvlwsHBAUKhEKampgYSb4FAQAOFRCJR10KGz+djZWUF8Xgcx8fHsNlsfWmrSqUS29vbiMViOD8/h0qlGup4w+FwYDabYTabqZSIOJ6YTKaRd0hkMhlmZmYwMzNDXXH29vaoK45erwePx0M8HsfW1taT7oWn+IM/FcQT/yXlLS/lL07yByYV4zh/DSuQsZVtFizp/oK47+Yb9txTK92ksjaJAQVSqRS5XA4CgaAvbrmzschsNkMul78payqVSoVCodDlkvHYgZ+Q7Gw2C7FYTCvZarX6yVKY+4iGWq3G9fU19R03Go1jR8T3fpZAIIBkMgmz2Ty0Ut2JUXTbwPCgG4JkMomrqyvMz88jEAggkUjQiHa/34+trS16/ZAGTkLWGIaB2+3G3NwcxGIx6vU6AoEAtre36e9brVZK8lQqFW24JLs0xWKRnrdBrgidu1Kkn0GpVEKhUCCbzVLCRxZaGo0GkUgENpsN8/PzuL6+hlarhUqlgtlsxuXlJY2oX1tbw8HBASQSCbRabR/xViqVOD8/x+zsLBqNBnU26SRhRqMRKpUKbrcb6XQay8vLffcbIbvEBWVqagp2u33oNUp8u0nTrM/nw9TUFKxW61gVRrK7s7CwQP3fb25uIJfLwePxnn1ceE09+GuE+gzDU/XiZMEwiSD34qgFm5cqnLFgwZLuCawWVyqVN0+6h4XJAN9t88lksjcZJjMMCoUCd3d3Y/+/er3epcvmcDjQaDQwGo1YXFx8cVeFVqtFiUs2mwWfz6cR4k+p1nU6kXz99dcPkqpRdNvk90jQzeLi4kDHGPI6GxsbkMvlUKlUOD09RTabRTqdpkmThJyHQiFsb29TsnR7e0tlNMB3iZUk6bFeryORSOCrr74C8J0unMhRiM820K3Lvc8ysJN0E0KZyWSg1WppLLxCoYDdbsfp6Smmpqag0WgglUoRCoVgs9kwPT2N/f19RCIRWCwWiMVirK6u4vT0lDaNdhJv0ixJjo9Ex3c6ugDfyUk2NzcRDAaxv7+P2dnZLt9uQtSmp6dhNptxe3uLjx8/YnZ29t7FJ0mtJPaQHz9+hNlshs1mG2uXisvlwmAwwGAwoNFo4OzsDAzD4Ntvv6UBPMMaEp86xr6UHrxQKNzb3/AlMKpePJ1O036NSfMXf0yo3EsUzliwYEn3hOGteXU3m82Bumsul0sHZNKQx+FwcHp6irW1tYk770qlEsViEQzD3FuNbrVaVC+ayWTQaDToBO10Ol9lcmq328hkMojH40ilUlAqlTCZTFhZWcGHDx8eXSlMpVIIBAKo1+uw2Wz3OpF0YhTdNvBd9djtdkMqlXYF3XQS8qurK5TLZezs7FACR8Jj7u7uaPWavN7V1RXW19fpe2YyGSSTSezu7lISlE6nKckOBoMwmUxUk10oFLC2toZ2u41cLoelpSVKujvlJcMsAwnpJh71Go0GV1dXAL6rJO/v72Nubo6mmhL9+NzcHA4ODuixuFwuHB4eQqPRQCwWQ6lUYn5+Hqenp7R5VKlUQiKRoFQqYWZmhh6LwWCAWCzG2dkZKpVKn3WkzWaDRqOB2+1GKpUauBgUi8VYWVlBLpfDzc0N1XvfR3plMhmWl5dRq9UQCASwt7cHvV7/qP4E4hazu7sLhmEQj8dxcXEBDodD9d8vsTP23HpwssMzKQWeTr34hw8fsLq6Sr+LSfMXn9QqPQsWLOn+giCplK+NYWEyrVara5A1GAyQyWRDK7gMw7x4Q+KLXJB8PvV47qwItdtt5PN5SrKJjIDojF+iEndfFS0ejyMej0MsFsNoNNKIcAKz2YxoNDryxN9utxGLxRAIBMZulBtFt03eY1jQTWel6uzsDEKhEFtbW11kPxwOIxKJYHNzEzc3N2i329DpdDg9PcXi4iL9DprNJi4vL7G0tEQJvcfjwczMDHg8HprNJqLRKN69e0cXC3q9HlwuF7lcDhKJBAKBAM1mk6ZNkgpab7VzWKVboVCgVquh0WhALBZDKpUinU5Dp9PB4XDg+vqaVt1NJhMNUSFR9RcXF9ja2qLpkeVyGaenp7TKrdFoMDMz06XxJu+7vb1NnU0WFha6jpk0YHq9Xnz69AmLi4tdVXECsnCKRqM4PT2FVqt9MBxJJBJhfn6e2g0eHR1BqVTCbrePLLVIJBJQqVR08eR0OuF0OmkTMEnuJAE8L9VU/RQ9eLVahUAgmNj4d7JDSTTjvcWGt+wvXiwWWdLNggVLuseHTCZDIpF40Spp57biY8Jk7oNcLqfe2ZMGvV5PQ1nIREt0jsRLWaVSvZguexBI7HYsFqOx21tbW0MrbhaLBYeHh3A6nQ9W7MPhMEKhEGQy2UhOJASj6rZJBcrtdoPH4w2tgpdKJZyensJkMmF6errruVAohGAwSCUlGxsbOD09hc/n67MqvLq6gsFgoIumeDwOhmGopIKE3ZBjiMViWFhYAAAa/U4mcEI66vX6wAUmn89Hq9VCu92mhJTIUIjEhOiIY7EYdDod1Go1eDwebaJ0Op3Y29uj+nGSVkkcUABgenoa+Xwee3t7mJ2dpZKS3uZKQn63trZwcXGB4+NjrK6udpFTDoeD2dlZ6HQ6WvWem5sbSJDMZjMMBgPu7u7w6dMn6kJy3zXF5/Np42g0GsXFxQXEYjHsdvuDwVPRaBROp7PvcVKFnp+fp3aXt7e3UKvVNIDnJaVr4+jBK5XKqy7CnxOVSoUS7kF46/7itVptYs89CxYs6f6CIE4Iz0XYBoXJiESiJ4XJ3AexWDyWbeBbQK1WowQ7l8shmUxCo9HAbDbD5XK9WFVtGJrNJg2uKZfLMBgMWFpaGqlqKJFIIJVKkUqlBlasO51INBoN1tbWRm60HFW3TRCJROD1euF0OjE1NTXwd1KpFC4vLwdWwAnh3traokSZz+dDIBBAKBRSezmJRELPFXE5YRgGt7e3WFlZof8OhULY3NykxLrVatEwoEwmQ3cHOqUl90VLE4mJUCik1W6ine0k3V6vF61Wi+4k+P1+6HQ68Pl8TE9Pw+Px0ONaWlrC58+fodVqIZfLEYvFqHd1p53oIFcTQo7W1tbg8Xiwv7+P9fX1vgWaSqXC7u4ubm5u8PnzZywvLw+1DSRE3+PxUOL/0E4Il8uF1WqFxWJBIpGA1+vF7e0t7HY7jEZj3zhTLBbRbDbvHTM4HA50Oh10Oh0NdgqFQl0BPK8RX36fHpzsltzd3X0Rf/CnoFQqPapQ8hb8xe9bHLNgwYIl3Q+S7nHlJY1GY6A05KXCZO6DXC5HLpd70+e42Wx26bLJhK/X65HP57Gzs/PqRJtY18XjcWSzWZoGqNVqx564iRd0Jzkql8sIBoNIJBKPsg8cVbdNJkASdLO1tTV02zcYDCIQCGBtba2P9AWDQYRCoS7CDXzXJNlsNrG7u4tIJILDw0PYbDYEAoEuH2+/3w+VSkVfNxqNQqlU0mPp9DQnfQuEtJVKJboQGWQX2Ek4CCknpJtUPYkUgc/nQ61WI5FI0Oqx1+ulUedmsxmhUAjJZBJ6vZ5KNS4uLmjSJEnmPDg4gFQqpd/rMOINAHNzc5DJZDg8PITL5erbxeDxeFhaWkIymcTZ2VmXR/qghfTq6iqy2WyX3nuUpEqy8Ein09TxxGazwWKx0O8qEAjQnpBRwOPxqI1hrVZDPB7H9fU1Wq0WDeB5DalBrx7822+/hcPhoL0Gr+kP/lQ8t0f3a/qLk4XbpCZpsmDBku4vCA6HAx6PN7B5a1iYTLvdpgOVXC6nqW+vTRxJFe1LpDs+RGg7ddnlchkqlQoajQYWi6VrskkkEshms6/mQEA8i5PJJBQKBYxGI5aXl5+kiVSr1Wi1WigUClRPnc/nYbVaR3Ii6cSoum2CQUE3vWi327i+vkahUMDOzk4fgQ8GgwiHw32EOxKJIJlMYmdnBxwOB1arFSqVCgcHBxCLxfR+qVarCIfDVLtNzoHL5aL/7vSD7ox+J6SbEPJRKt3Ad7KwfD5PCQep9kkkEhiNRoTDYSpzsdvtCAQC9D3n5+epfSKXy4VIJKJNnp2uLGtrazg6OoJYLKZb6fcRb7PZDLFYjIuLC8zMzPQ5lwDfSaqUSiUuLy9xcHCA5eXloYRVrVbTxc7JyQl0Oh1mZmZGqjASnXShUEAgEMDd3R2sVisMBgMymQzm5+cfda2LRCLY7XbY7XYUi0XEYjEcHR1BJBLRBszXqICWy2X6nuTaeU1/8Kcin8+PnOb4lLntJfzFO3swWLBgwZLusSGTyZBOp7u6yN9amMwwSKVSNBqNe8nKa6BYLNIJL5/PU5367OxsF8EaRA5I1fGlUCqVEIvFEI/HaTrfQ81qjyHeJycnVNLgcrnG2uEYR7dNJs5hQTe9E+TZ2Rn4fD62trb6JlBCuDc3N7sIdzabhc/nw9bWVteiIZVKQaFQQKVSYX9/HxaLBcViEVNTU/T/JxIJ6ggCfCclEYvFlBx36rnJ99Pp0T2MHBEHFHLPRiIR+hyRmEgkEhpcVKvVKDHz+XxUxqJWqyGXy+H3+6kF5czMDPx+P/L5PD02mUyGpaUlnJ2dYXt7m36++4i3Wq3G1tYWTk5OUCqVaHhQJ4RCIdbX1xEOh3F4eIjp6el7Y8wtFgvVe+/t7dHkylEq1QqFAisrK6hUKggEAtSPvNVqPZmEyuVyyOVyzM3NIZPJIBaLwefzUXcf0jT7EkgkEn3X/Gv6gz8FzWYTtVrti6VRPlUvTha6bKokCxYs6R4b7XYbxWIRt7e3UKlUNExmErxSSTVDoVAgl8uNHef8FFSr1S6/bIFAAI1Gg6mpKayuro48oWm1WgSDwWdPBSXb4PF4HI1GAyaTCevr68+6JUoquIFAgB77+vr6WFvt4+q2CSEmldp3794NPdfEiUOv12N2drbv+UAgQF1KOgl3uVzGxcUFVlZWuu6BYrGIYDBI5S4kBbJUKsFgMNDv0O/3d71fp7QEANLpNLW5rFQqEAgE9DOQhe4gCIXCrkp3pyxMo9EgkUjAarVSP+p4PE7DZ6amphAIBLC8vAyGYSCTyeD3+2kIEXHTuby87LJX1Ol0qFQqOD097Vq03Ee8JRIJdnZ2cHZ2htPTU7hcroHfkdVq7bIWXFpaGroQ5PP5mJubo3rvSCSCubm5gY4ogyCRSDA7O0tdS/b396HRaOBwOJ7lniBklmEYJJNJGmWv0+lgMpmevecknU4P7Vvo/Mwv5Q/+FOTzecjl8ldtEB8Fo+rFc7kcms3mxCY5s2DxKovb3/u93/s99jQMJq08Hg9CoRDLy8tQq9WQSqUT1SRSqVRQr9dftJmy0WggnU4jFArh5uYGkUgEHA4HWq0Ws7OzcDgc0Gq1Y2vYhUIhIpEIFArFk7crW60W4vE4bm9v4fP5IBQKYbfbMT8/D41G82yVbeJEcnFxgXq9junpaczOzoLL5Y5VtY/FYjg7OwOPx8Pq6ir0ev29kxhpVvT7/VhcXLzX3SKTyeD09BTT09Ow2+0jE+5Go4Hj42PMzMx0ETqGYXB8fEx3LggRjEQiMBqNSCaTCIfDqNVqqFartMJLKvKLi4vg8XioVquIRCKUlOdyOdTrdVqdjEQiXXrcu7s76rBCdp80Gg24XC4ikQh0Oh1t9PR4PLDb7eBwOODz+fD7/bSCLJPJcH19jXa7jcvLSwCgkhHy3hKJhC7WOhewxFM+Fot1NZ8S2QkhcJ3XL5fLhclkQi6X62rk7IVAIIDZbEa1WsXV1RVtfBsGUs2VSqXweDxIpVKQy+UjXdt+vx9cLhfLy8uwWq2o1Wq4ublBJpOBSCR6FrkAkTSYTCZYLBY0m00Eg0H4fD66G/fU+7BWq8Hn82FxcXHksYbD4UAkElFdv81mg0gkQrlcRigUgs/nQ6FQQLPZpM3DL4VYLAaBQPCgw8xbAbFlVKvVMBgMqNVq1B2IBQsWg8FWuu+BTCZDMpmc2ONXKpUIBoPP+poMwyCXy9FqdrVapbpsm832rI1TWq0W6XT6UW4I7XabWptlMhmo1WpYLBasra09eyWpXq8jFApRYtjrRGKxWLC3t0e1xfdVusbRbQPdQTfv3r27lxSEw2Hc3d1hdXV14DklhHtra6uLALXbbZydndF0wk54PB7I5fIu0hmNRsHn8ymBzmazODs7AwD4fD5YLBb6nZDjHSQt6SSZD8lLOqvbpJmS+H2LRCIaC65Sqah2lRB04pG+uroKhUKBVquFjx8/0uh4AJiZmcH+/j7i8XjXZ11YWMDx8TE8Hk+XZOS+ijeHw8Hi4iKCwSAODg7o+w4ihE6nE1qtFhcXF0ilUlhYWLh3t0ij0WB3dxfhcBhHR0cwGAyYnp4eeu6azSZCoRA2Nja+q8L8rQzKZrPRqjSPx4PD4Xg2qZdAIMDU1BSmpqZQLpcRj8fpIpPovx+TBJxOp6FUKp8kD3mKP/hT8Rp67pdEuVyeKLcsFixY0j1iZaKTDDz28VGgUChQLpdplWMSSXexWHzSdh+R2ZCJh3TXazQaLCwsvOj2q1arpaEq40xcsVgMiUSChngsLi6+yPdH9LAPOZFwuVzYbDbc3d1RK73eCt04um0Cv9+PYDCIubm5e/9Pu93Gzc0Ncrkctre3Bx6j3+9HLBbrI9wAcHl5CaFQ2Pc9pNNppNNp2ihJSJzP56Mkjnx+gUCAjY0NhMNh7O/vg2EYGjsuEAiQTqe7qshEmtJJuu9rpOxMjyWkm5BEjUaDbDYLpVJJw3JOTk7QbrdhsViwvb2Nw8NDuiDi8XiYmZmBx+OhTZ6kEnx8fNwVHsPhcLC6uor9/X0qQRuFeAPfJVRKJBKcnJxgYWFhqAxMoVBgd3cXHo8Hnz59wtLS0r3VRA6Hg6mpKapZ39vbg9PphNVq7btXg8EgVCpVH+nncDjUmSSZTCIQCFC7QZPJ9GwLV6lUiunpaUxPTyOXyyEWi+Hz58+0Km4wGEYm0ST86DnxmnrwQqEwcHyYFHT2YLBgweIXgHRzOJw+Qk0I5TiPj3xy/lbP2WljNkkQCAQQCAQoFotjBRaQiYXossnEYrfbX7XRSKPRoF6vo1wu31tBr1QqtCGSxFWPa8U37uQYCASQzWZhtVrx1VdfPVjxslgsCAaDSKfTtIr2GN028J1u3u12g8PhPGgb2Gw2cX5+Dg6H0+XAMYhwb25u9hFbv9+PcrlMySdBo9HA1dUVlpeXuxY0Pp8Per2+q0rt9/ths9kgFoup3/SnT5/QarXw4cMHyOVyFAoFmEwm6qNdLBa7Anoesgzs9M7u3KEijYGRSASpVAqVSgVKpRKtVgu/8iu/QkmoXq9HKBSiwTDEQjCRSFAyLJfLYbPZ4Ha7qZ83GSfW19dxeHgIsVjc10B5H/HW6XTY3NykCZaDgmkI6V9YWEA6nYbb7YbRaMT09PSDITnz8/NU700sBsn112w2qZToPuj1euj1eiqJIXaDVqv1WccClUoFlUqFhYUFpFIpxGIxeDweaDQamEyme207GYZ5kvvKqHgpPTixln1LzfjjoNFooN1uj7VDMWg+foniGQsWb4rHtif4Ch5Grh8i6ePg6uoKMpnsweact4rb21sAGNgw11lF7PTLJoRXo9FArVZ/0YnA4/Gg3W73TaaNRoMmRNZqNeoL/JKVFuJxXK1W+zyOR0EqlYLP58POzg7i8Tj1256dnR15siJBNw6HAzab7cHF0+npKTQaDebm5gYSgPsIdyKRwO3tLba3t/ueOzs7o014BOVyGYeHh3j//j1dhJRKJRwfH+Prr7/u8u6u1WpYWFgAwzCIRCK4u7ujC1yxWEwJqFgsBpfLxdXVFXZ3d+l5+slPfoLvfe97dBF0enqK1dVVVKtVFAoFxGIxiMViKjOpVCrUh5zH42F/fx8zMzN0O7xcLuPo6KjrOHO5HNxuN96/f9/1PR8eHkKv1/ed/2w2S+Pje2VE2Wx2KPEm9+DZ2RnEYvGDi69Go4Hr62uUy2W4XK6RGx5TqRRub28hFosxNzeHaDQKhmHGJqqlUgmBQADpdJrqoF9qjBgUUGUymfqkV2QsWF9f/2JjFcMwXePoOP7g4XAYuVyO2mlOGlKpFE2sHXXuHkSsX6J4xoIFS7pfgHR3gnyk57hZQ6EQyuUyjameNKTTafj9/q5KZavV6tJlv+XwCEJ8vvrqK7TbbeqAkM/nqQOCWq1+MYlLrxOJ3W6HwWB49PuRCq9QKMTc3NxIum1CtC4vL1Gr1eByuR7UzhMCOD09PVQnend3h3g8PpBw5/N5nJ6eYnNzs4/URaNRhEIh6tNNcHx8DJ1O17VAdbvdkMlkXU2be3t7Xcmed3d3aLVamJ2dBcMwSCQS8Pl8tJGQOCSQinar1aKvxePxIBAIUKvVoFKpIBQKIZFI4Pf7sbm5CYVCAS6Xi6Ojo64Y9GAwiFKphKWlpa6FhEaj6bLpOz8/h0wm66pAV6tV7O/vDz03fr9/YLDTQ8SbYRhcXl6iWq1ibW3twd0TUgkm/tijXs+hUAh3d3dgGAY7OzuPdimp1WoIBAKIxWIwGAyw2+0vOnZUq1VKrtvtNtV/SyQSHB8fw2AwvClNdKcevLeY0asHv7y8hEwme3Ah/ZaLO3w+Hw6H49HFMpZ0s/hlwMQ2UvbeeC91U0qlUiQSiYn9gomum/hkZzIZKjfRaDRYWlr6/9l7z+VE1nRZOPFGGOERRgYkgQTy6u7Z58+5tXNrO+LEWdOtlkfCeyMQTngP34/+qrYMpqoAda81lREda0YGQVFU5ZtvPpm0rCe/4/mPRiPc3d2hXq+TWb8ul2up0VqDwQBPT09IpVKQSqWw2+1zDQkRvu1er4fhcIjz83PKW/NE0Y3RaITL5ZpJ+LPZLKLR6NgGRCqEu9Pp4OHhAQ6H4wMha7fbiEQiODo6evM8isUiOp3OG8LabrdRKpXeLFiJoqDXi41yuUySWi6Xi9FoBKVSSX7t5eUF8Xj8jYr2WukGgP/7f/8v3G43eUzz+Tz4fD55jqyurqJcLpOkW6/X4+LiAjs7O+TPWK1WeL1erK2tka/NZrPh6uoKRqORVNkJm4zP5/uw8DAajWg0Gnh4eMDh4eGb782ymnC5XOzt7SEWi+Hq6gput3sqISYq130+H0qlEpxO58wdEw6HA4vFgpeXF3S7Xdzd3WFjY+PNa6YKorVzY2MDmUwG19fXUCqVWF9fX8o1RSwWY319Hevr6+Ruxs3NDZk28qcJI1T94KurqygWi7RmV/40EJn8VBd+LFiwpPtvTLiXCZlMRrZN/p2yRxuNBrnVORwOEQwGodVqsbGxAaVS+cdlwY67iL/2aQ8GA0re6UWoU+l0GplMBqurqxOTJahinG87HA4jGo3O3NYfDAbkAOS0opvXIOLixlkcCMRiMRQKBRwfH49tW72/v8f6+vqHobTRaASv14uNjY03ZHA0GiEcDmNnZ+fNZySVSmFtbe3N4uJ9NvdgMEC9Xn8zM1Gv19/YhKgUPBHDlMRrJoYpieepUqkQCATInxcKhVAoFCgUCiQpUigUEIlEyOfz5NfEYjFMJhOi0eibITej0YhisYhoNPrBumW32+HxeMhIxNeYRbwBYHNzE1KpFLe3t3A6nVMj5MRiMY6Pj5FMJnF5eTlzqBb4tfvVaDRwfn6Odrv9plKeycJSIBBgY2MDVqsVT09PeHx8hFgsfrOzsGjI5XLI5XLY7XaEw2H0+31cXV1BqVTCYDBAo9H8cde4SX7weDyOfr8Pr9f7W/LBF3W/YYcoWbD4B5Luz95aEggE4HK56HQ6f3S9bafTeeMn5HK55ACSVCrFcDic6uv+E/B6+3g4HMJgMOD4+Bij0QhXV1dLvYm2Wi2kUikyEu7k5GTurfJcLkf6tl8PPG5ubuLy8hJra2sTlUzCVqNSqaYW3bwmr16vl7QMTEprIQj30dHRB8I9Go3w+PgIpVI5VrVKJBLg8XgfvkfsBrwmbL1eD7lcDl++fHnz+M/Pzzg9PSW/RqSKvH5vG43GG8I/LS7wNYnu9XofSPdrktbpdMi0FOCXUvw+AtBqtSIWi3342sXFBarV6puFz+7uLn7+/AmNRvNh0Hpvbw83NzdIpVIfLANUiLder4dYLMbDwwPW19dnqogEwX0dLTjumA2HQ3KBxOPxsLKygqOjI3I3ZWVlBTabjdG5T5QNmUwm5PN5RKNRRCIRrK+vz2XJmnU/qFQqsNlsUKlUKBQKeHp6QiAQgFarJe1nf+J9jGh/5PF4kMlk0Gq1KJfLZGvqn2r5e49ut4vhcPi3HQJlwYIl3VMuVK//S9zI36vQBCmf9HW6IPKip1Uyfzb6/T5eXl5Iot3r9ciL9Obm5psFgkAgQDgc/iPf03GDUq/9vq9J0/Pz88I9m0ySSGZhVt62QCCAzWaD1+v9kCgyHA4Ri8WQy+XgcDgoKYXtdhsejwdKpRLb29sTyc00wg2APEfGKfC1Wg2ZTOZNPCBxw00mkzg5OXnz9XQ6Db1e/+ZGXCqVIJVK35yb7/O5CdL9ejEyLbnk9TF9HxuYzWbfXDsIiwlBqLVaLYLB4BsirtFoEI1G3zyv1xGCr1+nQCDA7u4ufD7fB7sQj8eD2+0m69Xf7xpQId4KhQKnp6e4v79Hs9mc+t4Sr/n09BTRaBSXl5fY3d39cP7E43HIZLIPX9dqtdBoNGR2uNFoxMbGBqN0Eg6HQ9oqiOHjaDTKaPh4Fur1Ovr9PtRqNVk8ZDAY0O128fz8jHA4TDbP6vX6hTbPLgrlchkmk+m35YPPCyKRiW2hZMHiH0a6p5HmSd9bhCoulUrfqGa/67VXKhWSZDcaDSgUCqhUKuzt7U3d2lMoFGQj4J+g1g+HQ7K45uXlhYwjnHbhNhqNpF1hUTeKZDKJVqsFq9UKh8Mxd/wZnbxtoq0xmUy+aVb0er2QSqU4Pz+ndGOtVquU1NBoNIpisTiRcGcyGby8vODk5OTDezAcDuH1erG9vf2B/EajURiNxjdKHNHM+VrRBj5aSwjC8TqxgSDOr/9Ot9udGdk5Ljbw/WdWpVK9Id1cLhcajQbPz89vjp3VakUymXyzGDAYDMhkMh9eg0ajQbFYRCgUejOUCfzyPLtcLtzf348duqRCvEUiEU5OTuD1enF/f4/9/f2pmfNcLpesgff7/VCr1bDb7eByuWg0Gshmsx8WTq/JMpHDHY1G8ePHj6mDuFQFC7VajVqthkQigXg8TqrhiyCOxPvxnsgLhUJYLBZYLBY0Gg3kcjnc399DIBCQBPxPUGaJxJP3585n5oMvYuGziMXMssUzFixY0v03gVwuRy6X+y0XM4JkVyoVcgt/a2vrw5b8NHC5XFLl+53T/S8vL3h+fkY+n4dMJoPBYIDT6aR0w9Dr9QiFQjMzu2dd1PP5PJLJJEajEaxWK/R6/dwKDdO87Z2dHVxeXkKj0ZBZv1Q8ua8JRzgcnun7jUajKJVKEwl3qVRCPB6fmOMdCoWgUCg+lLfUajWUSiV8/fr1zdeJZs7XC7x+v49yufzG40zYPV4vGN/7uQnSPYugCQSCN6RbIpGQSSfEa1KpVKRq+JpMR6PRN6Rbr9cjGo2+aaQEfnm1Hx8fodVq3xwnu92Oy8tLFAqFD62NcrkcOzs78Hg8Y6MXqRBvQjUPh8O4vr6G2+2eaTdYXV3F2dkZQqEQLi8v4XQ6EQqFsLGxMZNsCoVCOBwO1Ov1N37veWwacrkcLpeLLJT68eMHDAYDmd/OBP1+H9lsFufn51N/jrDM2Gw2vLy8IJfL4eLiAnK5HAaD4cP7+Zmo1WpQKpUzz+9l5YMvAtVq9U2m/jwi2jLFMxYs/gTw/s//+T//hz0M0yESiRCNRj8MhS0a7XabVD+DwSCKxSL4fD50Oh22t7dhNptJMkP3okoQTqqEblFoNBpIp9Pw+/2oVCpYXV3Fzs4OzGYzZDIZ5YUDh8NBr9dDrVajPZw1HA6RyWTg9XrRbrexsbEBu90OmUw2980pl8uRFdYulwtarZbyY/J4PPD5fHi9XgwGAxweHlIuYYpGo8hkMjg8PJw6YBmJRFAul3F4eDj2xk4kbUxKyigWi8hkMjg4OPjwXj0+PsJqtb75+8Sw5c7OzhtyRyxaX59/RIHNazJfKBTA4/HevMeEVeV1Mkc8Hn9zo282m+h0Om9+r1AoQC6Xk78nEAiQSqWg0WjIYyEWixGPx6HVasmvcTgccDgcPD8/v3luRJ18s9l8Q0C5XC7kcjl8Ph8MBsOHa8TKygoGgwESiQQMBsOH80MsFkMul5PkaRIJJSwUPp8PCoViJlnlcrnQarUQCoV4eHgAl8vF7u4u5fNTKBTCaDRCIBAgFAqhWq1CLpfP1e4qEAig0WhgNBpRq9UQDAbJLHW6ynMmk8FoNKJl+xOLxWTGOo/HIy0ojUYDPB6P0bV1HqTTachkMsrRocT5KRKJoFQqyZx0IsElnU4jFouhVquRTcrLtKL0+31Eo9EPQ9QsWLAYD1bppniRW1lZYUT4Zl2wXjc/DgYDUq2gU5hCBUqlEsFg8FNSWAg/ZS6XQ6/Xg16vx8HBwdxbkDqdDg8PD9ja2qK0+HmfRLK/v7+wKLNZvm0qyGaziEQiWFlZgVQqpfR+E1aPXq+Hk5OTqTdUgnAfHR2NJUrdbhcejwfb29tjnz/ROrm/v//heD8/P2M0Gr2pPSfI9crKyge1OpfLfciSft3O+XoR8F5RpZpeUq1WP5BdwoZFgLCYEEox4T/O5XJvSLzRaEQ8Hker1XqjKttsNlxeXsJoNL4hvQqFAmtra/D7/WMLWjY2NtBsNuH3+8cWoFBRvIFfzaZisRiPj4/Y2tr6cPwnkWcejwehUEgmotAZzNPpdKTf++rqCmtra1hfX59LgBAKhbDZbGTc4N3dHWQyGaxWK2VF/b0tiA64XC50Oh10Oh16vR7y+Tzi8Tj8fj9p6/iMKNVKpYL9/f25HoPL5f42PzhRZvWnp2GxYPGngFW6KaLT6aDVas2V1Uz494hWwWg0isFgALlcjvX1ddhsNuh0OshksrnUpLGrKz4fhUIBIpGIsT1jGgaDAdlgGI1GIRAIYLVasb29DZVKtRD/pEgkQqlUwmAwmEpy2+02otEoAoEA2fBnMpkWsojpdDoIBoNIpVJYX1/H9vY27cft9Xrwer0ol8twu90wm82Ix+PgcrlTvfmdTgd3d3cQi8VwuVxTSc8swj0cDnF/fw+dTjeRuHi9XqjV6g/EbjAYkDne71/74+Mj7Hb7G0LabreRSCQ+qKzBYBA2m+3N84vH41hbW3vzuJFIBDab7c3vvle6e70e2ZD4+u+2Wq03xH44HKJYLL5JJxEKheSg32siMxgMUC6X3wxB8vl8DIfDDyo4sbBNp9MYjUZjCZtGo0E6nSaTKd6DquJNDGYGg0F0Op2p16R+vw+Px4OdnR1sbW1hOBzC5/OBz+fTIpUcDoeM4ysUCohEIhAIBHPHxHG5XDItZzQaIRqN4vn5GQKBYOp1qlQqoVAo0FLuJ94EeTzI5XKsra1Bq9Wi2WwiHo8jk8lgMBhAJBIt/HoM/PJpFwoFysVGdF7PysoKqehrNBryvA+Hw3h+fkar1SLP/XkIcz6fh1gsnuu+yILFfxJYpZsiVCoVQqEQ7d+r1Wqkkl2tViGTybC6ukq2EX7mlpxOp8PLy8uHJAWmGI1GKJVKeH5+RqlUwurqKtbW1uB2u5emfKyvryMcDo9tbqvX60gmk6R3/cuXLwsblmLq236PSUU3e3t7uLu7g0KhGEs2arUaHh4eYDabZ96kw+EwKpXKRMIN/GqKFIvFb5oWX+Pp6Qndbhcul+vD95LJJFZXVz8sfPL5PAQCwQeLTC6X++Cdr9VqEAgEb8j1aDRCs9l8syPS7/fB4/Fmfk7ee7qBX0p3sVj88Dl+v+Mjk8nA4/FQqVTePHez2UwOE74+j6xWK378+PHh5zkcDpxOJ25ubsbGvHG5XLjdblxdXUEqlb4h/gSoKt5SqRSnp6d4eHjAw8PDxNkIv99PJpMQr0mlUsHn86FYLGJ3d5fWZ0QoFMLpdKJWqyEUCiGdTk/cKaFLvtfW1rC2tkZa7KLRKDnY+f79z2azY78+LyQSCTY3N7G5uYlqtYpcLke+XwaDATqdbmEEnLhmLhvL9INXKhXGuw0sWPwnglW6adxsIpEITCbTVIWx1WqRw3qBQAAvLy/kJPrOzg5MJhNWV1c/3TsI/FKKY7HY3BfJarWKZDIJv9+PVqsFjUYDh8MBo9GIlZWVpb4uiUSCZDKJlZUVktSUy2UEg0Gk02nodDpysHBR/vt5fNsEBoMBgsEgstks9vf3YTQa3zwGoTjF4/EPZCKfz8Pr9WJ3d3emnYAg3IeHh1Ozuuv1+sR2y1arBa/XC7fb/YGQtdtt0nLy/vH9fj82NjY+LBoCgQA2NzffEOxcLgehUPhGhW42myiXy28WVESr5ftz9r3SzeFwkEwm3yxIeDwe4vH4h689Pz+/8XoT5L5arb5ZkPJ4PHS7XdTr9TdKHofDgVAoRCwW++AnFggE5N99/x4Tj6lSqeD1eqFUKsfuklBVvImIPMJGoNFo3rwnqVSKtC+8fh4CgQBGoxGtVguBQAASiYT27pdIJCJnXAKBAGq1GhQKxUIIqVQqJTPsn56eEIlEyMURl8tFq9VCJBKBw+FYigL9+jVqNBpYLBYIhUIUCgWEQiHUajVwuVxIJJK5rnXhcBhWq3WhNsJZWKQfnNiZsNlsrL2EBQuKYJVuGkrM+8gx4K1/7uXlBaPRCKurq9BoNGMj1n4nxGIxhELhh1QGKmi1Wm8aIvV6PU5PT39LBKHFYkEikUCv11t4Esn7xcW8vm1CDaJSdGM2m9FsNuHxeHB4eEiSy2w2OzZyjgnhzuVyyOVyOD09HXujJAYhiVbE94hEIuSN+jWI5tP3uyjVahUcDufD+VYulz8o9u/zuQFqfm7gl+2j3+9/WCiPewyVSkWW8hAwGAy4vLz8kIVtsVhwdXX1wcOs1+uRyWSQzWY/LIRMJhOKxSISicTYnYSVlRU4nU48PDzg9PR0LOmiqnhzOBw4HA4kk0lcX1+TDarFYhHpdBpHR0djPxMcDgebm5tQq9Wk6r29vU17oarX66HVapFIJHB5eQmTyYT19fWFkLDV1VWsrq6i0WggkUjg+/fvWFtbQ6fTgdFo/DSyyuFwoNFooNFo0O/3USgUkE6n3xTwUB2AJkBEuP7uFsd5/OBEVODvjCtkwYIl3f9gKJVKFAoF8Pl8kmS3223y5mC1Wpfil14kNBoN8vk8JdLd6/Xw/PyM5+dntNtt6PV67O3tfcqA0SQMh0OSyA4GA2xubi7MLvP6hkg1b3saCCUol8thd3eX0vPc3t7G/f09wuEwut0u2u322Ki59yDSJaYR7kqlgnA4PLb+nUA8HodAIBibCPHy8oJarfamDp3Ae5X5Ncl/f/yGwyEZlTaLdL8urplFjPh8/oefJ4Yp35PuZDKJ9fV18msikYi0o7yO/SP8qplM5sPrI+redTrdB+LhcDhweXkJtVo99vOiVquxvr6O+/v7iVGNVIk3APLac39/j83NTcRiMbhcrpmLYoVCgbOzM4TDYfz8+RNOp5M2geRyuWSedyQSwY8fP2Cz2cbaZ5hgZWUFe3t75GwAYVd6P+T6KTdMPh9GoxFGoxGdTge5XA7BYBCDwYAs5qHynJ6fnxntmC0bdPLBK5XKH1k2xILFnwzWXkLnYPF4CIfD6HQ6kEqlMJvN2N7ehl6vh0Kh+KNawiZBLBYjGo3CZDKNveAPh8M3Fc5E7ffOzg7UavWnboW+J1+pVAper5dcABHDmosk9PF4HIFAAGq1eq60k0ajgbu7OwDAwcEBZUWLSMoJBALg8/lTfdmvCXetVptKuNvtNu7v77G3tzdRsa9Wq4hEIjg4OPhAAkejER4eHmCz2T7caIm2SofD8aHEwu/3Y2dn583zKpfLaLfbHzLj0+k01Gr1m4UrsXs0rlnxfTZwLpeDWq1+Q7Dr9TpGo9Gb1ywUCsm5gPefgUKh8GFAUiKRIBwOw2w2v/l5Ylu+Vqt9GCQj4ueCwSDW1tbGftYUCgVZWDOJoFK1mgC/bBkKhQI+nw+rq6tvFhWzSLNGo4FEIoHP50O/38fq6iptQkjEmyoUCsRiMWSzWchksoVdM/h8Pmq1GsRiMSQSCYLBIPn/f8d1ic/nQ6lUkpbBWq2GcDiMfD6P4XAIiUQyUQUOhUKwWq1/RFnZLBIul8uh1+thtVohl8vR6/XIXc+NjY0/uqKeBQuWdP+NIRQKkclksLe3B51OB5FI9LfLJn2dYvL6Ylkul0nC2e/3YTAYsLu7C71eP7d3cR60223EYjEEAgGIRCIyiUSpVCIUCr3JV54Hi/BtEyD8/Jubm5TjDV+TRI/HA71ej2q1OjOPmQrh7vf7uL29JS044zAYDHB/f4/t7e2xC42npye0223YbLYP3wuHw+TC8zWKxSLa7fYHP3Ymk8HKysoHRTUSiWB9ff3N6ygWi2OHM8eRbmIH5/Xx6nQ6qNfrb9RrLpeLcrn84TMgFosRCoVgMpne2COEQiHK5TJGo9GHxZNCoUAgEBg7YEfEjE4bXlar1cjlcqjX6xPjSKkS7+FwSC4Ym80mKpUKrXpuqVQKo9GIbDaLZDIJpVLJyB5H+L25XC4CgQDq9ToUCsXcNoR+vw+fzwen00mm7vR6PYTDYRSLRQiFwt9GAIn5BIvFAolEglKphFAohEqlAg6H8+Ya2mg08PT0BLvd/re6f7z2g+t0Ojw9PbF+bhYsWNK9XDSbTfT7fdpbsH8SiOhCkUhEDkQSGeTEsOfKyspvvZjW63WEw2FEo1EoFAo4nU7o9XqSYBORbqVS6UMLIB0QNer1eh0OhwMWi4XxcFa73YbH40G73cbBwQHtZIJCoYDHx0dsb2+TqtLj4yNWV1fHKnnBYBD1eh2Hh4cTCQ2hUCuVyolJJcRjicXisepov9/H4+Mj9vb2PpCwZrOJWCyGvb29DwQiGo2SEZjvyfV7X3i/30cikfhA6p+fn8fmfo8j3aVSibSJvH79uVzug6re6XTQbDbfEF0ul4t6vY7hcPhh4UEUZL1fQPB4PIxGo4lqtUqlQjgchlQqHUsICb9wNBolS3aYEu/Hx0fw+Xxy4DafzyOTyUCj0VAmvDweD3q9nizh4XA4jGcZZDIZ1tbW0Gg0EAgEyChFpkQzkUiQhT3EsVMoFDCbzeByuYjFYnh6egKfz4dUKv0thJYg2ERcH5fLJZtjm80meDweSqUSJBLJQjsfPhvlchmdTue3NhyzYPF3xD9iiUo0yL2/yL7++uvvTfo6FRB16n9XdDoddDodZLNZUtk9OjrC6ekpzGbzbx/8fHl5wf39PTweD2QyGb59+4atra2xz8tisaBYLJKZs3SPg9frxePjI8xmM05OTuaKPctms7i6uoJWq8XR0RHtbeNkMolQKISDgwPS3kBESz4+Pn54jVQIN/FzXC4Xdrt9KtmvVCrY3t4e+/1YLAatVjvWv5lMJknS856ov7y8fLBqdLtddLvdD+RynJ8boO7pBn6pjeNiA5vN5lgyPO5zbDAYyPbM9597Ho9Htmi+Pw/r9TpeXl7GkliHw4FAIPDhuRHg8/lwu92IxWJTry2vPd7v/1YgEMBgMCBzq7lcLukDv7q6GnsMpsFoNOL09BSFQgF3d3fodDrMVB0eD1tbWzg9PUW9XsfFxQXy+Tztx+n3+8hkMmMXhcRg9/n5Oba2tvD09IQfP34gk8mQMyC/5ebK5ZLFYF++fIFcLkc0GiWHwBuNxt+adLPZ3CxY/AeSbg6Hg9FoRP57T6Jff4/K12dBpVKhVqv91os5kxvW09MTbm5ucHl5iX6/D4VCgY2NjYkpFZ8JoqL+6uoKwWAQOp0O3759g9VqnUoo+Xw+TCYTwuEw5b81HA4Ri8VweXkJiUSCr1+/Mh6UJEjhw8MDmRQxLj981mv3+XzI5/M4PT39QEYNBgPW1tZwe3uLer1OEqxGozGTcKdSKdRqtbENiK9JcDAYnJjz3Gw28fz8/EFVJhYuhUJhbATl8/Pz2NjGcrk8dgdgEummml4C/PKfdrvdD6RPIBB8WLTI5XJ0Op0PRJiwZrTb7Q+Pb7VakUwmx5Irm802Mcd/dXUVer0ewWBw4nOXSCTY39+Hz+ebSpDHEe9wOIxarTa2OZSwON3c3KBUKtE6N8ViMY6Pj7G6uorLy0s8Pz8z/pyIxWLs7+/D6XQikUjg5uaGPJ+pIJVKkb7zaVCr1Tg6OsLe3h7K5TL+/e9/Ix6Pf0i2+WwIhUKYzWbYbDYIhUIIhUJ4PB78/PkTyWSS8aLmd4ojdJX6SSk6dAQzFiz+7vjbp5dMIs0EGaf6dToXT4lEgmq1+inFBvMcl2KxiFwuh5eXF6hUKlitVtLj+fz8jEwmQ6lGelkYDofIZrNIpVIQCoXY2NignURitVpxcXGBl5eXme9HLpdDNBqFUqnE2dnZ3MNXxWIRgUAARqPxQxYyHcIuFApxfHw80c5DRLB5PB4olUp0Op2xw47vn1sqlZqYjEHA7/djbW1tosofCoWwsbExVm1OpVIwGo1j7Ti5XG6snaVUKo1VyOr1+thhUzqkm4jDfA8iweQ1YeNwOOSu1WtbCIfDgU6nw/Pz8wdVVafTIRqNfijFIb6XyWTw9PQ0dst9c3MTV1dXY9NcCCiVSmxtbcHj8eD09HSizek18dZoNKhWqzg+Pp7483q9HmKxGA8PD1hfX6ed07++vg61Wg2v14tisfhhMJYOiM/e09MT7u/voVarJ+5kvRYNMpkMTk5OKP8dhUIBl8uFZrOJZDKJ79+/w2AwfHou9rjFqNFoxObmJmw2GyqVCnK5HC4vL7GyskIW8PzJMXzdbhf9fp+WWDOJcL++F7////Pcp1mw+FPxj56AoLKKZoI/2WJSqVQQCATw119/IZ1OQ6PR4F//+hf29/eh0WjI16zValGv18cqestGv99HPB7H9+/fUS6X4XQ6cXx8zCj6j8fjYXNzE/F4fOLPVKtVXF1dIZPJYH9/H3t7e3PdeAeDAfx+P0KhEPb397G1tUX7XGo0Gri6uiIJ1Cz/vMVigUAgQKFQmJmnXK/X4ff74XK5pr7OTCaDXq830etdLBbR6XTGxgf2+31ks9mxyn6r1UK73R5LrokF4LjjMa+9ZFwr5WvS/R50LSbEIm+c2g38ihCMxWJjVVUul4u9vT2Ew+Gpnzmj0QitVouHh4eppIPoAsjlclhfX595jBQKBU5OTvD09EQ2ctKBTCbD2dkZBAIBfv78Off1b21tDV+/fiUfj8jbHweqKvc4SKVSOBwOfPnyBVwuF5eXl/D5fL/F2kEkQ71edCmVSuzu7uJf//oXzGYzisUi/v3vf+Px8RHFYvGPJJ7EHA3Vax5doWteYYwFC5Z0fyLJJj6sr+0jr20nk77+dybdzWYT0WgU379/RzAYhEQiwdnZGY6OjmA0GscSNCImbJ4tY7rodDoIh8P4/v072u02jo6O4HK55q6QNhgM6HQ6H96TRfu2iUXNz58/weFwcH5+zmigtlQq4fb2FltbW2NtG+Pg9/tJf+z9/f3ErflutwuPx4Pd3d2pcYfTBiCJz0k4HP5QFkMgnU5Dq9WOJfXjat+JxQARpUeFdPf7fXC5XMoDvUKh8IO9hAnpVigUZF32uHOtVquNfTyZTAaNRjNxAbiysgKr1Qqfzzf1ddhsNvD5fAQCgYk/Ew6HUa1W4XA4EA6Hx/rJ30MsFuPk5ISMj6RrueByudje3obD4SAXnfPY7Hg8Hmw2G05OTlCtVnFxcfHBM99utyd6uelAKBTCZrPh69evWFlZwd3dHTweDyqVyqeS1UkDtVwuF1qtFi6XC9++fSOz5P/66y8yoehPAV0/NxMCzVpLWLCk+29EuJcNlUpFph/8LnS7XaRSKVxeXuLu7g6j0Qhutxvn5+eUt1DX1taQzWaXftwajQZ8Ph8uLy/B4XDw5csXOByOhXnJORwOtra2EAqFMBqNFu7bJm4ckUiETBfZ3d1ltAWcSqXg9/vhdrspl4f4/X4yEcVisZAFOu+J1nA4xP39Pcxm89REF8JHvrW1NVE9TKVSWFlZGXtzHQ6HSKfTEzPSJ1koJt2s2+02+Hz+B8sCHWsJQF/pJl77uEFcvV4/dkHK5XJhNpsnqt1bW1vI5XITh3utVitZWT8NTqcT9Xp97M8FAgG8vLzg+PgYBoNh4nDlJKLrdrshlUpxfX3NaKdLpVLh/PwcvV4Pl5eXtLzZ4yCRSOByubCzs4NYLIbb21vy/YrH4zCZTAuLAuTz+bBarfj27Rs0Gg38fj+ur6/HDsguGlTtfHw+H2trazg+Psbp6SkEAgF8Ph9+/PiBeDz+W3YnX3/2J+1WLQqLEMZYsGBJ9ycT7kkf1EV8gDkcDpRKJaWb3CIxGAyQy+Vwd3eHi4sLNBoN2O12/Otf/xpbWjILq6urGI1GS3sdRBLJ3d0dVlZW8PXrV3KQaNHQ6XQQCoUIBoP48eMHWq0Wzs7OsLm5OXf0IWEFabVaOD8/Z2SDGY1GCAQCyGazOD09pay4vybcBMnX6XTY29uD1+tFNpslf9br9UImk80sDIrFYhAKhRPjvrrdLpLJ5NhMbuBXZrdSqRy7aKpUKuDxeGP92ZNI9zQ/N50M9klKt1QqRbvdHru4nGYxeX5+Hvs7JpMJpVJp7PAbUdg0bbjX6XQimUxOtTgQ5DidTqNYLJKE5+HhgdwlIo7NtFSTSdev7e1tmM1mXF9fM1J7+Xw+9vb2sLGxgbu7OyQSibkX7yqVCmdnZ9DpdLi7u8Pj4yMKhQLt4WRKNz4ul7S4WCwWJBIJXFxcLE2EaLVaqFarH9J8ZkEsFmNjYwNfvnzB3t4eer0erq6ucH19jUwm8+kDokR3AJvNzYIFw4X/P4FwvyfT41bIr20n477OhOSlUqmxftdFr/rL5TJyuRxKpRKUSiXW1tbgdrsXcuGzWCzIZDILVS7y+TySySQGgwGsVivcbvfS1YpqtYput4tqtQqXy7WwDNxkMkkSUKZDp/1+n4xnnDXY+Bo+n48cmnz/Xq+uruLw8BAejwedTgeDwQD9fh/7+/tTH7NSqSCbzeL8/Hziz0SjURiNxrHq4mg0QiqVmvh3Jqncw+GQfG/GLWom+bnpLNCIzOzhcPjmeHE4HIjFYjSbzQ9/R6VSIZ/Pf/gcSyQSiMVilMvlD+cSUQWeTCbHxixaLBY8PT1NXGSIRCLY7XZ4vV6cnp5O/ByLRCK4XC7c39/D5XKRi6VxSTN0KuNfLx4kEgkeHh5gt9sZ7Qbp9XoolUr4/X6USiU4nc65WhY5HA5MJhP0ej0uLy/JDPT3baCLXrDrdDq8vLwgmUwiFovBbDbDZDItbKDx6elp4tAxVcjlcsjlctjtdvKeEI1GyXQcjUazdDKcy+VoLxwWIaKxYPFPwd9+ufp+K+r99PMi4wJfQ6vVjo0cWxRqtRpCoRD++usvxONxKJVKfP36FW63GzqdbmEXV6PROFG1o4PhcEjm46ZSKayvr+PLly8wGo1LJdyvfdvr6+vQ6/UL2Sput9u4vb1FsVjE6ekpY8LdbDZxdXUFuVwOt9tNi3B3u92xhJvAysoKjo+Pkc1mkc1m4XK5ph7rwWAAn8+H3d3diQpyrVZDqVSaOFz5/PwMiUQy1i8+blDsNdmXyWRjX/8i4gIJjIsNJI7VJF83UTX/HtMGKi0WC3K53FilkcPhwG63k3ancTAYDJBKpYhGozOJ1ubmJrlbNCna8T3xprp7pVKpcHx8jHg8PvO5TIJIJMLh4SG0Wi2urq7e7L4wRblcBp/Px8nJCcrlMi4uLkjFf1lYXV3FwcEB3G436vU6vn//jmg0OvZ8onttzOVyC0uK4nA4UKvV2Nvbw7/+9S9otVo8PT3hr7/+Iq1HywKVlCg69+7X3u33wtj7r7NgwZLu/2AQFhMmRQ+T0Gq1EI/H8ePHD/h8PggEApyenuLk5AQmk2khdefj1EG9Xj+RXMwC0ST4/ft3FItFOBwOnJyczNUSSfVGNs63bbPZUCqV5ho8Iopu1Go1jo+PGSt35XIZt7e3WF9fn2jVmEa4qexmtFotDAYDyGQy+Hy+qdvNwWAQKpVqqj0mFArBZrNNJHbJZHKifaVYLEIul48lytOGrxZJuscV5Ewj3QKBACKRaOz5otPpUCqVMBgMxv4drVaLdDo99nloNBqIRCJkMpmJz3VnZwf5fH4qSSoWi4jFYlCpVKhWqzMJCBPiLZVKcXJygkqlgsfHR8bDkRaLBcfHx0in03h4eGAsSAyHQ4TDYezs7GBlZQUHBwfY3t5GJBLB/f390mdpZDIZ9vb2cHp6isFggIuLCwQCAUYlXMD/DFCOs1At4vptMBhweHiIL1++QCKRIBwO49///jei0ehCj9XLywvEYjFje+C4c3eZwhgLFn8i2Br4OVfq2Wx2LgWj1+shl8shFAohlUpBLBaThRarq6tzbUdSxcrKCkKhENbW1igr6J1OB/F4HH6/H0KhELu7uzCbzXNtLVNFLpcj7Roul+tNfBWPxwOPx0M8HofBYKClsvd6Pfh8PpTLZbjd7rkWDplMBuFwGPv7+5Qfhxhw7PV6lAh3s9mEx+PB/v4+NjY20G63EQgEoFQqPwzS5vN55HK5qVafXC6HarWKnZ2diQSwWq1OXEBEo1Ho9fqx5CISicBsNn94XsPhENFoFHa7/cPzen5+hlQqHauqj6uBB361a0ql0g9+836//yGT+/XCpdfrfUii4fF4qFar4HA4Y1+TVCpFKBSaaH2QyWRkDvq495LH40EqlZJZ7+9/JpVKIR6PY39/H+vr66hUKsjn8zO396lUxk8ib+VyGclkklZ1/PtFzOvq93HvxSzE43GIxeI3MwcSiQQmkwn9fh9+vx+dTmfp3mI+nw+1Wo21tTU0m00Eg0HUajWIxWJakaPE0PKyr408Hg9KpRImkwkqlQr1eh2RSAS5XA7D4RBisXguu0wikYBKpZqaisSCBQuWdC8NEokE0WgUJpOJ1sV/OByiUCggGo0iEomQiQg7OzukQvaZEAgEqFQq4PP5M2+QjUYDkUgE4XAYMpkMTqcTBoNhKSr8e1SrVTw8PKBer8PhcMBisYxdlMjlcuTzebTbbcpbocViEff396RSOI+aEw6H8fz8jKOjI8rqFl3C3ev1cHd3h83NTZLUK5VKiMViPD4+kjsxwC/F+OHhAS6Xa+KNfzAY4OHhAQ6HY+L55/f7YbVaJ/qvI5EIdnd3Pzz3Xq+HeDw+Nn6wXq+jWq2OnY3IZrNYXV0de05OIt0vLy8QCAQfjjuHw0EqlZo4lDdp+5/D4SCbzY61zAgEAlSrVQwGg7FERCgUot1uo1KpTJwxkEgkaLVaKBaL5PvY7/fh9XpRqVRwcHBAvha1Wo1MJkPpvGZCvDkcDrRaLfr9PgKBAFZXVxl9DjgcDlQqFRQKBQKBAJrNJlZXVyldIwmiOM5Gw+FwoFAoYDQa8fLygmAwCC6XC7lcvlQLG4/Hw+rqKkn6Q6EQisUiRCLRzFSVZrOJXC4Hu93+qdd0oVAIlUoFi8UCqVSKcrmMUChEDs1KJBLaC5ZQKITNzc1PudazYMGSbhZjby6NRgPD4ZASuSqXy0gkEggEAuj1etDr9djd3YVer4dEIvmt0Ug8Ho9sGByHSqWCUChEqmB7e3vQarWfosR3Oh0Eg0HSK769vT1zYSKTyRAKhaDVaqfeJAaDAUKhEDKZDPb29rC2tsb4fej3+3h8fES/38fh4SFlwkIQ7n6/T4lwj0Yjss3vvdVDKpXCYDAgHo+jUChApVLB5/NBp9NNjSiMx+MQCAQT2worlQqen5+xu7s79vvZbJa0Ko1b0AyHw7HfK5fLGA6HY3cDUqkU9Hr92Pd6EumuVqvkAuQ9QSYG5N4fX6FQiHA4DIvF8uG9J7brJ+Xdi8VihMPhiWq3QqFAMBiERqOZeB6qVCpySLLf75PNo/v7+29+h8PhQKPRIBQKQSgUzkwrYkK83y/eJBIJ42hPQq0ulUqIRqOQy+UzP7derxdGo3HqYDePx4NGo4FarUY6nUYymZyYf71IcLlcKBQK8r2OxWJ4enoixYpx738kEoFKpWKU578oiMViaLVaWCwW8Hg8PD8/IxwOo9lsgsvlQiwWz7zmVatVVKvVmclILFiwYEn3UtHv96cOydTrdaRSKfh8PtRqNahUKuzu7sJkMkEmk/0x0UtSqRSZTIZMbSBQKBTg9/vJ+mKHw0FZtZoXw+EQ8XgcgUAAarUa+/v7lLc2CcIbj8cnDnNWKhXc399DJBLB7XbPddMmBi/lcjmcTifl4zMajeD1ejEYDOByuSj9nt/vB5fLnUiAiXSNer2OQCCA0Wg0taa+3W4jGAzC5XJN3H4OBoNYW1ubePxDoRAsFsvYY5hKpaBUKsf+bi6Xg0QiGUtK4vE4zGbz2IXdJNLdaDTQ7XbHKsuFQmEs8eNyuSiXy2OVSw6HQ9pPxsU8ikQiFItFcLncsSSYx+OBy+Uik8lMTAchFNyHhweyZn0SiefxeFCr1Xh8fBxrI1oU8ZZKpeSCbTQaMSaNROmLSCSCz+fDYDCAUqkc+9pSqRQ6nc7EQqZxn3GDwQCxWIxQKIRyuQy5XL50JZawG5lMJojFYqRSKSQSCfIcIJ57q9VCLBajdT1Y9vNeWVmBXq/H2toa+v0+MpkMYrEYOT8xSShgrSUsWLCk+48AoYTp9XqSHHQ6HWQyGQSDQeRyOchkMtjtdqyvr0OhUCwshmoZSk42m4VWq0U2m4XP50O9XofVasXOzs7St3Hfk7FJvm2qUCgUSKfTGI1GbwjTaDRCLBZDNBrFzs4OrFbrXDdFgrxbrVZsbGxQfp5MCHcikUClUpkZw0jE5GWzWXA4HNTrdSgUirEE1u/3Q6fTTbRA1Ot1pNNpOJ3OsX+z2Wwik8lM9IJP25ZOpVLQarVjyXo0GsXW1tbYvzmJdLdaLTQajbHKebVaJe0I70GUXY07Bnw+H8lkcmI8qFAoJEtcxkEulyORSEAsFo9VjRuNBmmVEIvF2NramnoOCAQCrKyswOv1QqfTzdxtYkq8hUIh9Ho9YrEYqtUqNBoN488/sQPz9PSEdDoNpVL55nxot9vw+XxwuVy0SbNUKoXJZEKv14Pf70e32/20LGmJRAKj0QiFQoFcLodIJELufGazWYhEoqUPlTO68fN4UCgUWFtbg1arJVuNn56eMBgMIBaLyfNqOBwiFAphZ2eHzedmwYIl3b+fqLZaLbTbbbRaLUQiEcTjcYhEIqyvr8Nut0OlUv0tfHDENjtRurC1tYWtra2FNUdSAVXfNlVlh8gQ1mg0EAqFaDQauL+/x2g0euOXZYpsNotgMAin00m5YfI14R4Oh5QJdz6fRyKRwNHR0cxjQlhQNjY2sLOzg5eXF4RCIdLvTJCnl5cXPD09TayDB35Vjmu12olq57T2ymaziefn54l19+FwGJubmx8WooQKNym6cBLp7na7KJfLY1Vl4jM6jlhzuVyk0+mxxFksFpNK3zglUCKRIJPJQCwWj108cDgcSCQSRCIRmEwm8jgTCTyEPWV3dxfZbBbD4XBmeRLhyY1EIjAYDDPPH6bEmxiwzOfzyGQyjAcsicciPiM+n4+0awDA4+MjjEYjo+Ip4hgTfu9SqYRQKAQ+n//mXF8mRCIRmZVdKpUQDAZRrVY/ZYByXggEAqyursJisUAul5NWwlKphNFoRO70TCrTYsGCBUu6P101IJSqtbU17O7uQqPR/PEX29dEhbBxiEQiKBSKqUN3ywAT3zbVhcRoNEIikUC/30cwGMTGxsbUWDyqiEQieHp6wtHREa1tVyaEu1arwev14uDggJINhshcttls4HK50Gg0UCqViEajyOfzUCqV4PP5eHh4mNpm2m63EY1Gsbe3N/F5+v3+iU2jz8/PpAd33HmXyWTGkud2u41isTjRYz6JdA8GAzw/P48lz4PBAIVCYawVTCgUIhaLYW1tbex50e120Ww2J3qNeTze1JpviUSCUqlE2lRKpRI8Hg+5k7O6ugoOh4PV1VX4fL6pHnACCoUCjUYDT09P0Ov1M8klU+LN4XCg0+nQarUQDofnFhHkcjm0Wi3i8Tg58Nzr9cYm2DC5Fms0GqhUKqRSKaRSKUil0k+7lgkEAlLZ7nQ6yGazaDQakEgkS2niXcbiQaPRkGJHsVgkS+CotuiyYMFiMti9ogVApVJBJBLBarUyskH8LjSbTfj9flxcXGA0GuHs7AzHx8d4eXmZuyyHKiblbS8SRqMR7XYbmUxmrqKb1+TN4/GgVqvh9PSUlhd8NBqRWcizymxeL0iIZBEqyvzLywtyudwHz7dSqcTZ2Rm0Wi2ur69xd3cHPp8/dfubsFVMWqAQaSGTSHupVKKdzw3Qb6N8TXomlZlMyuomiOXq6urYSnhgelEO8KuZsd1uT82Ht9vtiMfj8Hg8CAaD2N7ext7e3pvXKZFIsLW1RXqpZ2F7e5tMzKECJjneBLa2trCxsYGbm5uJx4kqJBIJjo+PIZFIyBzyRV43ZTIZjo6OsLm5Cb/fj4eHB7Tb7U+7pmUyGezv7+Pr16+QSqW4u7uDx+Mh00P+dBBJNoSlhM4uHgsWLFjSvXQYDIaFNLF9BiqVCjweD25vbyGRSPDt2zfY7XaIRCLw+XwYDAYkk8mlP49cLocfP36g1Wrh7OwMm5ubC/cM5nI5XF5ewmQyYTQazX3j7XQ6uL6+hlAoxOHhIS3rC0G4R6MRZcI9GAxwf38Pi8VCaeudyDF2OBxj1Ugul0uWmFSrVTSbTSSTybEFMN1uF8/PzxPVZuL4TlokjUYjVCoVRqSbSTEOMLkch/ge8diTFs+TyOTKygoEAsFEosrhcGCxWCZ+bvr9Pmkd6Xa7OD8/n+ihX1tbI33iVMjR/v4+yuXy1CKeRRFvg8EAl8sFn89H+e9NI6flchkWiwWZTGZmuRMTaLVafPnyBXK5HFdXV4hEImPP9UXi6ekJIpEIUqkUfD4f6+vr+PbtGzQaDfx+P66vr5ferrkoZLNZqNVqNiaQBQuWdP95pLtQKDBuc/sMFItF3NzcwO/3Q61W49u3b1hfX/9AHC0WC56fn5emdlerVVxdXZFq0N7e3sKzyXu9Hh4eHpBMJnF0dIStrS04nU6EQiHGN13ieRMWIjrKHEG4AVAm3MTvKJXKifnS7xEMBqFWqycSOgKEFeLw8BC1Wg0XFxcfyHc6nZ6awU7kzU9SwSqVCkk8xqFer09U7rvdLqMbPYfDAY/Hm0jepqnd00g38Rmfpnavra3h5eXlTXNhv99HLBbDxcUFhsMhTk9P0el0Zi7+dnd38fT0REYgTgOfz8fBwQHi8ThlBXoe4q1UKnFycoJ0Oj216p7KuSqXy2Gz2XB2dgYej4fLy8uF15hzuVysr6/j/PwcvV4PP378WJpAMhwOkUwmP3xeCevh169fYbFYEI/HcXFxgWw2+0e3Lj4/Py9855EFC5Z0/0PB4XDIf5O+/vp7k36eCoiovefn5z/qGBCtmRcXF2QE29evX6cW+giFQhiNxoWr3Z1OB16vF4+PjzCbzTg5OVmKT7BYLOLnz5+QSCQ4Ozsj1VSiAp3qVvz7m4/H44HD4Ziq/M4i3NOi+94jHA5jNBphe3ub0s/n83nU6/WZRRyNRgPPz8/Y2tqCTCbD/v4+HA4H8vk8fvz4gWQyiW63i6enp6lkv1AoQKFQTFSky+XyVPK/DKWbOH+ZWEwIm9Ckum+9Xj91Yc3lcmEymZBMJkmy/f37d9TrdRwdHWF7exsrKyvY2NhAKBSa+Rp2dnbImL1ZEIvF2N/fh9frpVz9PQ/xFovFODk5IVtR6S5kc7kcyuUyGQ/I5XKxs7NDvuZwOLxwAUMoFMLhcMDtdiObzeLy8nLhdo+np6c3vu5x0Ol0OD09xc7ODp6fn/H9+3ekUqmlK/BMRIZOpzM1M50FCxYs6SYJ9Gg0Iv+9Jzqvv0fl56lgbW0N+Xz+j3j9g8EAyWQS379/Rz6fx87ODk5PT2dWSBNYpNr9Gb5t4jUHAgGEQiHs7+/DZrN9eB83NzdRr9fx9PRE+XGj0Sii0SiOj49nKsjjCPfDwwNtwp3JZFAulyn/DjGIOm3g8TWZ39jYeKNAq1QqnJ6ewuFwoFwu4+LiAiKRaKraPM1aQpDuSTfs0WiEZrO5cE838MvXPcliMo10E8dhklosFAohl8unWgN0Oh1JpOr1Og4PD+F2u98kAK2traHX66FQKEx9HURiDNVFolKphN1uh8fjmfj6F0m8CYVdLBbj+vqasnWr0WggFAphb2/vw/mlVqtxfn6OTqeDq6urqe8VU8jlchwfH2N9fR0+nw+Pj48L8XsTKvf6+jqlz+zq6ip5ftRqNXz//h3RaJTye7ds5PN5RmVhk35+3NfnEbpYsGBJ9x+ESVt2BLleBvR6Per1+qcN7IxDt9tFJBIhb/putxsHBweU69BfE4xFqN2f4dsmVJnLy0uMRiOcn59PjLcjPLCxWGymIjgcDvH4+IhKpYLT01Pa0YkE4eZyubQId6lUQjwex8HBAWXPuM/ng8VimTloWSgU0O12J2ZKq9VqMgNcLBbj+/fv8Pv9H9TfbreLarU6UdHr9/totVoTdzJarRZEItHEc+F3KN2zSDcw2WJSr9fh9XrJOQmDwQC32z021YbD4cButyMSicy8Fm1vb6NcLlP2ABsMBuh0Ojw8PFC+zs1DvDkcDnZ2drC2tobr6+uZdpjhcAifzwer1TrxmsTn87G/vw+r1Yrb29ulzZfodDp8+fIFKysruLq6QiwWm0ttpqJyj4NMJsPe3h5OT0/R7/fx48cPBIPBiTsun4HhcIhcLkdZpGFKuOcVuliwYEn33wDLWl0Tvr3fMVDZbDYRCATeeEf39vbmyqGeR+3+DN82QWyj0SgZfedwOGZGAYrFYlIRnLRAIgYmeTwejo6OaPuLh8MhSbinZWC/R6PRIEtCqMacpVIpjEYjrK+vz3xOkUhkZjRbLpcjYyMJe87t7S1ubm6Qy+XIWD6tVjuRNJfL5YnNg8TrnFZjztTTDcxWuqcttlQqFV5eXiYSVq1Wi0qlgl6vh36/j6enJ9zc3MDr9UKpVOLLly9wuVx4fn6eSuBUKhVWVlaQSqWmvhYejwen04lAIEBZAd3a2oJQKEQgEKB8zOYh3gBgNpvhcDjg8XimWuwCgQAEAgGlOnGDwYCzszOUSiXc3NwsRczgcrnY2NjA2dkZ2u02Li4upvr2p3226Kjck65LOzs7+Pr1KwQCAa6vr/H4+Dg1EWdZKBQKkMlktO4fkwStZQpdLFiwpPsPJdnEh/71ynoZq2uj0Yh8Pv9pFxmiTOb29hYikQjfvn3D9vb2QnJphUIh1tbWEIlEKP/OZ/m2iYUGsQV9fn5OS2HS6/Uwm81kmshr1Go1XF9fQ6/Xw+Fw0D5HmBLuXq8Hj8eD7e1tyses0WggkUjA6XRSIueTSmxeL2KSySRJikQiESwWC75+/Qqr1YpsNosfP34gkUhMvSFPs5YA04coiWMxj71kktLN4/EgEAgmqogCgQAikWgi0eHxeJDJZHh4eMD3799RLBbJIT2TyQSBQACxWAyVSjUz3cNms5H++WlQKpUwGo20SLTT6USj0aClEs9LvNVqNY6PjxGNRhGLxT58P5PJoNFo0PpMiEQiHB0dQaPR4OrqihEhpvp3nE4n9vf3kclkKKn2r/H09ASpVLqQ9kmBQIDNzU18+/YNCoUCDw8PuLu7mzumkQ5yuRzl4e3X1w46X2fBgiXd/3DC/RkQi8UQCoULn8B/DyKJxOv1QqVS4du3bx98uovAxsYGKpXKTLXls3zbrwnkzc0NzGYz3G43I1XUbDZDLBYjEAiQ50g+n8f9/T22t7cpqXGTCDePx6NFLobDITweDwwGA+VM3OFwCK/XC7vdPnOR1e12kUqlZg5ZFgoFCIXCD/YcomDn6OgIu7u75IDuv//9b0QiEdRqtTefs1mkm4rSPY+9ZJoqTMVi8vrzOxqNUKvVEIlE8Ndff5HpI2dnZ3C73VCr1R/e5/X1daTT6anXHqJCnCgymobNzU20223Ku2hcLhdutxvpdHqmd3yRxFsqleL09BQvLy9kHj3wK889Fothf3+f0WfVarXi6OgIyWQSj4+PS/M9KxQKnJycwGQy4fHxEV6vd+ZOH6Fyb21tLVTE4fF4sFgs+PbtGwwGA8LhMC4vL5cu6rTb7alFUCxYsGAO/j/5xY0j3J9BwtfW1pBOpxd+0RqNRnh+fkYymQSHw8H6+vrSy3i4XC6sVitisRgODg4mqiLRaJQsX1mGjYRAp9Mhi0NOT0/nVvSdTifu7u6QTCZJInl4eMjIlkMQbj6fD6fTSet98fv9EIvFE+vSxyEajUIqlVJa3EQiEaytrc08XolEAltbW1N/plKpwGQyYWtrC81mE/l8Hn6/H71eD2q1GmKxGMPhcKoHfhrp7vf7ZKIFE0yzl7wm3ZNUSZVKhXg8DqFQiEqlgmKxCJFIBK1Wi+PjY4jFYvz73/+eeh1ZWVnBysoKcrnc1DKmjY0N/PjxY6byz+Fw4HQ6cXt7i9XVVUrnvVAohNvtxt3dHcRiMeVz+jXx3t/fpz0PIhAIcHh4iEAggJubG+zs7ODx8RG7u7u0iqTGHdPT01Nycb+7u0t7sJkqDAYDtFotkskkLi8vYTabYbVax56TT09PkMlktFpp6d7HDAYDDAYDisUikskkIpEIrFYrjEbjwmdkMpkMDAYD67FmwWIZnOqfTLiJ/772bxOWEuLfa9vJuK8zgV6vR7PZpBzdNQuDwQCpVArfv39HLpeD3W7H2dkZdDrdp1wYTSYTut3uh2SWz/Jtvyb3l5eX5Db2Iiw0XC4XTqcTiUQCuVwOJycnjAm3x+NhRLhjsRja7TYcDgfl33l5eUE+n//QOjkOtVoNLy8vMz3fpVIJo9FoKpEZjUZvUkukUik2NjZwfn6Oo6MjyGQyFItF9Ho9XFxcwO/34+npCY1Gg/xMDQYD9Hq9iQRsHmsJQTanWTbGKd2tVgu5XA7BYBDRaBTVahX5fJ5sTjw7O8PGxgYkEglZiz4rHtRqtc60d/B4PGxubs6MECSeN5G4QRUymQy7u7vweDwzbSyTiDcTxZv4XKnVatzc3ECn0y3EesHlcmGz2eB0OhEMBhEMBpfWjUC8N6enp2g0Gvjx48eH97zX6yGVSmFjY+NT7msajQbHx8fY29tDuVzG9+/fkUgkFlYqNBgM8PT0xGZzs2CxJPxjle5ppPkzvGdEQ6XNZmP8GN1uF+l0Gk9PT1CpVHC73XMNRs6zgNnc3EQ0GoVWqyUTUiqVCra2tpZ+ge71eggGg2g2m4xV6GnH2Ov1YnV1FbVaDf1+nzbhIwi3QCCgTbifn5+Ry+VwenpKWbHq9/vw+XxwOByU7EShUAhbW1szB0yJQbBZZJ9o23sPqVQKqVSKl5cXmM1mSCQSkvATxIDI9RYKhajVapDJZB+O1zzWEmC20s3j8VCtVhGPx1Gv11GtVsHhcCCTyaBQKMi6drPZPHEBYjAY4PV6p5Kt1dVV8Hg8FAqFqYRzbW0NmUwG+Xx+ZlqExWJBqVRCIpGY+V4R0Gq1aLVa8Hg8OD4+pnyezat4A792NORyOfL5PFQq1UKIN/Hczs/PEQwG8fPnT+zt7S1NaSYy0CuVCkKhEDKZDOx2O+RyOZLJJDQazdL+9iQQg85Eo+z3799hNBphsVjmEj7y+TxWVlbm2pGgc49+/dlnvd8sWNLNgjGMRiMuLi5gtVppexhbrRaSySTy+TwMBsNCbBSLUFjS6TTu7u7QaDRgMpngcDiWEv/3GqVSCYFAAHq9Hk6nc6F/r16v4+HhAUajERsbG2QBztHREeUbF0G4hUIhpWHG1yBu4sfHx7TOkUAgAK1WS8m+RAyezVoYVatVtNvtmaQvm81OfazRaISXlxfs7u5CIBBAoVCQZUKdTgfVapXMSPd6vWi1WhCLxRCLxRCJRBCLxeh0OuTjCIVC8j1//b/HLUT6/T5GoxHa7Tba7TYymQy63S663S7pwyaiCrvdLgaDAXQ63VhPfKVSmVruI5fLweFwUK1Wpw69rq+vI5lMziSbdrsdfr8fGo1m5jnucDjIHR+qC1Cr1Ypmswmfz4f9/X1a5JYp8Y7FYuj3+zg8PESj0cDDwwNarRajWYlJiyen04l8Pg+PxwOTyTRXesgsEPa5bDYLj8cDmUyGer2O09PT33ZdlkqlcDgc2NzcRCqVws+fP6HRaLC+vk474hT41UI7r2pPR9RiiTaL/zRwRuxZvzT4/X7I5fKJmcjvUavVkEwm8fLyApPJBLPZzDg2bdHI5XKIRCLo9/uMLRh0MBgMEA6HUS6X4XQ6J+ZuM0WxWITf78fOzs4boplKpZDL5XB4eDjz2M9DuNvtNq6vr+F0Oml5/5+fn5FIJCgp44PBABcXF9jf35+ZhvLw8ACVSjX1XB0MBvj3v/9NRppNW0icnZ1NfJxgMAipVEqS8WaziU6nQ/4rl8vodDoQi8XodrukfeD1//6gHvD54PP54HA4EAqFqFarMBqNEAqFEIlEEAqFEIvFkEgk4HK55HGZ5CuvVqsIBAI4Pz+f+DoSiQQ6nQ52dnamHtsfP37A4XDMPIcfHx8hk8koKdjPz8+Ix+M4OzujvBAdjUa4vb2FUqmc6dt/D2IwkirxzmQyyGQyb+I2O50OSVZ3d3cXSo673S78fj/6/T6cTufSlVris9Xv97G+vg6LxbJ0AYIK+v0+MpkM0uk05HI5rFYr5Wvny8sL/H4/vn79yvq5WbBYElile4lYW1uD3++f2epVKpWQTCbRbrdhsVgWrujOg2q1ilAoBA6HA5fLhWKxiHQ6Tct/zORv+nw+KJVKnJ+fz7RF0EUymUQ6ncbBwcGHbWGLxYJer4fHx0ccHBxMfB+GwyHu7+/JqDG6N8b7+3tsbGzQItydTgehUAiHh4eUzo9EIoHV1dWZhLvZbKJarWJvb2/qzxUKBSiVyqmLkVmpJcAvy8HrhQ5hS3lNDjkczlTF7b//+7/xv//3/574/b/++gubm5sTbSqEr3sS6ZbL5eh0Ouj1ehNfr16vx9XVFVllPglWqxWJRGLiIDIBm82Gq6srcrEwDXq9HsViEZFIBNvb29QUlv//M3x9fU15AJcAHcW7XC6Tn6/Xx04kEuH4+Bg+nw93d3dwuVwLS1sSCoU4ODgg4/42Nzcpix1MF+18Ph9HR0eIRCK4uLiAzWajXSaz8Bs6n08uAnK5HPx+P4RCIaxWKzQazcyFktFoZAk3CxZLBJc9BMuDQqEAn88fG9lFDKT9/PkT0WgUa2tr+Pr1K8xm8x9BuCflbVutVhSLRVoZtlTBpOiG7uP7/X48Pz/j5ORkog9za2sLEokEt7e3YweUCMItFotpE+7RaITHx8eZqvI4EE1+VHYZ2u02np6eKM0UJBIJSufdrNp3gnDNSpRoNBpTX8O8nm6ChNEdpnxPUFdXV6dmI4vFYkilUpRKpanPxWAwoF6vz6w0F4vFtHLxd3Z2UCgUaOU3CwQCuN1uhMNhVCoVWseUynBlPp+fWu7E4/Hgcrkgl8txdXW1sGFzAiaTCcfHx8hms7i/v6c1PErnMxyLxbC9vQ2JRAKXywWHw4F4PI7b21vU6/Xff2P//4vaiHtKPB4ni3/GbW43m01UKhXa2dwsWLBgSfcfBbPZTHpYgclJJHq9/o9QGGblbfP5fOzs7CAYDC7Uj/e66Obs7GxhA1cEer0ebm9vMRgMcHJyMtOzvbu7C7FY/CZrmHj/CMLNRO0PBoPgcrmU1UkCRAoGVT9sOByGxWKZSV47nQ5KpdLMBUCn00G9Xp+qlvX7fTQajanKervdBo/Hm6pwztNG+ZpczpPVDcyuhCcI9azCFi6XC4vFQqmoZn19HS8vL5RaCPl8PhwOB2mroAqpVIq9vT08Pj7SbnmcRrxLpRLC4TDcbvdMP7HNZsP6+jpub28XXvoilUrJRfXl5SWtnHIqiMVikMvlb9R+YrBTr9fj/v6eVoPosqHT6XB6eort7W3kcjl8//4dqVTqTWNqNpuFRqNZ+K4iCxYsWNL96Re8VquFcrmMWCyG79+/o1qtwuVy4fDw8I8qIMjlcvjx4wdarRbOzs6wubk5Vv3U6XTg8/kLa4cjim5MJhPcbvfcKuckQq9UKrG/v095J4Foo3x4eMBoNMJgMIDH42FMuFOpFCUbx3vU63Ukk0nKqnq5XEa9XqekWiWTSRiNxpnb/LNq34FfnlClUjn1Z2aV4hALpHnPgWmtlIsk3TqdDuVyeWrlO/BLgS2VSjOLVng8Hra2tihFCBLPUavVIhgM0jo+KpUKGxsbuL+/px03N454VyoVeL1eOBwOykkeRqMR+/v78Pl8b4SJRYBIXHK5XIhEIvD7/TPfIypotVpTd5DW1tbw5csX8Hg8XFxckPn/fwJUKhUODw/hdrtRrVbx/ft3RKNRdDod5HI5ymk4LFiwYEn3HwsOhwOz2QyPx4Ner4eTkxPs7+9/esTUNDDJ297Z2UE8Hp9r+7bT6eD29haFQgGnp6dYW1tb+GsrlUq4ubnB5uYm7eExotVvMBjg4eEB9/f3kEgkjAh3sVhEKpXCwcEBLTWJaJ3c3t6mlKgyGo0QDodht9tnLi56vR7luudZqSUE2afi555FuhdlL5mmNEokEvR6valEjBjGm1QZD/xSm1dXVz9k2I8j00ajkZLabTAYyCIsKrDZbKjX65R//vVCQKVS4fHxkTYxfE28k8kkvF4v7aFg4FciyPHxMVKpFMLh8MI//wqFAmdnZ+BwOPj58ydtS817RKPRmbF8fD4fdrsdJycnqFQquLi4QLFY/GOu9zKZDPv7+zg9PUW/38fFxQUUCsVvT8hiwYIl3SwWAmI4xWQyfUr+KR3SO863TQVSqRQ6nY6y//Q9iKIblUq1sKKb90in0/D7/XC73YyzxInhMyJSj64tBPilVPv9frhcLtoZupFIBDKZjHI1/NPTE4RCISV7Tjqdhk6nm0lw6/U6RqPRzBQEKqR7VvPiIkn3rAWhVCr9NIsJAHK4jYrtYHt7G5FIhFLxC5fLxd7eHkKh0Ewl/T3sdjs4HA5lZf098bZarYhEIjCbzTMH9aYtbk5OTtBoNODxeBaiSL9f8Ozu7mJ7exuPj4+IRCKM1OdcLkcOu1N9XW63Gzs7O4hEImTc6p8CsVgMm81Gtg6zYMGCJd3/CPD5fJjNZkoq12dglm+bKjY2NlCpVGg11hHJIMlkEoeHh0vZ0hyNRggEAnh6eqK1kBgHQuUmCjB8Ph8tUtDtduHxeLCzs0N7d6NcLqNQKMyMpCPQ7/cRi8Vgt9spva5MJkPpZpvNZmeS/na7jcFgMFPFnqV0DwaDuSrgCczydAOLs5hoNBo0Go2ZhFcoFEKn0yGTycx8/gqFAkqlEolEgtLrlclksFgs8Pv9tBeVRPFLOp2m9buVSgWpVAo2m42MOp3nGnlwcACRSITr62vaXnMq0Gg0OD8/R6vVIudH6FwHEokEdnZ2aJ+bKpUK5+fn0Gg0uL29RTAY/GP83oVCgSyFYsGCBUu6l4r3FfHjvj/p5+kOPVqtVpRKpalb1Z8Bqr5tqgqS3W5HMBikRERLpRIuLy8hEolwenq6lKzvfr+Pu7s7dLtdnJyczKWgDwYD3N3dYWVlBQ6Hg4w4ez9cOW1xQ5R20I0S6/f78Pv9cDqdlGPVotEo9Hr9TOIL/FLEV1dXZ+68jEYjsqRp1gJhlso9HA7RbrenDtktQuUmSPcspZsq6X55eZmqjHI4HGi1Wkr2DqvVinQ6Ten8sdlsyGQylNVrq9WK4XCIVCpF+3PsdruRSCRmJrG8/ix7PB7s7u7CarXOVRn/+jju7OxgbW0N19fXS0lIEggEcLlcMJvNuL29pXysYrEY1Go1Y1sgYTMkMrAvLi6QTqd/u987mUx+WoU9CxYs/oNJN4fDwWg0Iv+NI9iTSAjxj66SYzKZfpvazcS3TQVarRYKhQKxWGwq2QoGgwgGg3A6nZT8xkxAKFgymQxut3uuSXyCcMtksjdK8+7uLkQiEe7u7maqVV6vFysrK4zU/EAgAJ1OR7kBsNFoIJ/PY3Nzc+bPjkYjpFIpSs+rVCqRpTLzku5mswmJRDJ1wboo0j3L002VdAsEAohEoplpIlQtJhKJBEqlktLgoEgkgslkomzh4nA4cDqdSCQStKP4xGIxXC4XfD7fzN/N5/MIBALY398nLSVU4gSpwmw2w+FwwOPx0PapU4XRaMTp6SkKhQJub2+nLmyq1SoKhQKlzxaV+8D29jaOj49RKpXw8+dPygudRaNQKEAgENAuHqMqUs0rVLFgwZLufxBmKVfvvz/ua0xuJoVCYSlbp5Mwj2+bKux2O/L5/NibR7Vaxc+fPzEYDHB+fk6rRpoOyuUybm5usL6+TslewYRwvybeUql0KvEm2jt3d3dp//1cLodms0lr8DMcDmNzc5OSKp7L5SCVSintNORyORiNRkrHf1FDlItoYV2U0g38j9o9DUqlEoPBgFJG8/r6OlKpFKXryfr6OiqVCmXVl/Dper1e2tcrhUKB7e1t3N/fTzyvy+UyQqEQXC7Xh/d7kcRbrVbj6OgI0Wh06oJ+HojFYhwfH0OlUuHy8nIswe/3+/D5fNje3l5onJ5UKsXBwQFsNhvC4TDu7+8Xnlk+C/F4nPZCgg7hnleoYsGCJd3/4Zh3xS4QCKDX6z9F7V6Ub5uqerOzswOfz0cSHaJAgii6cTqdS8uAfXp6gs/nw/7+PiWCOA2EPUUul0/1Uu/u7kKtVo/1hmazWRQKBbhcLtrnSrvdRjgcxt7eHuXdgEKhgG63Szn9JZlMUlK5+/0+yuXyTGtMtVolq9angcoQ5SLiAgFqSjfxd2aRcyq+buBXSyQVtVsul0MsFs9MPAF+DUnabDZag45GoxFisZgRWdXr9TAYDHh4ePhggclkMgiHwzg6Oppos1gk8V5ZWcHp6SnK5TK8Xi8lSw4TrK+v4/DwEIlEAo+Pj28iFKPRKFQqFeMh0VkgfOYqlQo3NzcIh8O0IxyZIJ/Pg8fj0VK5JwlPdL/OggVLulkyTV4cJl0oXq/Wx9lRqMJqtZJT8MvCIn3bdG4eGo0GwWAQzWYT19fXqNfrSym6ef2ehEIhpFIpHB8f094mnUa4qaSUbG1twWKx4Pb2lowie3l5QTQaxcHBAaOKa5/Ph/X1dUq+bGJxFQ6HZ1aRvyboRMwdlZ9VqVQzXwcVlRv4vLhAgqxyOJyZswZU1G6lUolarTaT9BkMBsp2CKvVSnnxTRRn0cnF393dRTabZRSRt7m5CaFQiEAgQH4tFoshk8nA5XLNLL5ZJPEWCAQ4OjoCANze3i6lYRL4NYh6enoKkUiEnz9/olwuo1gs4uXlhXbUKJP7j8ViwZcvXzAcDnFxcYFMJrNUwhqPx2m3T056PrN2jVlrCQsWLOmeuhp/fZFY9MVCJBKRtbyLxrJ821Sxvb2Nl5cXXF1dYW1tbSlFNwSIoppWq4WTk5O5oxgJwk1ssVOF2Wwmt+Tj8Ti8Xi/29vYYPZ9EIkG2F1JFKpWCTCajbNtJJBKU48GopJb8qaSbIGyLsJjweDzI5fKZBFIqlUIkElFSxdVqNUajEWU/7/b2NqLRKOXkHIFAgN3dXdppOwScTieazSZisRgeHx9RqVRweHhI+bxeJPEmIhHVajWur6+XFrvH5XJht9vJlk+fz4ednR1Gi2em5+vOzg4ODw+Rz+dxeXm58LZO4FfRFZfLXZp6v2ihigULlnT/gwn3e//ZawV8UbBYLCgUCgtLMvkM3zaV5/Dw8EASpmU2bbbbbVxdXZE5uPPeFAnCrVQqGeVw6/V67O3tIR6PY2VlhdGxr9VqSKVStIp3ut0uUqkUZQ/7y8sLBoMBpZ2HdruNZrM588ZM+Jhnkf5er4fhcDhzEdjr9Rbi6QYWN0xJkEgqBIjqQCXwy9ZAVe0masepRggCv3afVCoVowxuLpeLnZ0dJJNJdLtdHBwc0F4MLZJ4A78iSm02G25vb5daNqNSqaBUKiEUChEMBin59BeJlZUVHB0dYXNzE8FgEA8PDwu7V4xGIzKxhCXBLFiwpPtTCTfxXyrbX8RKnfg3z9afQCDA+vo6otHoXK/hM33bs5STy8tLrK6u4vz8HBaLBV6vdyl/q1Kp4Pr6mlSY571xvCbcTAcwiTQQo9GITqdDKdnk/ftIqGp0diYikQjW1tYoxyLSUblzuRx0Ot3M4/vy8gKFQjHTvkRF5SYWEn+a0k0QMaq+7mKxSMl/rNPp0G63ZyajELDZbHh6eqJlTbPb7ahUKigUCrSO3cvLC+7v72E0GtFsNhmry4sm3jqdDgcHBwgGg7SjEelczxqNBs7OzrCxsYG7uzskEolP9ydrtVp8+fIFCoUC19fXiEQicxcHPT09gc/nQ61Wf9o9lgULFizp/rD1NcnHPel35oXJZMLLywtjFeV3+LbHEdbHx0ckEgmy6IbD4ZC5r4u20GSzWTw8PMDpdMJkMi3k+d/e3mJ1dXWuxJNAIAA+n4/d3V2cnp5CKBTi9vaWMjkKh8OQy+W0sryr1SpeXl4oxxHW63U0m03Ki7JFppYQf59KWsoiSTdVpZtKaoRcLken05n5eAKBAAqFghLJJby8VNVroVAIi8VCqwWWx+PB6XQiGAxS9kNnMhk8Pj5id3cXOzs72N3dxcPDA+22y2URb7lcjpOTE+RyOQQCgYWS4U6ng3A4jP39fXC5XOj1epydneHl5QU3Nzef3rPA4XBgtVpxfn6OXq+HHz9+UIqbnLS4/0yVe5FCFQsWLOlmMRd4PB62trZo16j/bt82ASJjdlzRDYfDwd7eHlKp1MIKLiKRCBKJBBnxtSjCrVKpYLPZGD9OIpFAo9HA3t4e+b7u7+/DbDbj8vJyptWgVCqhVCrRtrWEQiFsbW1RToRJJBKwWCyUbrbVahUcDodSEcgi/dwE6V6UvYRKKyWPx4NAIJhJpjgczlIsJmtra6hUKpTJnMViQa1WozUgqVAosLa29mYwchIp8/l8ZJMrYUPSarUwm81zVbQvmniLRCIcHx+j2+3i7u5uIYkfo9EIDw8PsFgsb4ZFRSIRDg8PodfrcX19zZj0zruAdDgcODg4QC6Xw+XlJe3jmE6nac1/TDtOVL/OxgWyYMGS7j8GRqMRrVaL0sXzT/BtEzdmKkU3YrEYu7u7eHx8ZKyQAf8zMFmr1XB6ejozOYEKer3eQgh3Pp9HJpOB2+3+cAyIQdJIJIJoNDr2ptPr9Wi3TgK/VGgOh0NZtSbOMaqRgrlcjtJjE8ovFQWbCukmKuAXFS0pFAopqbuLtphotVpUq1VKFiMulwuz2UzZ280kQhD45YfudrsTCWOj0cD19TW63e7YgUmr1QqZTAafz8f4/Vg08SaaNGUyGa6uruZWoePxOMRi8cRBZrPZjOPjY2QyGXg8nt9S5S6TyXB8fIz19XX4/X48Pj5S2lHr9/ts+yQLFizp/s8Gh8OBzWabqnb/Kb5t4NewH1F0c3Z2NlMx0el00Ol08Pv9jP5ep9PBzc0NhEIhDg8PF5Ii0Ov1cHd3B7VaPRfhrtVqCAaDUxNalEolzs7OUK/XcX9//0GNCwQCMBgMtKIOB4MBIpEILWU8mUzCZDJRIrNE7fsiU0uAX22Un5lcAlBTupdBuolkCKrxgSaTCfl8nrL9Q6fTgcfj0VJcibbKaDT6gZzmcjnc3NyQfulJOw27u7vo9/u0d+eWSbyBX7719fV13NzcMH7MYrGIXC4Hu90+dTdIKpXi9PQUKysr+Pnz51IHOmedA1++fCEXHLOSbVKpFLRaLaUFMgsWLFjS/Y+FTqfDaDQae4P+E3zbBBGLxWLweDzY2tqipczabDb0+33aRR2EjcZgMGB3d3chHkRC4Var1XNl7xJJLQ6HY+ZNTCgU4uDggGy9I0hBNptFu92m/TwSiQRUKhUl6wdBZPP5PMxmM2XysbKyQmk4kyrpbjabEAqFM0n/Iq0lxLFfpNJNqL9UFFU6FhOBQACDwUBrMHB7exuxWIyW3UMqlWJjYwM+nw+j0QiDwQA+nw+RSAQul4ucyZhG3F0uFwqFArLZ7B9FvI1GI/b29uD1emk/t06nQ+44UbHqcTgcbG1tYX9/H6FQCIFAYO4BR0Y3by4X6+vrOD8/R6fTwcXFxdhzrtPpIJ1OUx6iZsGCBUu6/9Gw2+1vLAh/im+bIEzX19eo1Wo4OzujNez3+kadyWQoZxI/Pz/D4/HA4XDQLnCYRbg1Gs1chJuwu1gsFlo5t1arFfv7+wgGgwiFQohEItjb26O1mGi1Wnh6eqKl0KdSKRgMBspklqq1hA7ppurnXlQb5Wsyu0ilG6CudqtUKnQ6HcrV3haLBdlsljJ5k8lkUKvVtIeVzWYzeDweQqEQLi8vMRqNcH5+Ttnny+fz4Xa7EY1GGRXvLJN4r66u4vj4GIlEAuFwmLKg8Pj4CKvVSrtcS6lU4vz8HKPRCJeXlwubX2GyuHQ6neR19urq6s1zicViMJvNc3cZsGDBgiXd/wisrq5CJpMhEon8Eb5tAul0Gjc3N1hbW2OU00tAJBLB4XDA6/XO9B/GYjFEo1EcHR0tLNaKINxarXbudjmv1wu5XM5oMSCXy3F2doZ8Pk+pLfE9IpEIrFYr5feh3+8jm81SVrj6/T5eXl4oLazq9ToEAgGlxeDviAskyAgVpVsqlaLdblMa9qJKuoFf8YFULSZisRhqtRqZTIby69va2kI2m6XtZVYqlchkMtBoNHA6nbR3F6RSKZxOJx4fH+fyUS+DeEskEpyenqJer1Ma/IxEIuDxeIwX9zweDw6HAzabDQ8PDxPnNz4DRKqLxWLB4+MjvF4vCoUCSqXSwsQLFixYsKT7H4GtrS2k02nw+fzf6tsGQGZNPz8/4+TkhPIA3jRoNBpsbGxMvBEOh0Py5kt4JhdNuDc3N+d6rHA4jOFwiJ2dHcaPkUwmIZPJ4HK54PV6EYvFKGU6l8tlNBoNWjdPglhR3SV5fn6GSqWi5P2m4+f+HcklwC9VlkqqBYfDgVgspqRKq1QqvLy8UCJWdCwmwK/dkFQqRel8IBYVVquVsse63W7j7u4OtVoN29vbKJVKjAmiSqXC5uYmPB7PXMkhyyDefD4fh4eHEAqFuLm5mTjInclkUCgUsL+/P7d9TavV4vz8HI1GA1dXV5R3OJYBvV6Pr1+/QiKRwOv1YnNz89NaNVmwYMGS7r8FpFIprFYrer3eb/FtvyZeRNHN8fHxQrckLRYLJBLJh8HKbreLm5sbcLlcHB0dLYx4EYRbp9PNTbgJe8w8N+harYZMJgOHwwGFQoGzszMMBoOZW9Oj0QjhcBg2m43y3x4Oh7R9nFSzuYFfUYdUSTfVjO5F20s4HA74fP5CLSaEuk+l0EYmk4HH41G2YaysrEAmk9Ei6haLBY1GY6b6nk6ncXl5CZVKBZfLBbPZDLlcTtmGMQ5ra2tQq9V4fHycS91dBvHmcDjY3d2FwWAg7XHvz8loNIr9/f2FEVKBQAC32w2TyYSbmxuk0+nfd2PncsnziepnmgULFizp/o/CxsYG6vX6XF5JpiCKbuLx+Juim0Vjb28P7XabHBqr1Wq4urqCVquF0+lc2N8kiLxOp5s7JqtcLiMej+Pg4IDxDXowGMDr9WJ7e5skljweD3a7HU6nE36/H6FQaOwuQCaTgVAopFTfTiCbzUKhUFCOWGy1Wmi325SI9HA4RK1Wo+QDHgwG6PV6lBZvi7aXAIsfpgT+R+2mAiZqN9X4QIJc2mw2hMPhscS3Xq/j9vYWpVIJp6ensFqt5GeMULupzlqMAxEZyqRqftnEm1iU7Ozs4P7+Hvl8HsD/DELb7XbKA8l0FyMnJyd4fn7G3d3dXJGpTEEMv79+v1mwYMGS7j8es2ri33+daq38JHVic3MToVDoU32B5XKZLLo5OztbaqwUl8uF2+1GOp1GMBjE/f09tre3KTcrUiXct7e30Ov1cxPuZrMJr9eL/f19ynXr4xAOh6FUKsf6peVyOc7Pz8Hn83FxcYGnpyfy/e/1eojH47QiAkejEZLJJG2VW6/XUzpvX15eSBV3FhqNBmXivwzS/TuHKYFfW/2FQoHy53l1dRUCgYBWbbtWq4VAIHgTIUhEjXo8Hmg0Grjd7g8LHz6fD4fDgUAgMJdFZG9vD5VKZW5ld1nEW6PR4OjoCJFIBLFYDPf399DpdEtVgCUSCY6Pj6FUKnF5eUkS/s9CNBqFTCajtVBnwYIFS7p/O+F+3ag1jmDT+XmqN2mBQEArPowpiKIbIi5rUtHNoiEUCqHRaPD09AS73b7QGwNBuA0Gw9yEu9frkYsCuskGr1EsFlEul6cSZw6Hg83NTRwcHKBYLJIJBLFYDHq9nlYpUD6fh1gspjWESze1hOqQK1U/N/HeLdLTTZDuRSvdSqUStVqNkvdaJBJhZWWFVp4zXbUb+KVax+Nx9Pt9FAoFXFxcoN/v4/T0dGoT6erqKnQ63cy2ymkgSmoSicRcqvkyiffKygpOTk6QTqcxHA4/pSSGw+FgY2MDBwcHiMVi8Hq9C2nOpPKZy+VytFtux93TpglJ8whMLFiwpJvFB0xTpwiCvQxsb28jmUxSLstgglqthsvLSwwGA1qRYYsg+l6vF9VqlSQKVBrV6BLueZXz4XAIj8cDg8FAqShmGnEPBAJwOp2UlOGVlRW43W6sr6/j/v6eFhkmkEgkaKnclUoFPB6P8g4HnSFKqn5u4lgtw15CRemWSCTo9XqUEmV4PB7kcvnSLCZarZZMkqFDKpVKJX7+/Il4PI69vb03VqZp2NraQrPZpPUc30MsFsPlcsHn81FevHw28U4kElAoFJDJZLi7u/u0RkkitUggEODnz58LfU3jEAqFsL6+TnsBO4lwjxOSFiEwsWDBkm4WfwSkUilMJtNc6tO0hQSx7by5uUm7gnwRpBgAjo+PYTKZYDKZKEV7UXnsm5sbGI3GhVhV/H4/xGLx3AOYfr8fRqORtlKu0+lIInV/f49YLEZJJSsWi+BwOLTiFukQ+263i06nQ9kLS1XpHgwGGI1GC6uAJ0BV6SY+d1QJ4+rqKmWLiU6nw8vLCy2Vk47a3W634ff7US6X0e/34XQ6ae1ycLlc7O3tIRwOz+U/VigU2N7eXkhF+qKJdzweR6FQgNPpxP7+PlQqFa6uruZeINA5xtvb23A4HPD5fGQS0qJBKPkmk4k24R4nIv2u+EMWLFjS/R+O1xelZarcBDY2NtBqtRbqBZy36GYeNBoNXF9fQ61WY29vj7SxWCwWqFQqPDw8ML4JEYR7bW1tIa1rsVgM7XYbDodjrsd5enpCt9tlRNwLhQL6/T7cbjdOT0/R6XTw48cPxOPxqedeMpmktegYDoeUa98Beio3HdK9DD83QF3pBpbn6+bxeFCpVLQ+ywaDAfV6ferzIZper66uIBKJ8O3bN2xubjKqaV9ZWYHVaoXP55vreOv1ehgMBng8nrlJ5aKI99PTE9Lp9JuK+83NTWxtbZFDpp8FlUpFNkheXV2hXq8v7LEHgwESiQSjBl+WXLNgwZLuP5Jwv/7a6622ZfzNnZ0dBIPBhWyDEkU3RqNxrqIbJigWi7i9vYXNZhvrpbTb7RAIBAgEArQv/p1OZ6GE+/n5GblcDm63ey5/e6vVQjQaZZTIMhwOEQ6Hsb29TWZIOxwOnJycoFar4eLiAtls9sOxqlQq6Ha7tDzyxWIRcrmccpY3HdLd6XTA5XIpbXMvw1oCUB+kpEu65XI5Op0O5cemazHhcDiwWCxIJBITyfaPHz/Q6XRwcnJCZjGbzWa0Wi1GRNJqtZJDuPNgc3MTYrH4QzTo7yDe9XodsVgMbrf7w+JPr9fD7XbD7/d/arwfn8/H/v4+rFYr7u7u5j7eBKLRKAwGw8I6DqjcB1mwYMGS7qVfaF572ZapEqyurkKv1yMWizF+jPdFN3S3HedFMplEMBjEwcHBVGXd4XCg3+/Tih7rdDq4vb2FyWRaCOGuVqsIhUJwu91zDfSNRiOylILOACSBVCoFuVz+wWcvkUjgdruxu7uLXC73gXwTiSV0SD5dz/gySnGA5SrdVO0ldEg3h8OhZTFRq9VoNpu05hdMJhPK5TL5O+PItsPheJNKwuFwYLfbJ0YIzoLT6UQymZzbduFwONBut2nX1C+SeDebTdzd3WFnZ2ei3UahUOD09BRPT08IBoOfSioNBgPOzs5QKpVwc3Mz12xLvV7Hy8vL3HY4lnCzYMGS7t9KuIn/UpnSJgZKiH+LuEhtbm4in88zUnmIohulUrnwohsqxNPv95Nkf5YHmMvlYn9/H7VajdIi4zXhXkTFcbvdxsPDA5xO59xKUTweh0AgYLTA6Xa7SKVSsNlsU0nI0dERHA4HmVQRj8dRq9VoEeher4dKpUJZGW80GuDxeJSjE+kMUS4juQRYntIN0LOYcDgc6HQ6yrXwwC9bytraGhKJxEyy/RoajQZisZhWpTwBsVgMu90Or9c7lz2Ey+XC5XIhm80uxCJHl3i3223c399ja2tr5vktEolwcnKCTqeD+/v7T0kYef23j46OoNVqcXV1hWw2y/hau6z0KZZws2DBku5PI47v/437mUm/swjw+XzYbDYEg0HKN8F+vw+v10sWumxsbHzqdDnRBNnv93FyckLZusDlcnF4eIjn5+ephGHRhLvf7+P+/h4bGxu0BhDHoVqt4unpibEfPBKJYG1tjRKxVSqVcLvd2NnZwdPTE4bDIRKJBOVhuOfnZ2g0GsrDi8vycxPnzO9Wuom/T/Xn6ZBugL7FpNVqodPp4OnpCa1WaybZfg273Y54PM7ImmYwGCCVSufaYSOOp9vtRjAYpNTguSjiTXye19fXsba2RnmBQ1hQrq+v0Wq1PvVeY7FYcHR0hHQ6jYeHB1rvWyqVgkQiofXZnFd4WobAxIIFS7pZ/BEwGo0Qi8WUboJE0Y1AIMDZ2dlSGtemgRjWVCqVcLlctJUXPp+P4+Nj5HK5sQoZ4eE2m80LIdyj0QiPj49QqVRzW28GgwF8Ph92dnYYEchqtYqXlxfa6SsSiQTD4RAHBwdot9u4uLiA3++fqQgu01pCl3Qvy17C4/EwGo0oL1jpqN0E+aVK0BQKBUaj0UwCWiqV8Pj4iMvLS/D5fOj1ekgkElo7VVKpdC5r2s7ODp6fn+dODllZWYHD4cDDw8NCmhlnEe9+v4+7uzuYzWbKhPv9YsViseDm5ubTm4FXVlZwenoKiUSCnz9/UvLlV6tVpNNpRpnck66HVIWnRQtMLFiwpJvFHwOHw4FcLjeREAyHQ4RCIfj9fjgcDmxvb39K0c17snBzc4ONjQ1sbW0xfhyhUAiXy4VoNPqmVKTdbuPm5gYWiwVms3khzzkUCpE+2EU81urqKuOyn1AoBJvNRjs2L5lMYm1tDQqFAk6nE2dnZxCJRPD5fLi5uUEmk/kQydhsNtHpdCiT6OFwiEqlQjnPfTQaodVq0WqjXIa9BKAXG7hMiwkwWe3u9/tIpVK4urpCKBTCysoKvnz5gu3tbWxubiKTydC2exDWNCb+bIFAgN3dXfj9/rnjPDUaDSwWy0KiQacRb4Jwq9XquRbQa2trcDqdeHx8ZGT3mAccDgc2mw37+/sIBoNTdziHwyECgQA2NjY+dTCeBQsWLOn+x0MoFMJut4+N9CKKbnq9Hs7Pz5eyzTgL6XQafr8fbrebdpnLpNdLVDfn83m0223c3t4ulHCnUilUKhXs7+/Pbb8pFAqoVCqMyXs2mwWHw6FdxNPr9fD8/PxG9ZdIJNjc3MTXr19hNBqRz+fx/ft3RKNRUpWlq3JXKhWsrKxQznRvNpsQi8WUF37LUrqJc+lP8HUDvxIz8vk8qQ7W63WEw2F8//4d5XIZJpMJX758wcbGBmnLkkgkWF1dfVPzTgV8Ph8bGxsIh8OMjptarYZarUYwGJz7PbBYLJDL5fB6vQt5T98T7+FwiPv7e6jV6oUME6pUKhwdHSGRSDCKYJwXSqUS5+fnGAwG+Pnz59jdkXg8DqFQuNQ6exYsWLCk+z8Wer0eIpGIjJgajUaIx+Nk0c3e3t6nFd0QGI1GCAaDeHp6wsnJCa1SjlkQiURwuVyIRCK4urqC1WpdGOEuFotIJpM4ODiYu5Cl2+0iGAxSbp18j8FggGg0ymiLOJVKQa/Xj1WJuVwujEYjjo6OcHJyAgC4vb3F9fU1MpkMNBoN5b9D11pCZ4iSWDwsi3QvW+l+eXmhvMUukUggEokQiURweXmJh4cH8Hg8nJ+f4+DgAEajcewC0Gq1IpVK0d7KN5lM6HQ6tGroX8Nut6NarS5kGHJnZweDwYDxImAa8b69vYVKpVpoeodUKsXp6SlqtRoeHh4WotLTAY/Hg9PphM1mg8fjQSwWI9//Wq1G2krYNkgWLFjSzWJJ2N3dRTqdRj6fx/X1NarV6qcX3RAgBpaIRAWqqRa0TlAulxzaoTqQSYUQEqr8Ih7T7/eT9g4miMfjUKvVtP33g8EAT09PlOISJRIJtra28O3bN9Ii4vF4cH9/j3w+P9O6UC6XaQ2Z0vFzEwuXP0XpbjabtAi9SCSa6dMmSoju7u7QarVQLBaxsbGBr1+/YnNzc+Z5KJfLIRaLaZNfDoeD7e1txhGCRFtlKBSivHCZ9lxcLheKxeLCbBsKhQISiQT1ep2y9YkO+Hw+Dg8PwefzcXNzsxBfOl1otVqcnZ2hVqvh+voajUYDgUAANpuNUSQpCxYsWNLNggaB2N3dhdfr/S1FNwRarRaur6+xsrICt9u98PpuAKSlZH19HScnJ4hEInO3x3W7XXg8Huzs7CxkyDSTyaDf748t/aF6HLPZLCMPfCaTgUqlorXY4XA46Ha7JOHT6/XIZrP4f//v/8Hr9SKXy30gqL1eD+12m9bxokO6h8PhUirgXxNjqqSbx+NBIBDQSq8g1O73IJJHHh4e8NdffyGbzUKr1eLk5AS9Xg8qlYqWSmm1WseW5VB5flKplHEBjFwuh8lkWkjZDZ/Px8HBAaLR6NxDmv1+n1S4Dw4OFlYZP+4z43A4oNfryUbf33HdJ3ZCbm5uIJFIPr1zgQULFizp/o+EWq3G2traQiuE6eDl5YUcaFzEAOIkMnpzc4P19XWYTCaIxWIcHh6SHm8mGA6H8Hg8MJlMC9kZaDabiMVijFonCYTDYVitVtoLp+FwiFQqRTvpZDgcolAokJYUg8GAg4MDfPnyBUqlkvR/397eIplMotVqoVwuY3V1ldZrpJvRvcyFI53YQGA+X3ez2UQikcD19TUuLi6Qz+dJf+7BwQFMJhOkUimUSiUKhQLtzz2Hw2G08LTb7UgkEozbbdfX19Hv9xllf7+HRCLB3t4evF4v42g+YmiSsJQsqjJ+1qJnZ2eH3B36HZBIJODxeEu77rJgwYIl3SzGYHt7G7VajbFXkymenp7g9Xqxt7fHKJKLKuG+vb3FxsbGm78hEolweHiIRCLB6Obv8/kglUppE9VxIFont7a2GJcOlctlNJtNRtGHuVwOMpmMdpFPoVCAQqH4QHJFIhFMJhPcbjf+1//6XzCbzeh2u/B6vQgGg+h0Oshms5Ra83q9HobDIWXrzrJJNx2lmy7pbrfbaLVaqFQq+Pe//w2/349erwez2Yz/+q//wuHhISwWy4djQTez+zXxY1IbLpFIYDAYEI1GGR1DDocDp9OJWCxGy34zCaurq9ja2mJURvM6peS1h/sziLdGo8Hh4SHC4TCjXYd50O/3ydmRRVntWLBg8bngs4fg7wliy9Pj8UAuly/dYjIajUh7xzLbLQnCvbm5OXYqn9hmvb29Ra/Xo2zriEaj6Ha7ODo6WsjzjMViEIlEjBceo9EIoVAIdrudkUqeTCYZFfBQSS3hcrnQarVk9OFff/0FnU6Hl5cXJBIJ9Pt9KJVKKBQKyGQyKBSKN9aQP8nPTZBuukr3OBV6OByiWq2iWq2iVquhUqlAIBBAJpNBLBZjY2ODciKMRqNBIBCg/dp1Oh2i0Siq1SrtGYKNjQ1cXFzQHnJ9Tdw3Nzfh8/lwcnIy9wCf0WhEo9HAw8MDDg8PKT0e0TRpNpvH2iteE+/9/f2l+LxlMhlOT0/h8XjQbDaxu7v7KfGsgUAAarV6Ka+JBQsWLOn+WxLh16SKztfff4/qxd9qtcLn8+Hw8HBpr2swGODx8RGj0QgnJydLS0iZRbhfE++TkxPc3d1hMBhMrUwHQFZRL4IoAL/i87LZLM7Pzxk/RiaTgUgkopUgQiCfz0MgEECpVNL6vW63i2q1CpfLRfl3ms0muFzum2HNVqtFks9CoYB6vQ6xWIyVlRUoFAo0m01ai7Jer7e0jG7ifKGrdMfjcby8vJAqdqPRIF+XUqmEVqvF1tYWOcgWj8dRr9cpk25iYfM+7pHKNYZQu+m8j8AvP/Xm5ibC4TDjxafJZEKxWEQ8Hl9IUojdbofH40EwGMTu7u7Mc5FK0+RnEG+hUIjj42P4fD7c3d3B5XIt9RzOZrPodDpwOp3sjZYFC5Z0s3hfhUv8/0lfZ0q038NsNqNcLiMejzMe5pulLHk8HiiVyqXGU1El3K8JxNHRER4eHvD4+AiHwzF2EO/l5QXRaBRHR0cLuSkSrZO7u7uMH6/X6yEej+P4+JjR7ycSCUaE5/n5GVqtlpYqNy4qkGhHJAjmcDhEo9FAvV4nLU+9Xg+lUglisZjciSF+j/Clvl4M/A6lezAYoNVqkf/6/T5qtRpZvx6NRiEWi6FQKGAymbCysjJx2FOlUiEQCNB6XgaDAeFwmLa9yGg0kjYPuukVRqMR6XQahUKBcYmTw+HA5eUl1Gr1QiJC9/b2cHNzg1QqNfFY1Ot13N3dYWtri9Lu0mcQby6Xi/39fcRiMVxdXeHg4GApaSLNZpO8hjFR1MfVtC9LCGLBggVLuj8Fky5Ok74+7kI4z03r6uoKcrmcVqzbLFQqFTw+PmJjY2Opk/LNZpO8odIpbOHxeDg4OIDX68Xt7S0ODg7eEOFWq0X6zxd1MwwGg1Cr1YwUagKxWAx6vZ7RcyqXyxiNRoz+fi6Xoz2AVS6XKdlR5HI55HI51tbWcHV1BZfLBbFYjGaziXq9jm63i+fnZ5LgEuRdKBSi0+lALBbj6ekJQqEQPB4PQqEQXC4XHA4HQqFw5mJvNBq9iXPrdDoYDAbodrvo9Xro9Xrw+/3odrvodrtotVoYjUZvFgJ8Ph9WqxVSqRT39/fY3d2lbJORy+XodDq0VPvV1VX0ej3adhwulwuz2czIYkRECPr9fqjVakYkTigUYmdnBz6fD2dnZ3OnzvB4PLjdblxfX0MikXw4t5+enhCLxbC7u0trofAZxBv41fwplUpxc3MDp9O50Gswsci32+2MrhfjPjfLFoJYsGDBku7fDuLiR8V2wuSmtb+/j7u7O5ydnS1ENczlcgiHw9jb21tqwyVTwv36GO7v7yMUCuH29hb7+/uQSqVkhvjW1tbCbrb5fB7VanUuW0mj0UChUMCXL18Y/X4ikaCUyz3u7/Z6PVrHYjQa4eXlhfaWdrPZJFVhoVA49m8SKnOv10M0GgWfz0etVkO32yXJMhElOCkb+b//+7/fnAevh8tEIhH59/l8PjgcDmQyGSQSCQQCAUmyJ4EYpqRKhjkcDlZXV1Eul2m1ihIDlbMsUu9hNpvx/ft3bG1t0f68r66uQiaTMUq/IaDValEsFhEOh2faQqiAKMK6v7/H0dERedzj8TjS6TTcbjcjVf2ziLder4dYLMbDwwPW19cXVuIVCoUgk8loN9W+JtNU1etFCkEsWLBgSfenEuz3Fy/i/xPfG7fdN88Fb2VlBVarFR6PZ27vciQSQaFQwPHx8VLLF+Yl3K+xvb2NVCqF6+trOBwOpNNpaLXahVUkdzodhEIhuN3uuYamQqEQNjY2GPnia7Ua2u02oxsw3dp3AKhWq5BKpbSea6vVgkAgmKl+8ng8cpgvHo/DZDLR8qj/93//N/73//7flH++VCqRedVUP090YgOB/4kOpPP+6PV63N/f0ybdfD4fBoMBqVSK9u8Cv7zUV1dXMBqNjBfp29vb+PnzJ4rF4lw7PwTkcjl2dnbIa1gikUChUMDh4SGjwc/PJt4KhQInJyfkgOW8drxMJoN6vU62ydIFk/vJooQgFixYjAcbGfgJhPuzYLFYIJPJGNcsDwYDPDw8oFar4fT0dOmE+/b2FjabbW7C/fr1u1wueL1e9Ho9RmRkEvx+P0wm01yFOvl8Hr1ej3HiSSKRgMViYXQjf35+pn2cCaJKB3StEsDyPd3AcmMD35NuuotlgUDAKOLOarUim83SjtwDALFYDKPRyDhCkFg4OZ1OBAIBxvnf76HT6WAwGHBxcYFWq4Wzs7O5CPc44r2sOEHiuJ6cnJApK0zeG2LBm0wmcXBwsNRklNf3K0IMIv6x9fIsWLCk+29HuCdduJZ1QdvZ2UGlUqFdvNHpdHBzcwOBQEDWHi+bcNvtdkaq7TTUajWIxWIMh0OEQqGFLIDS6TQGg8Fc+d7D4RCRSISx+tVsNlGtVhkR9nK5DKFQSHsRNW6IchaYxNF9BuledkEOADKxhW7hC9PMbpFIBLVajaenJ0bHZGNjA6VSaa6GRaVSCYPBQHuIdNp1qFgskrsli0wE+SziTXjUpVIprq+vKWXbv0a/34ff78fu7u5SPxesnYQFC5Z0/60JN/Ff4h+hHrz+2mtVYdzXF/E8nE4ngsEg5Zt/tVrF9fU1DAYDdnd3l6pwNBqNpRHuQqGAdDqNo6MjnJ6eolqt4vHxEYPBYK7nG4/Hsbe3N9dxSSaTkMvljLe2k8kkTCYTI9WLibWk3++j2WzSjiWkq3QvuwKeAF2lWyKRoNfr0T53mKjder0ehUIBw+GQ9uuyWq1IpVKMfpfH42Fra4vxzhiBra0ttNttZLPZuR6nXq/j5uYGKpUKZ2dn6HQ6iMViCz0PPot4EwOrZrMZ19fXqFQqlH/X5/NBp9MtdZaGjkDEggULlnT/cXi/Nfd+Gnycj3vS1+fFysoK7HY77u/vZxKN5+dneDwe7OzsMGpGpEvI7u7usL29vRSFOxAIwO12k8NzR0dH4PP5+PnzJ23Vknh/fD4fbDYbxGIx4+fW6XSQTqcZ2106nQ4KhQKj4azBYIBisUj7eDOpfmdCuj9D5SZINx2lGwCkUumnWEyEQiHkcjmjdtmVlRXI5XJGSjnwK0JwMBjMVWtOLPQjkQhtVZdAJpMhW2htNhupFudyOTw/P/8tiTfwK9fc6XTi4eGB0nsUiUQwHA6XEv/KVCBiwYIFS7pZzIBer4der4fP55t48YzFYmT+6yIGoagSbp1Ot9DH7nQ6eHh4wO7u7htrA4/Hg8PhgNlsxv39PW3LDZHTPO8wZiQSgclkYkzcU6kUjEYjI8tPoVCAUqmkvU3PxFoyGAzQ6XRoFeN0u92lloq8JrZ0fcdMfd0vLy+0CQtTiwnAvBqewPb2Nkn25lnor6+vw+fz0V7YhsNhJJNJHB4evvmsCQQCuN1uhEIhVKvVvy3xVqlUOD4+Rjwen+qhz+fzKJVK2N/fX6jqPE3soSoQsWDBgiXdLGZgc3MTHA4HkUjkzdeHwyEeHx9RLpdxenpKe/DtTyLcg8EAHo8HFotlYoavxWLBwcEBwuEwwuEwpRvKy8sLnp+f545Dq1arqFQqjP3g/X4f2WyWUUwgwMxawpR0E2UtdAjDZyrdn0G6BQIBRCIRbZ+0VqtFpVJhNJBILKqYqtVKpRJyuXwu4k58zjgcDhKJBOXF8vX1NRqNBs7OzsYOKa+srJBK8aToyL8D8ZZKpTg5OSG7D94vcOr1OkKhEPb29pY6T8OCBQuWdLNYIvb29lAsFslhq263i5ubG3C53IW1NE4D0SS3DMINAF6vF3K5fKY1ZmVlBaenp2i327i5uZlqNXg9yDTv8QmFQrDZbIwTCIjoQybEtNPpoFar0d7FIIpj6A5eMhmi7PV6n0K66Q5SMiXdwP+o3XTA4/GgVqsZE+d51W6bzYZ0Oj03sXU6nUilUqjX61N/rlgs4vLyEjqdDgcHB1OJplqtxvr6Ou7v7+eaz/jdxFsgEODo6Ag8Hu/NNajdbuPh4QE7OztLF0BYsGDBkm4WSwSPx8PR0RHi8ThyuRyurq6g1WrhdDqXGkVFkLD7+3vs7OwshXCHw2EMh0Ps7OxQvum5XC7o9Xrc3NygVCqN/blgMAiNRjN3s1w2mwWHw2HsXx8Oh0in04xV8ufnZ+h0OtrvMxOVG/hz4wKJ9/4zlG6CdNP1dQPzWUy0Wi0GgwFj4igWi2EymeaKEAR+Japsb2/D5/ONtauMRiPEYjGEQiG4XC5YrVZKOyNmsxlKpRJer3fh58ZnEm8OhwOHwwGdToerqyvUajV4vd6pO3UsWLBgSTeLvxFEIhF2d3fh9/uxsbExV/QdE8K9jJvJ09MTY/+j2WyGy+VCKBRCJBJ5Yzd5fn5GvV6fO+N7MBggGo1ie3t7rte4urpKyyP9Gp9pLZmHdH+Wp5uu0k0sBuj+nlKpRK1Wo+2RVqlUaLfbtCMHCcyrdlutVry8vMztn9br9ZBKpR8IPGEnaTabOD4+pp2Ms729jeFwOHfayu8m3sSx3t7exu3tLbngYcGCBUu6WfxDoFarYbfbkU6nF1Zk8bsId7lcRiwWg9vtZux/XFlZwdnZGXq9Hm5ubtBqtcjWyb29vbl3AeLxONRqNeMyndFohGQyydjLXa/XMRgMaBMbovqdKen+U+0lfD4fg8GA9oAYE7Wbx+NBLpfTJm/ErghTtdtgMKDRaMy0dkx73ouIEASA3d1d5PN5UvF/fn7G1dUVdDod9vb2IBKJaD8mh8PB/v4+SqUS42zyP4l4t9ttrKyswOFwsHF9LFiwpJvFPw1msxkajQZer3eupIJpqNVqSyXczWYTXq8X+/v7jBXg1yTD4XBgfX0dd3d3uLu7g9lsnrsBr9VqIZvNYmtri/FjPD8/QyqVMibtTFVuolyIrvpMqMFMfu8zSDfx3D7LYrK6usrIYqLX6xlH5HE4HJjN5rnUbuKcYUr8Xy9yHA4H/H4/vF4vEokEjo6OKNtJpj2u2+1GLBZjdHz/FOKdy+WQTqcXssBnwYIFS7pZULxJvs5JZfp1Otja2oJAIEAgEFh4LFStVoPH48Hu7u5SCHev18P9/T3sdjttBXcaNBoNjEYjut0uqtUq46xhAuFwGFardS4ymUgkGKvco9GIUe07wNxawmSI8rNJ92cPUzIhhXK5HBwOh7HFw2QyoVwuz3UO2+12RKPRuYcWh8MhBoMB6vU6Tk9PaQ/mToJEIsH+/j58Ph+azebfjnjX63VEIhEcHBzMlf/PggULlnSzoEG4X2eivi4soPN1JnA4HAtve3tNuJeR+T0cDvHw8ACDwcCITE5Do9FAOp3G2dkZDAYDbm5u8PT0xGhRUiqV0Gw25yoaKhQK4PF4jBvpyuUyxGIxo52AUqn0aX5ugnR/hqcb+FylWy6Xo9PpMLJyzTNQyePxsLa2hlQqxfg4KRQKKJVKxop5v99HMBhEJBKBy+Uiz+lFQqlUYmtrCx6PB/1+/29DvFutFjweDxwOB6NFyLjr/jJFGhYsWLCk+x+BSYTuM0oJuFwuXC4XSqUSMpnMQgj3/f390gg3APj9fgiFQmxubi6czHu9XtjtdojFYuj1epycnCCfz8Pj8dCKUCOKPux2+9yV8UxVboC5tWQwGKDRaDDaRWBCuokK+M/KJWbSSrmyssJITeVwOHNZTPL5PONrgdlsRi6Xm2t2w2azIZPJ0FbMq9Uqrq6uAACnp6dYXV3F3t4eQqHQwnO2jUYjtFotHh4elnLdXDTx7vf7eHx8xObmJqNkpEmEe9kiDQsWLFjS/Y/Hsqt4CW9kMplkVD/9+iZ7f38Pp9O5NMIdj8fRbrfhdDoX/tjRaBRSqfQNSRWJRDg8PIRKpcLV1RUymQyl9yGTyUAsFs91HF5eXtDr9RhHLA4GA5RKJUYxheVyGQqFgpHHlIm95DNVboBZKyWPx4NAIGCUKMLUYiIWiyGVSidGWlJ5nTqdDul0mvGxEolEMJvNH4q1pp134XCYXMDu7OyAx+MBAGQyGSwWC/x+/8LfU5vNBj6fj0AgsJRzZlHEm9ipU6vVjBpuJ90L2OZIFixY0s1iARfUz1AoRCIRXC4XgsEgoxt8tVqFx+OB0+mcO9N6Ep6fn5HNZuFyuRY+cFQul5HP5ye2TlosFpyenqJYLOLm5maqz7bX6yEej8Nut8/1nJLJ5FyRjvl8Hqurq4zU43K5zOh9HI1GaLVatLfLPyu55DUZpat0A5/v6wbms5gAvyLpMpnMXL5sq9VKNqpOQy6Xw+XlJQDg/Px87KLTarViMBjMtRCYBKfTiXq9Pnej5rKIN0G4xWIx4526WeR62SINCxYsWNL9jyXcnwmZTAa32w2/308rauwzCHe1WkUoFILb7V44OSNaJx0Ox1SCKhKJcHBwAJPJBK/Xi1AoNNZDGo1GYTAY5hoWq9fraDQac3nWmVpLCNLNxM/dbDYhFotpL4o+c4gSYObpnod0E556Jiq5TqdDuVxm7FeWSCRYXV1FNptlfnPgcmGz2RAKhcZ+v9Vq4fHxkUzhsNvtpLo97jrndDoRj8cXPvzI4/HgdruRTqfn2rVbFvEOBAIQCATY3d1dmojC2khYsGBJNwsGhPt3XDRlMhmcTifu7+9Rq9UoE+69vb2lEW6iGtnpdC6lGjkQCECn01EmmQaDAWdnZxgMBri4uHjjha/X6ygWi9jY2JjrOSWTSVgsFsbnQLvdRqPRYGRvabfbGAwGjI71PEOUn026P1PpBpir3Xw+H6urq3MNIBJlOfMs6vV6PXg83hvyPhqNEI1GcX19DZlMhuPjY0rRlhKJBFtbW/B6vQsXGohdO7riwbKJdyAQQKfTwc7ODkuIWbBgwZLu30m4if++njAn1Ir324WTvr4oqFQq2Gy2mcS7UqmQhJtpusYsDAYDeDwerK+vL4XU53I5NJtN2jnaRPbw3t4e0uk0bm5uUKvVEA6Hsbm5OddAYKvVQrlcxtraGuPHIGrfmdzcmarc85LuP93T/btIN7HQm8diIpfLIZFIGOd+E3gdIfj8/IyLiwu0222cnZ1hfX2d1g7H2toaRCLRQpOTXr/enZ0deDweRourRRPvQCCAWq2G/f39iTsAi7qPsGDBgiXdLKbg9WQ58W/c9yb9zjJgMBhI4j2OZFQqFTw8PCyVcI9GIzw+PmJ1dRVms3nhj99utxEOh+cqpVhdXcX5+TmMRiPu7u7QaDTmXhwkk0mYTKa5bs6/w1oCMM/o/mxPN1OlWyqVot1uM/rcqVQqvLy8MPpdjUaDRqMxV+rH+vr63F5nuVwOmUyGi4sLJBIJ7O7uMm6VBH5Flmaz2ZlecSbQ6XQwmUzweDxLKwCjQryDwSBqtRoODw+XurD8XSINCxYsWNLNYgEwGo1YX1+Hx+N5Exf2GYQbAOkfnXcgcRJ8Ph+sVuvclhWispvI0766ukIymWQ0uNbtdpHP5+daZNRqNYxGIygUik8n3X8XewlTpZvD4UAsFjPyIgsEAohEIkq2rXF/V6vVzqV2q1QqcDgcxkkovV4PkUgE9Xod/X4fLpcLq6urcy9+dnd34fP55i7gmbTQkEql8Pl8SzuXphHvWCyGUqm0FMI9KcHkd4g0LFiwYEk3iwXAYrHAYDDg9vYW7XabJNz7+/tLJdzpdBqVSgX7+/tL2TZNJpPgcDhzZWC/fzyFQoG9vT0cHByQGcV0M5ZTqRQMBsNcN+h5VO5arQaRSMSIAPf7ffT7fUbNep9tL+FyueBwOIyI3rwWE6ZxcwaDYW57iNVqRSKRoPU7w+EQ6XQal5eXGA6HOD09xfr6OuUIwVnQaDRQqVQThzTnxe7uLrrd7lJsLNOIdywWQy6Xw9HR0aee2yxYsGBJN4u/MTY3N2EwGHB9fQ2Px4P9/f25Fa5pKBaLSCQScLvdS/E/EpFii8r67nQ6SKfTsNlsAH4No7pcLthsNiSTScrku9/vI5vNztVgOU/tO/B7VG6CdH+m0g38vYYpgV/Ni0SVOlPodDp0Oh1K1fIE2f7x4wfK5TJcLhe2t7chEolgsVhQr9cX1tBot9tRqVQW3lZJLLBcLhdyudzcixaqxNvn85GEm613Z8GCBUu6WdCC1WrFcDgEl8td6k2k0WjA7/fD5XIt5e8QrZMEeVgEIpEITCbTh+er0WhwenqKzc1NxGKxmeQ7k8lArVbP9bpLpRKkUinjx/gdfm7g8z3dwO8ZplQqlajVaow9xvMOVBK7O9O83a/JdrFYhMvlgtvtfpNKMitCkC54PB6cTieCweBc7ZnTFlgHBwcIhUKUFhzzEG+1Wo3n52ccHBywhJsFCxYs6WbB7Kb4X//1X1hbWyOtJotGt9uFx+PBzs4OYz8yFYIsk8kYtTSOQ6VSQaVSmVpio9FocHZ2BqPRiHA4PJZ8E0RnXrvLPNaSwWCAWq3GeBeDqdI9HA4xHA4/rQL+NRH7bKWbx+NBLpfPbTGZx5trNBpRrVY/+NJfk+1sNgu73Y6Dg4OJEYA6nQ4CgQBPT08LeT8UCgWMRuNS2iqBX0OwTqcTDw8PS7l+Ab8sJZVKBefn53Pl9LNgwYIl3Sz+008QLpe0mtze3jImHpOIl8fjgdFoZFx7PgulUgmFQgE7OzsLe8xwOAybzTYz/YTL5cJsNuPr168wGo2IRCJvyHc2m4VcLp9rqLPf76NcLjM+fi8vL5DL5YyTXJiS7l6v91s8r0yVbolEgl6vx3jwb3V1lbHFRCKRQCQSzWXr4HK5MJlMpNo9jmyfnp5Sipy02+2IxWKMi3veY3NzE51OZ2FE/j3UajU5HL7owc3XHm6WcLNgwYIl3f9AvM/2pvN1pgOKm5ubMJvNuL29ZZTEMA4+nw9SqXTuUplpxC4QCMDpdC5MUc1ms+ByubRU89fk22w2I5FI4PLyErFYbG6VO5/PQ6VSMX5981hL5iHdv8PPDTBvpQR+qaa/w9cNzG8xAQCz2YxCoYBEIoEfP37g+fmZFtkmIJPJoNFoEI/HF3Y929vbQzQaZdTeSfW1K5VKPD4+LizNIxgMsh5uFixYsKT7n064X0dBvS7ZGfd1AouIj7JYLLDb7fB4PHMT72g0im63C4fDsbRjFQgEoNfrFzYAOhgMEI1Gsb29zfi9MxqNODs7g0ajwWg0gt/vRyqVYqwazmMtIUg304zxdrsNPp/PiPD/LtItFAoZF6fMYzGRy+XodDqMCb9er0exWGTsC2+1Wkin0wB+lSgdHh7i5OSEcZnS1tYWcrncwkgysfj2+XxLi7jb3t7GaDRCOBxeyLWlWq3i9PSUMeEed9yXKZywYMGCJd0saGLSDWnS1xddjGAwGOB0OuHxeBhvd+dyOeTzebhcrqXdQLLZLNrtNu3WyWmIx+NQq9WMBwdfo1QqYW9vDw6HA/V6HT9//kQ0GqXlO221Wmi1WoxJM0ECmb6eeYYoPzsukMA8Svc8pJvD4cxlMREIBFAoFLSTPlqtFvx+P25vb9HpdOB2uxey4BEIBLBarQshsATMZjN4PB7teEM678H+/j7K5TIymcxchHve4ptJhHvZwgkLFixY0s1iyVi0QqJSqeByueDz+WiXblQqFYTDYbjd7qWRrna7jUgkAqfTubDX3Gq1kM1myYjAeQk38MtrqlQq4XQ6cXp6itFohJubG3g8HpTL5Zk313lq34FfKvc8uwDzxAX+juQS4Pcp3cTn5jMsJsPhEIVCAVdXV/B4PJBKpfjy5Qt2d3ehVCqhVqvnIp0ELBYLms3mXK/pPRwOB9Lp9MIsbO/B5/NxcHCAeDxO+3kPh0P4fD60Wq25CfekkpvPEE5YsGDBkm4WC7x4v68DnqaeMIVCoYDb7UYgEKDsNW21Wnh8fMTe3t7Sho5GoxG8Xi/W19fnbp18jXA4jPX19YUsFBKJxAcvt1AohM1mw7dv36DVahEOh3FxcYF4PD6RJP5Oa8m8pPvv6On+3aRbq9WiWq1OPB9arRYikQh+/PhBZsh/+fIFVqv1Tfa91WpFOp2euyadw+HAbrcjFAotjBSKRCLs7OzA5/MtrcZdLBZjf38fXq+XcsvocDjEw8MDAMwtGMw6VuOq21lrCQsWLOlm8YcT7mVDJpPB7XYjkUjMbH7r9/vweDzY3NxcaqtlMpkEj8ebq2zmPUqlEprN5lw17QSq1So6nc7EtBHC931+fg6n04lWq4Xv37/D4/GgUCiQ7221WgWHw5kY7UaVdM/zXsxrL/m7Kd3E82X6+xKJhCTHjC7WXC40Gg3y+fwbMlgoFHB3d0e2R7rdbhwdHU3cxVhZWYFcLp97MBP4FY0pEokWopwT0Ol0kMlkC2u/HAelUknOp8xahPX7fdzf30MoFMLhcCylvOs9KX8tkCxLOGHBggVLulksmHAv+wItk8lwcnKCUqmEQCAwcdv04eEBarUaa2trS3sutVoN6XR6ocOZxOCV3W5fyLEkVG4qj6VQKOB0OvGvf/0LcrkcsVgMf/31F4LBIJLJ5Fwqd71eh0AgYFwWNBwO0el0SCJJF78rMpDP588VdfenWExeXl4QCATw119/IZlMQqfT4du3b9je3qa0EJpVlkMHdrsd8Xh8YRGCALCzs4NCobBQ68q4Y6nT6fDw8DBRqGi1Wri9vYVCocDu7i5LeFmwYMGS7v80wk389/V246SvE8rIuC3LRRKZ4+NjdDod3N/ff1COAoEA+Hw+7Hb70o4L4bdcZOskAKTTaYjFYmg0mrkfq9FooFarwWg00vo9gUCAjY0NnJ+f4/DwEDweD8ViEdlsFvF4nJFyuoioQKlUypiE/C6lm8P5/9i706c01iwM4A/72iyyCCqiYKLZTW4yd6ZmquZvv59mJm4xc5NoxGhAURbZd2iYD6lmiHGDflFMnl9VKokmLQLSTx/Oe14N9Hr9vWwxqVarKBaLqFQq2NnZgdFoxKtXr/Dy5UsEg8GhLmKcTicMBsN3VXM1FyI+n+/ad7uGfU1ZWVnB7u6u0DB/3uLiIoxGIz5//nzhhen29jZmZ2exuLg49sB92fEZ9IkYuumOnH+r8bLe7cFwfRur3rVaLZ48eQKbzfbd7pWJRAKVSgUrKytjvV/29/chSZLQTXba7Tbi8biwi4VEIoHZ2dmRN6IBvr2zIEkSnE4nlpeX0el08O7dO2xsbCCRSKDZbN5a6FbTM39XoRu4+8WUhULhxj+LzWYTiUQCm5ub+O9//wtZluH3++H3+7GwsDDyOw0AMD8/L6zavbCwgHQ6feMe6ZtwuVzw+XwXBmKRVlZWUK1Wv7svUqkU/vzzTzx8+HDoi2Q1r+0XFUhuo3BCRAzddN+eTFototEo/H4/Njc3EY/HcXx8jKdPn461D/Ls7Ay5XE7orpPAt1ni09PTQhZ9NptN5HI5zMzMqD5WOp1GIBDo96X+7W9/QzQaRb1ex8bGBt69e4ejo6NLw2G320WpVLqzySW9Xg+yLN/6FvCKu1xMqbT0XDWdQ5mpvbW1hc3NTdTrdUSjUfz++++IRqMIhUJCKtQejweyLKva6XLw+wqHw0JHCALfKtG1Wk1I//lVr1tPnz7F8fExstksjo6OcHh4iBcvXqhaaHyTn4Oriio3+TgR3S963gUk2vz8PCwWCz59+oRwOCy03eM8ZdfJx48fCw32lUoFZ2dnePPmjZDjJRIJBAIB1UGz3W6jUCj88M6By+WCy+XCgwcPUKlUkMlk8PHjR2g0GjidTvh8PjgcDmi1WhSLRdjtdlX3V6VSwfz8/Ej/9y6r3EpAVFPpVlvNVardDoejfxFULpeRzWZRKpXQ6/XgcrkQjUZht9t/eGfEZrNBp9OhWCzC6XSqui2hUAjxeFzIBlIzMzNIJpM4OzsT0o6lBOKVlRW8f/8eLpdrbK8lRqMRT548wfb2Nmw2G3eZJCKGbro/fD4fDAYDPn78iE6ng0gkMpbexN3d3X7VV6RYLIaFhQUh1dh2u41UKiUkwGcyGUxNTV0amJWJJpIkIRKJoNFoIJPJIB6Po1Qqwe12o91uw2q1qpqEcB/HBQ4GrFEr3TqdDgaDAfV6feTWDpfLha9fv0Kn06FQKPQDuNvtxsrKyo2OqyyoVPu8n56exuHhoapJNIPPvWg0iv39fUxNTQn7ebfb7QiFQtjZ2cGLFy/G8pxoNBqIxWLweDxYXl5W1QJGRHRpIYF3AY2Ly+XCmzdvUCwWsbOzI3xB1MnJCZrNJhYWFoQeN5PJQJZlYZNWjo+P4fP5hATN09PToaaWmM1mhEIhPH/+HH/9618RDAZRq9WQy+Xw73//G7u7u0gmkyiXyzd+61qpEo/6/dzVbpQKNZVuYLQWk1qthpOTE3z+/Bm7u7uoVCqoVqsIBoP4y1/+gmfPnmFubu7GQd7v9yObzQqZtT03Nyest3tqagpms7m/5bwooVAIvV4PR0dHwp8PyoJJv9+PlZUVBm4iGhtWumnsAef58+fY29vDu3fv8OTJE1WLvxT1eh0HBwdYXV0VWkHvdrv93SxFkGUZyWQSL1++VH2sWq2GZrM58gJIvV4Pu92OXq+H33//He12G5lMBsViEYlEAu12u79IU5IkOByOC8Ox2kWUd7UbpcJoNKra8VAJ3V6v98LPdzodlEql/q9yuQydTte/X1+/fo1Pnz7B6/WO3DNsMplgs9mQy+UuvR03FQwGEY/H0Wg0hLRURKNRvHv3DtPT00IvrlZWVrC5uQm32y1s46tMJoNYLIYHDx6ovh+JiBi66TuDAfX8jmfDfHzYsPfo0SMcHR1ha2sLy8vLqno+e70ednZ2EA6Hhe9smUgk+sFThJOTE7hcLiEXGqlUCn6/X9VFhjK1RKPRwGg0YnZ2tr/pT6vVQrlcRqlUwtHREcrlMkwmExwOB+x2O6xWaz9w3tfJJcqF4KjtJUrozmaz/e+lXq/3x0Eqmx8pU2YCgQCWl5d/6EV2uVyqdwRVWkzUhkWdTodgMIhEIiFkMbLVau23rYhc3Gw2mxGJRLCzs4NXr16pvtj+8uULcrkcnj9/LnT3WiIihm66cGthpa93mI+Pam5uDpIk4cOHD5iZmUE4HB7pxBmPx6HX64XsEDmo2Wzi+PgYv/32m5DjKW+HP336VMjx0um06mNdNSrQaDTC4/H0L4h6vR5qtRqKxSLK5TIymQxqtRq63S5MJhNisRhsNhvMZjMkSbpx/3ur1RJyETKqUUYGyrKMSqWCer2OUqmEXC6Ht2/f9vvjlfsgEAhAkqRrWxTcbrfqUXg+nw/7+/vodDqq1x7Mzc3h7du3WFhYEFKdDofDWFtbw8zMjNBAGwgEcHZ2hoODA0QikZGO0el0+tvMr66ujnzfXfV6eNFrp9riBRExdNM9ctmL/W2eBJxOJ968eYM///wT1WoVDx8+HOokXyqVkEwmhQXjQV++fMHMzIywCQmpVAo2m031AjUAKBQK0Ov1qgNMPp+/cQ+8RqOBzWb74WsqYUqZupFOp/vtGkoIt1gsMJlMMJlMMBqNMJlM/ce51Wr1J3fchYsq3e12G61WC81mE61Wq1/BrtfrqNVqkGUZdrsdFosFFosF3W4Xjx8/htVqHakHWJIkNJtNVTtz6nQ6uN1uZDIZ1esPDAYD/H4/jo+PhayR0Ov1CIfDiMViwhc/Pnz4EOvr6/B4PEO/I1UqlbC7uwufz4f5+fmR+7evKhac/5zo4gURMXQTDXWCX11dxefPn7G+vo6nT59CkqRr/58sy9jZ2cGDBw+EtycUi0UUi0WhW8iLerteCfBqtn0HvvVi63Q6VX27vV4PjUYDwWDwh8DS6XRQrVbRaDRQr9f7Y/CazSaazSY6nQ4MBkN/C/l8Pg+9Xt+fCKLT6WAymfq7Rg5WIJWPX6XVavUXFsqy3A/Wyp/b7TZkWe6H6/fv3/dvm9JuM3iRIEkS/H4/rFbrDxdi6XQaGo1GVWhTWkz8fv/Ij8f09DQSiYSQRb9zc3PY2tpCKBQSMn4zGAwimUwim80K7Zc2GAxYXl7Gzs4OXr9+fePbmkwmkUgk8PDhQ1UbQw2+EzjM54iIGLp/UZdVW26rCqPRaLC8vIyTkxO8f/8eCwsL17aL7O/vw+l0jmXBUywWQzQaFTa5IJvNQq/XC5l/3O12kc1msbi4qOo4anehBL4tYDWZTBfeT3q9Hk6n88rqY6vVwtbWFqanp6HVavtBWGlbaTab6PV6/Y8rlI8P+uOPP777u9Fo7N8urVbbvzBT/qwEfJvNhl6vh9nZWZjNZpjN5qFDpojedmVLeDWhe2pqCru7u0IWQVosFrhcLpycnGBubk7Iz3g0GsXe3h48Ho/QIDo1NYWpqSns7e1du+hZlmXEYjFUKhW8fPlS9QU7q9RExNBN9yZwDwoGg5AkCZ8+fUI+n8fKysqFPZZnZ2fI5/N4/fq18NtwcnICnU4ndAv5eDw+8uYxFwV4h8OhOizk83nVFVG185yNRiM6nU5/jvuo/vjjD/zzn/8c+f8nEol+K8wo1O5MqYTueDyu+mfZ7/cjlUohHA6rfq6FQiF8+PABs7OzQkKyMmnk6OgIoVBI6M9tNBrF+vr6lZX0Wq2GnZ0d2Gw2rK6ujnVnXLaNENF1OJCUgfvOTxh2u73/NvHa2hqKxeJ3n2+1Wvj8+TMePXok/KQpyzIODw+xtLQk7Jj5fB6yLAuryItoLel2uygWi6or72qru8oW8Hc5p1sJ/2onmKgN3cpi0nq9ruo409PTSKfTQu4XSZJgtVqFHQ8AIpEIEomEqtnoF568tFo8evQIe3t7Fx779PQU29vbCIVCWF5eHmvgHnwdVS5W2GJCRAzdv3jgHjwxnD85nP+40puo/BpnKNdoNHj06BEWFxfx559/4vDwsN+f+/nzZwSDwbEsvjs8PITH4xGy2FGRSCSEVblbrRZKpZLqAF8qlWCz2VRPubjv4wIVd7FBzkWUFhO1QbnX66maPT4oFAoJ2yxHubgIBAI4ODgQ/jhKkoRgMIjd3d3+xzqdDj5+/IiTkxO8ePFC6DtY111QKr+UvxMRMXT/ogZPCudPDhd9/KITybgFAgG8fPkShUIBW1tb+Pr1K1qtlpC3zs+r1+tIpVKqe6UHlctl1Go1VX26g9LpNLxer+pecxH93KJC911XuQH1lW6LxfJD3/ldhW7g/zO7RVDmuJ+dnQm7v8PhMHK5HCqVivDHMhwOo91uI5lMIp/PY3NzE0ajES9evBA+x3/U193bKl4QEUM30VCsVitWV1fhdrvx9etXVRuIXCUWi2F+fl5oCEwkEgiFQsLeWhbRWgIAuVxOdejudDpot9uqZmzf9W6UCrUb5CjPUxF93YVCQXUQU1pMRAW6+fl5odVunU6HhYUFxGIx4Y+lsij74OAAu7u7ePjwIZaWlsa+nftV9/X5z9128YKIGLqJhhKJRLC6uoqzszN8/PgRnU5H2LFzuRwajYbQDXbq9ToKhYKQ8W3At6pyu91W3YfdbrfRaDRUt+eorXIDk9NeMsoGOeeJaDExGAwwmUyqW0OU2egiquYA4PV60Ww2USqVhN3nwWAQsiwjk8kIfSzL5TJ2d3fhdrvx6tUrIRODiIgYuumX43A48OrVK5hMJqyvrws5Yfd6Pezv7yMajQpd7JRIJDA7Oyuswiaqyp3P5+F0OlV/rz9T6BZR6RbZ110oFFQfR2SLiUajEd7bDXybOPLly5f+eg01ut0uDg4OsL29jUAggMePH0/Ec4uIiKGbhJ2MBxdbnv/cVf9+1NCn0WiwtLSER48e4eDgAB8/fkSz2Rz5ezg+PobZbBbattJqtZDJZIRWztPptLDQLeJ7FRW6J6GnW+1CStGhW0SF2u/3I5fLqe4zVwQCAZRKJdRqNWH3u8vlgiRJODo6UnWcUqmEzc1NlMtlvHr1CjMzM3xxJiKGbvq5Avdgb+JgiL4qUIvqZ3Q6nXj9+jWsVis2NjaQTCaHPka73UY8Hkc0GhV63xwdHSEQCKieDjIYlI1Go5CFYKIWUaqd0a3c/5PSXjIplW6n04lyuay6+qtsxpTNZsWcHLRazM7OCq92RyIRHB0djXTR0+v1kEgk8PHjR8zMzODZs2cj/4wMu5W72uIBERFDNw11wrsqjN/042qDwMLCAlZXV5FKpbC1tTVUJe7g4ADT09NCpxp0Oh1hu/gpRLWW1Go1aDQaVYsfFT9be4naSrfyfag9jk6ngyRJQlpMlI1yRJmZmUE2m1X1ztJ5ZrMZwWAQX758Gfqib2NjA+VyGb/99htmZmZUvXs27Oe4GJKIGLppYsO4cgIbR3XIarXi5cuX8Pl82Nra+m6u91Un7bOzM+HjB4+Pj+H1emEymYQcT5ZlnJ2dCRk7KKrK3Wg0oNfrVVfyf5aRgQpR1W6XyyWkxcTj8aBcLgvbiEav1yMQCKhuBzlvfn4ehULhRgtIlW3cd3d3EYlE8PjxY1XPoauKARd9jmP+iIihm+7UTU5E52d/j+Nt2bm5Obx+/Rr1eh0bGxs/7GY5KBaLYWFhQVgLCPBtMVcymRS6xXU2m4XT6RQSTidlPrdiUtpLNBoNdDqd6ok4k9bXrdVq4fP5hFa75+bmcHp6KnR6kE6nw+Li4rUjBI+Pj/H27VtotVq8fPlSyNqEUQI0W0uIiKGbJjZw3yaTyYRHjx4hEong06dP2NnZ+aHSl8lkIMuysHF+ipOTEzgcDqHtKqJaS3q9npCt30WF7l6vh06nMxGVbmByxgYC33ZWbDabQqrvfr9f6DbuJpMJHo9npDUUV5menkav17vwtlarVWxvbyOdTuP58+eIRCJjn7t92evabRQPiIihm0hV4L7tk5PH48GbN29gMpmwtraG09NTAN+q0fv7+1haWhL69Xq9Ho6OjoRt+Q58a78ol8vweDyqj1UqlWCxWISEXBGLKCeltUQxSWMDNRqNsBYTl8uFdrst5HYp5ufncXx8LGTU36ClpaXvRgj2ej18+fIF29vb8Hq9ePHihZB3WIZ5HJTXLYZrIhJNz7uAhjkhnT8ZXbcr203/rSjK29bT09P4/Pkz4vE4JEmC0+mE0+kU+rXS6TTMZjMkSRJ2zFQqBZ/PJ6SqJ6q1BPhWeVTbCz8prSUKUZVuUSP1lBYTEb38yszuSCQi5LZZrVZIkoRUKiX03SKHwwGn04l4PA6bzYbDw0PYbDa8fv361p8rg69Pg8UF9nQTkSisdNNQJ6Xzvy47aV30f26TspV8NBpFJpNBt9tFo9EQ+jUSiYTQKrcSukW0logM3cp9p7aFZlImlyhEVLp1Oh0MBgPq9bqw0C2Csi28SOPYLAcAfD4fEokEjo6O+gslJ+l5ohQPlF8M4ETE0E10AY/Hg7///e+QJAnv3r3DwcGBkM1Dzs7OoNFohFWSgW8tHLIsC6nIdzodVKtVIceq1WqwWCyq326fxPYSEVM+RLWYKGMdRQR4q9UKg8EgZAyhwul0wmg0CtvGvdlsYnd3F3t7e1haWsLq6qqQtqphwvRNP8dxgUTE0E10AzqdDvPz83jz5g263S7W19dxfHys6gR6H6rcIrZ+B36+ySWKSRsbCIivdoucYgKIqXZ3Oh0cHh5iY2MDRqMRb968QTAYZA81ETF0E42Dmu3k1YTvaDSKZ8+eoVwuY319faRQUiwW0Wq14PP5hN0fyhSHSWstAcQsogR+zvaSSQ7dfr8f2WxW6OJHj8cDWZZHuo3dbheJRAJra2totVpYXV3F4uKi0BGeREQM3UTnAvQw28lf9e9HYbVasbKyguXlZWSzWaytrQ21dXY8Hhc6l1sJyWazWcjOkcrxRMw0BsRVuictdItYSDmO0F0oFIS0MRiNRjgcDpydnQm93+bn54eqdvd6PZycnGBtbQ2lUglPnz7Fw4cPVa0RuO7C/PxrCmdsE9EkYImBbt11u8Hd1snR4XDgyZMnKJfL2N/fRzwex9zcHHw+36W3oVqtolKp4MmTJ0Jvi8jWknq9jm63K2x2uMjQ/bONDFQu4hqNhpDnrsFggMlkQrlchsPhUH3blG3hRb4r4/f7cXBwcKN3QDKZDBKJBHQ6HZaXl4XMjL/qPr5uN0kuhCSiu8RKN018GB83SZL6b3Unk0lsbGwgl8td+G+VYC5yow5ZlpHL5YSMigPEtpa02210u10hW9z/jCMDlSBnNpuFjg4UtQDS6/WiWCwKubgY/H7n5uYQj8evDNvr6+tIJBIIh8N4/vy5sMB90esEwzQR3QesdNOdmqSTpdvthtvtRiaTwcHBAb5+/YpQKASv1wsAaDQayOfzePjwodCvm8lk4HK5hPW25vN5YZVNUf3cwOS1l+j1esiyLKRCrbSYiHhHwO12C1uoq9Pp4PF4kE6nMTs7K+y+CwaDiMfjaDQaMJvN/Y9ns1nE43FotVosLCzA4/EIfefqqteK294TgIiIoZsYuFXy+Xzw+Xz98H14eIhQKIRSqYRgMAidTif066VSKWGBqNfroVAoCLswEBUkJ20LeIXSYqL2YkBkX7fT6cTHjx/R7XaFvKPi9/vx9etXoaFbp9MhGAwikUggEokgm83i6OgIer0e0WhU+EZUw4ZxVr6JiKGb6B6dFJXwnc/nEY/HUSwWsbCwgE6nI6wq3Ww2Ua1Whc0nLpfLMJvNwsJttVoV0lvcbrcnLnAD/28xERG6T09PhQVaSZJQKBSELIZ1u93Y3d1FvV4XtlAXAGZmZvqLkG02G6LRqJAWEiIihm4igYF78Hdg8raTPx9alD7b4+NjvH37FjMzMwgEAt+9tT4KZZGbqLfgRfZzK6FbxLbfk9ZaopjEsYEA4HK5hE2g0Wg0/QWVCwsLqo9Xq9VwenqKVCoFt9uNUCgk5MLsZ7+IJyJi6KZbd93J8bLt5O+ay+WCy+VCrVZDMpnE2toavF4vZmZmRn47PZVKYXl5WdhtzOfzCIfDwh6nn3Vc4GDoFrGY0mKxoN1uQ5ZlIe1Hbrcbnz9/FvZ9Tk9P48OHD6pCd6FQwMnJCfL5PLxeL1ZXV4VWztU+Vy+6ML/rC3YiIoZu+mlcdkK9ycdHPQlbrVYsLS0hHA4jmUzi06dP0Gq1CIfD8Pl8N+7DLZfL6PV6wqqEsiyjUqkI66et1+swmUxCQuQkt5eImuxhtVqFteNIkoRmsynsfrPb7dBqtSiVSkPdPlmWkclkkEwm0W63EQgE8ODBgzvf0GaYC3MGbSJi6CYSELgvmsF73WxeUSdhg8GAcDiM+fl5pNNpHB8fIxaLIRgMYnZ29toxeyJncwPfKpEOh0PYOENRVW5gcivdosYGAv9vMRERujUaTb/FRNQoSWVb+JvcvkajgWQyiZOTE9hsNszPzwufREJExNBNdE8MG57H1fep0WgwPT2N6enpfr/r5uYm7HY7AoEAPB7PD0FY2fb91atXwm5HLpcT3s8tMnSLmPUtmsFgEDZfW3Rft7IlvMjQvbGxgaWlpQvDc7fbRTabRTqdRrVaxfT0NF6+fClskyUiIoZuol/IuPs7rVYrIpEIFhcXkcvlkEgksLe3B7/fj0Ag0J95ncvlYLVaVS/EHJTP5/H48WNhx6tUKggEAsJCtyRJExm6RVa6RW657na7r9yAZlgmk6l/G5XZ88C3Nqd0Oo10Og2r1YpQKASXyyV0A6iLLngva/US0QJGRMTQTTTGMD3sAs1xTjzQaDTweDzweDz9UPP+/XuYzWb4/X4UCgWhrSWNRgOyLAvbyAYQW+n+FXq6RVe6lUWKIkf9+f1+pNNpOJ1OpFIppFIpNJtNBAIBPHv2TOjz57JwfZNAzaBNRAzdRPc0cN8lSZIgSRIikQjOzs6QSqVwdnYGjUYDo9EIt9utuqqYz+eFzkiWZRntdltY2PvZp5coAV7096q0mIh4HJTNds7OzvrjCBcWFoQ8/6772TwfvLmdOxExdBP9xIH7rk/oGo0GXq8XXq8XzWYT2WwWyWQSe3t78Hq98Pv9Iy/Cy+fzwjbYAb5VuUX28k7yQkpRlW7g/9VukaE7k8lgZmZm5GOUy2Wcnp4il8vBYrEgEonA5/PdyuMxyrbtHPFHRAzdRBMYuC86Sd+Hmb0mkwmzs7OYnZ1Fu91GKpVCLBZDu93G1NQUpqenhwrghUIBS0tLQkO3qNaSSd0CHgC0Wi00Go2w+dpK6Ba1oNXtdmNvb+/CavFVisUiUqkUCoUCDAYD/H4/FhcX73zU32U/e8oFMbdzJyKGbqIJdN0ulsP+n7tiMBgwNzeHubk51Go15PN5fPnyBa1WCy6Xq18Bv6wFoFwuw2g0Cq1cVioVYf29k9rPPXj/t1otIS0cNpsNpVJJ6G0zmUwol8tXXoR1u12USiWk02nk83mYzWZ4vV6EQqGJ2cCGiIihm4gmhtVqhdVqxezsLFqtVn8CSqVS6e+I6fF4vgvYord+B75Vun0+n5BjTWpriUJpMREVuk9OToTePrfb3Z/Bfv5+zeVyyOfzKBaLkCQJPp8P4XB4IsczDmJPNxExdBP94tTscCk6LBiNRgQCAQQCAXS7XeRyORQKBRwcHPQXYLpcLuRyOczPzwsP3SJndN+HSrcINptN2NzvwdCdSCQwOzuLQqGAfD6PQqGATqcDr9cLn8+H5eXlsS2GHAdu205EDN1Ev3jgHmaHy+t2vhRJq9X2F2EuLS2hUqkgn8/j6OgIxWIR8XgcpVIJU1NTkCRJ1c6BzWYTWq1WWFBut9v3otItgk6ng8FgEDLmr9froVKpoFgsolgs4j//+Q/sdjvcbjcePXoEq9U6lh0ir5upPcpFJ7dtJyJi6Ca6lyd7u90Ou92OUCgEWZZRLpeRz+ext7eHZrMJu90Ol8sFp9MJm8021AI6kf3cwOS3lxgMhrFMMBk2dHc6HdRqtX7IrlQqsFqtsNvtePr0KRwOx9gXQl4U4ifhopOIiKGbiO6cTqfr93svLi6i3W6jUCigXC4jFouhVqvBbrdDkiRYrVZMTU1duROmyNaS+xC6jUYj6vW68NA9uOvjZfdLLpdDpVJBuVxGtVqF2WzG1NQUZmdn4XA4hExUGSZw32RKCoM1ERFDN5HwAHIfGQwG+Hy+/kLIbreLQqGAarXa7wkHvlXLbTYbrFYrHA5Hv7pdrVYxNTUlNHSPY6dDkfeXyIkjNpsN2Wz2u4+1222USiUUi0VUq1VUKhV0u1243W7Y7XaEw2HhW68Pa5SZ2kRExNBN9EsG7ototVpMTU19F6SbzSYqlQpqtRpKpRISiQRkWe5Xac1mM4rF4tCtKRe5Dz3dohZSdjodAN/mZMdiMdTrdVQqFfR6PdhsNrhcLszMzMBut8NoNI6lJ3vcgZxtJEREDN1EDNw3ZDKZYDKZvtvFstVqoVKp4MOHD2i1Wtjf30etVoNer4fdbofVaoVOp+tXx/V6/Y3C9M/W091ut9Fut/uButlsotVqoVqtotPpwGKxoNPp9CfM2O32iR/hR0REDN1Etxq4B38HxO9wOepkiJseXw2j0YipqSn84x//+O5r1+t1VKtV1Go1yLKM09NT1Go1dDod9Ho9WK1WGAyGfig3mUwwGo2wWCz9cXyTPDJwsNLd6XTQ6XRQr9fRarXQarXQbrf7368yDlCv1/dnqkuS1P/+LRbLjXujx3mhOCnPKSIiYugm+sG4d7gcZjLEXYai87fTYrFcOolDCaTK77Iso1gsotFooNFooN1uQ5ZlbG9v93fNNBgM0Ov10Gg0MJlMMBgM/QWDg39WbsswVeJWq4Vut9v/uyzL/Sq28mfl3ygBWwnW//rXv9Dr9aDT6WCxWPq3V6/XIxgMQq/X9z8+ymN9G4/VOJ5TnKlNRCToNbvHV0qiWw20VwWiy8ax3WfNZhOdTqcfeJX2DOVzSjBXQrzyZyXINZvNG38to9H43WJEZW724J+VXmol/A+G6/vUZz3s6D72YhMRMXQTMXRfEKQG8ceUhnlOXfTc4XOKiOhusb2E6A5d1vt7UY8uQxIN87w6/9zhc4qIiKGbiAFpIAiNahzbd5M411WkBx8LPj5ERAzdRDTGIHbdx686zk1CHrfvvrvH+bqLrcHAPY7Hh48zERFDN9EvS8RkiNseUUejhd3benw4bYSIiKGbiCH7gqCjdhwhw5PYcDz498vu62EWJV73+KitQI/jOUVERAzdRDREGBtHdfVn3IxlmPYPBlgiImLoJqIrg+M4wuk4Nvi5zUWhw7Z/iOyNZp81ERFDNxHdc6ID3W2F09teFDpK+wd7o4mIiKGbiPphUOSCuqv6hEVVoe/DotBxz7vmgkciIoZuIprwkD1MUBblsmrzKOF0lGA/TiIDNRc8EhH92rS8C4ho0g0G+buuhHM0IxERjYKVbiIaa1D+2bD9g4iIGLqJaGJC6H0Lp2z/ICKicdL0ePYgokl7YbrFkYFEREQM3UREREREPwEupCQiIiIiYugmIiIiImLoJiIiIiIihm4iIiIiIoZuIiIiIiKGbiIiIiIiYugmIiIiImLoJiIiIiJi6CYiIiIiIoZuIiIiIiKGbiIiIiIiYugmIiIiImLoJiIiIiJi6CYiIiIiIoZuIiIiIiKGbiIiIiIihm4iIiIiImLoJiIiIiJi6CYiIiIiYujmXUBERERExNBNRERERMTQTUREREREDN1ERERERAzdREREREQM3URERERExNBNRERERMTQTURERETE0E1ERERERAzdREREREQM3URERERExNBNRERERMTQTURERETE0E1ERERERAzdREREREQM3UREREREDN1ERERERMTQTURERETE0E1ERERExNBNREREREQM3UREREREDN1ERERERMTQTURERETE0E1ERERExNBNREREREQM3UREREREDN1ERERERAzdRERERETE0E1ERERExNBNREREREQM3UREREREt+d/AwDH2Fgs8lJ+iQAAAABJRU5ErkJggg==</Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX2&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN2&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset2</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq2"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2123">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq2"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2124"/>
            <row id="2125">
                <cell id="2126">
                    <table id="2127">
                        <property name="dataSet">PolarGrid2</property>
                        <column id="2141"/>
                        <column id="2142"/>
                        <header>
                            <row id="2128">
                                <cell id="2129">
                                    <label id="2130">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                                <cell id="2131">
                                    <label id="2132">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2133">
                                <cell id="2134">
                                    <data id="2135">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid2</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="2136">
                                    <data id="2137">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid2</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2138">
                                <cell id="2139"/>
                                <cell id="2140"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1557">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1558">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1559">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View16" id="1560">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1561">
                                            <property name="content">
                                                <data name="testproc11" id="1562">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1563">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View811" id="1564">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1565">
                                            <property name="content">
                                                <data name="TestDesc111" id="1566">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1567">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View911" id="1568">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1569">
                                            <property name="content">
                                                <data name="instruments111" id="1570">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1571">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1011" id="1572">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1573">
                                            <property name="content">
                                                <data name="calibration111" id="1574">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1575">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1111" id="1576">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1577">
                                            <property name="content">
                                                <data name="testcenter111" id="1578">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1579">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1211" id="1580">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1581">
                                            <property name="content">
                                                <data name="Productname11" id="1582">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1583">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1311" id="1584">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1585">
                                            <property name="content">
                                                <data name="version11" id="1586">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1587">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1411" id="1588">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1589">
                                            <property name="content">
                                                <data name="SerialNo11" id="1590">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1614">
                            <property name="dimension">Group12</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View3" id="1615">
                                    <property name="level">Group12/frequency3</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1616">
                                            <property name="content">
                                                <data name="frequency3" id="1618">
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frequency3</property>
                                                </data>
                                            </property>
                                            <property name="style">BorderStyle</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1595">
                    <property name="content">
                        <label id="1596">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1597">
                    <property name="content">
                        <label id="1598">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1599">
                    <property name="content">
                        <label id="1600">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1601">
                    <property name="content">
                        <label id="1602">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1603">
                    <property name="content">
                        <label id="1604">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1605">
                    <property name="content">
                        <label id="1606">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1607">
                    <property name="content">
                        <label id="1608">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1611">
                    <property name="content">
                        <label id="1612">
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1617">
                    <property name="content">
                        <label id="1619">
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq3"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency3</property>
                    <expression name="expression">dimension["Group12"]["frequency3"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="1613">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGPITCH.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX3&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN3&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset3</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq3"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2143">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq3"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2144"/>
            <row id="2145">
                <cell id="2146">
                    <table id="2147">
                        <property name="dataSet">PolarGrid3</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">3Db_BW_BMax</property>
                                <text-property name="displayName">3Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BW_BMax</property>
                                <text-property name="displayName">10Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2161"/>
                        <column id="2162"/>
                        <header>
                            <row id="2148">
                                <cell id="2149">
                                    <label id="2150">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                                <cell id="2151">
                                    <label id="2152">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2153">
                                <cell id="2154">
                                    <data id="2155">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid3</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="2156">
                                    <data id="2157">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid3</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2158">
                                <cell id="2159"/>
                                <cell id="2160"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1620">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1621">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1622">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View161" id="1623">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1624">
                                            <property name="content">
                                                <data name="testproc111" id="1625">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1626">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View8111" id="1627">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1628">
                                            <property name="content">
                                                <data name="TestDesc1111" id="1629">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1630">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View9111" id="1631">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1632">
                                            <property name="content">
                                                <data name="instruments1111" id="1633">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1634">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View10111" id="1635">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1636">
                                            <property name="content">
                                                <data name="calibration1111" id="1637">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1638">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View11111" id="1639">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1640">
                                            <property name="content">
                                                <data name="testcenter1111" id="1641">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1642">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View12111" id="1643">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1644">
                                            <property name="content">
                                                <data name="Productname111" id="1645">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1646">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View13111" id="1647">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1648">
                                            <property name="content">
                                                <data name="version111" id="1649">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1650">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View14111" id="1651">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1652">
                                            <property name="content">
                                                <data name="SerialNo111" id="1653">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1677">
                            <property name="dimension">Group13</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View4" id="1678">
                                    <property name="level">Group13/frequency4</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1679">
                                            <property name="content">
                                                <data name="frequency4" id="1681">
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frequency4</property>
                                                </data>
                                            </property>
                                            <property name="style">BorderStyle</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1658">
                    <property name="content">
                        <label id="1659">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1660">
                    <property name="content">
                        <label id="1661">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1662">
                    <property name="content">
                        <label id="1663">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1664">
                    <property name="content">
                        <label id="1665">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1666">
                    <property name="content">
                        <label id="1667">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1668">
                    <property name="content">
                        <label id="1669">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1670">
                    <property name="content">
                        <label id="1671">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1674">
                    <property name="content">
                        <label id="1675">
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1680">
                    <property name="content">
                        <label id="1682">
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq4"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency4</property>
                    <expression name="expression">dimension["Group13"]["frequency4"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="1676">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGPITCH.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX4&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN4&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset4</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq4"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2163">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq4"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2164"/>
            <row id="2165">
                <cell id="2166">
                    <table id="2167">
                        <property name="dataSet">PolarGrid4</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">3Db_BW_BMax</property>
                                <text-property name="displayName">3Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BW_BMax</property>
                                <text-property name="displayName">10Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2181"/>
                        <column id="2182"/>
                        <header>
                            <row id="2168">
                                <cell id="2169">
                                    <label id="2170">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                                <cell id="2171">
                                    <label id="2172">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2173">
                                <cell id="2174">
                                    <data id="2175">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid4</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="2176">
                                    <data id="2177">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid4</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2178">
                                <cell id="2179"/>
                                <cell id="2180"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1683">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1684">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1685">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1611" id="1686">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1687">
                                            <property name="content">
                                                <data name="testproc1111" id="1688">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1689">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View81111" id="1690">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1691">
                                            <property name="content">
                                                <data name="TestDesc11111" id="1692">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1693">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View91111" id="1694">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1695">
                                            <property name="content">
                                                <data name="instruments11111" id="1696">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1697">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View101111" id="1698">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1699">
                                            <property name="content">
                                                <data name="calibration11111" id="1700">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1701">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View111111" id="1702">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1703">
                                            <property name="content">
                                                <data name="testcenter11111" id="1704">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1705">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View121111" id="1706">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1707">
                                            <property name="content">
                                                <data name="Productname1111" id="1708">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1709">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View131111" id="1710">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1711">
                                            <property name="content">
                                                <data name="version1111" id="1712">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1713">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View141111" id="1714">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1715">
                                            <property name="content">
                                                <data name="SerialNo1111" id="1716">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1740">
                            <property name="dimension">Group14</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View5" id="1741">
                                    <property name="level">Group14/frequency5</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1742">
                                            <property name="content">
                                                <data name="frequency5" id="1744">
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frequency5</property>
                                                </data>
                                            </property>
                                            <property name="style">BorderStyle</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1721">
                    <property name="content">
                        <label id="1722">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1723">
                    <property name="content">
                        <label id="1724">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1725">
                    <property name="content">
                        <label id="1726">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1727">
                    <property name="content">
                        <label id="1728">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1729">
                    <property name="content">
                        <label id="1730">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1731">
                    <property name="content">
                        <label id="1732">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1733">
                    <property name="content">
                        <label id="1734">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1737">
                    <property name="content">
                        <label id="1738">
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1743">
                    <property name="content">
                        <label id="1745">
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq5"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency5</property>
                    <expression name="expression">dimension["Group14"]["frequency5"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="1739">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGPITCH.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX5&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN5&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset5</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq5"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2183">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq5"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2184"/>
            <row id="2185">
                <cell id="2186">
                    <table id="2187">
                        <property name="dataSet">PolarGrid5</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">3Db_BW_BMax</property>
                                <text-property name="displayName">3Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BW_BMax</property>
                                <text-property name="displayName">10Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2201"/>
                        <column id="2202"/>
                        <header>
                            <row id="2188">
                                <cell id="2189">
                                    <label id="2190">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                                <cell id="2191">
                                    <label id="2192">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2193">
                                <cell id="2194">
                                    <data id="2195">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid5</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="2196">
                                    <data id="2197">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid5</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2198">
                                <cell id="2199"/>
                                <cell id="2200"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1746">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1747">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1748">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View16111" id="1749">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1750">
                                            <property name="content">
                                                <data name="testproc11111" id="1751">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1752">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View811111" id="1753">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1754">
                                            <property name="content">
                                                <data name="TestDesc111111" id="1755">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1756">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View911111" id="1757">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1758">
                                            <property name="content">
                                                <data name="instruments111111" id="1759">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1760">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1011111" id="1761">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1762">
                                            <property name="content">
                                                <data name="calibration111111" id="1763">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1764">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1111111" id="1765">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1766">
                                            <property name="content">
                                                <data name="testcenter111111" id="1767">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1768">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1211111" id="1769">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1770">
                                            <property name="content">
                                                <data name="Productname11111" id="1771">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1772">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1311111" id="1773">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1774">
                                            <property name="content">
                                                <data name="version11111" id="1775">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1776">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1411111" id="1777">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1778">
                                            <property name="content">
                                                <data name="SerialNo11111" id="1779">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1803">
                            <property name="dimension">Group15</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View6" id="1804">
                                    <property name="level">Group15/frequency6</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1805">
                                            <property name="content">
                                                <data name="frequency6" id="1807">
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frequency6</property>
                                                </data>
                                            </property>
                                            <property name="style">BorderStyle</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1784">
                    <property name="content">
                        <label id="1785">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1786">
                    <property name="content">
                        <label id="1787">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1788">
                    <property name="content">
                        <label id="1789">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1790">
                    <property name="content">
                        <label id="1791">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1792">
                    <property name="content">
                        <label id="1793">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1794">
                    <property name="content">
                        <label id="1795">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1796">
                    <property name="content">
                        <label id="1797">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1800">
                    <property name="content">
                        <label id="1801">
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1806">
                    <property name="content">
                        <label id="1808">
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq6"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency6</property>
                    <expression name="expression">dimension["Group15"]["frequency6"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="1802">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGPITCH.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX6&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN6&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset6</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq6"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2203">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq6"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2204"/>
            <row id="2205">
                <cell id="2206">
                    <table id="2207">
                        <property name="dataSet">PolarGrid6</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">3Db_BW_BMax</property>
                                <text-property name="displayName">3Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BW_BMax</property>
                                <text-property name="displayName">10Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2221"/>
                        <column id="2222"/>
                        <header>
                            <row id="2208">
                                <cell id="2209">
                                    <label id="2210">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                                <cell id="2211">
                                    <label id="2212">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2213">
                                <cell id="2214">
                                    <data id="2215">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid6</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="2216">
                                    <data id="2217">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid6</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2218">
                                <cell id="2219"/>
                                <cell id="2220"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1809">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1810">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1811">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View161111" id="1812">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1813">
                                            <property name="content">
                                                <data name="testproc111111" id="1814">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1815">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View8111111" id="1816">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1817">
                                            <property name="content">
                                                <data name="TestDesc1111111" id="1818">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1819">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View9111111" id="1820">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1821">
                                            <property name="content">
                                                <data name="instruments1111111" id="1822">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1823">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View10111111" id="1824">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1825">
                                            <property name="content">
                                                <data name="calibration1111111" id="1826">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1827">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View11111111" id="1828">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1829">
                                            <property name="content">
                                                <data name="testcenter1111111" id="1830">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1831">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View12111111" id="1832">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1833">
                                            <property name="content">
                                                <data name="Productname111111" id="1834">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1835">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View13111111" id="1836">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1837">
                                            <property name="content">
                                                <data name="version111111" id="1838">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1839">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View14111111" id="1840">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1841">
                                            <property name="content">
                                                <data name="SerialNo111111" id="1842">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1866">
                            <property name="dimension">Group16</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View7" id="1867">
                                    <property name="level">Group16/frequency7</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1868">
                                            <property name="content">
                                                <data name="frequency7" id="1870">
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frequency7</property>
                                                </data>
                                            </property>
                                            <property name="style">BorderStyle</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1847">
                    <property name="content">
                        <label id="1848">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1849">
                    <property name="content">
                        <label id="1850">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1851">
                    <property name="content">
                        <label id="1852">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1853">
                    <property name="content">
                        <label id="1854">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1855">
                    <property name="content">
                        <label id="1856">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1857">
                    <property name="content">
                        <label id="1858">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1859">
                    <property name="content">
                        <label id="1860">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1863">
                    <property name="content">
                        <label id="1864">
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1869">
                    <property name="content">
                        <label id="1871">
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq7"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency7</property>
                    <expression name="expression">dimension["Group16"]["frequency7"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="1865">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGPITCH.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX7&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN7&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset7</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq7"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2228">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq7"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2229"/>
            <row id="2230">
                <cell id="2231">
                    <table id="2232">
                        <property name="dataSet">PolarGrid7</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">3Db_BW_BMax</property>
                                <text-property name="displayName">3Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BW_BMax</property>
                                <text-property name="displayName">10Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2246"/>
                        <column id="2247"/>
                        <header>
                            <row id="2233">
                                <cell id="2234">
                                    <label id="2235">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                                <cell id="2236">
                                    <label id="2237">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2238">
                                <cell id="2239">
                                    <data id="2240">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid7</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="2241">
                                    <data id="2242">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid7</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2243">
                                <cell id="2244"/>
                                <cell id="2245"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1872">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1873">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1874">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1611111" id="1875">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1876">
                                            <property name="content">
                                                <data name="testproc1111111" id="1877">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1878">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View81111111" id="1879">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1880">
                                            <property name="content">
                                                <data name="TestDesc11111111" id="1881">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1882">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View91111111" id="1883">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1884">
                                            <property name="content">
                                                <data name="instruments11111111" id="1885">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1886">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View101111111" id="1887">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1888">
                                            <property name="content">
                                                <data name="calibration11111111" id="1889">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1890">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View111111111" id="1891">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1892">
                                            <property name="content">
                                                <data name="testcenter11111111" id="1893">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1894">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View121111111" id="1895">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1896">
                                            <property name="content">
                                                <data name="Productname1111111" id="1897">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1898">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View131111111" id="1899">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1900">
                                            <property name="content">
                                                <data name="version1111111" id="1901">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1902">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View141111111" id="1903">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1904">
                                            <property name="content">
                                                <data name="SerialNo1111111" id="1905">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1929">
                            <property name="dimension">Group17</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View17" id="1930">
                                    <property name="level">Group17/frequency8</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1931">
                                            <property name="content">
                                                <data name="frequency8" id="1933">
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frequency8</property>
                                                </data>
                                            </property>
                                            <property name="style">BorderStyle</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1910">
                    <property name="content">
                        <label id="1911">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1912">
                    <property name="content">
                        <label id="1913">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1914">
                    <property name="content">
                        <label id="1915">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1916">
                    <property name="content">
                        <label id="1917">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1918">
                    <property name="content">
                        <label id="1919">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1920">
                    <property name="content">
                        <label id="1921">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1922">
                    <property name="content">
                        <label id="1923">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1926">
                    <property name="content">
                        <label id="1927">
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1932">
                    <property name="content">
                        <label id="1934">
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq8"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency8</property>
                    <expression name="expression">dimension["Group17"]["frequency8"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="1928">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGPITCH.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX8&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN8&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset8</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq8"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2248">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq8"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2249"/>
            <row id="2250">
                <cell id="2251">
                    <table id="2252">
                        <property name="dataSet">PolarGrid8</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">3Db_BW_BMax</property>
                                <text-property name="displayName">3Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BW_BMax</property>
                                <text-property name="displayName">10Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2266"/>
                        <column id="2267"/>
                        <header>
                            <row id="2253">
                                <cell id="2254">
                                    <label id="2255">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                                <cell id="2256">
                                    <label id="2257">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2258">
                                <cell id="2259">
                                    <data id="2260">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid8</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="2261">
                                    <data id="2262">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid8</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2263">
                                <cell id="2264"/>
                                <cell id="2265"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1935">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1936">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1937">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View16111111" id="1938">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1939">
                                            <property name="content">
                                                <data name="testproc11111111" id="1940">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1941">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View811111111" id="1942">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1943">
                                            <property name="content">
                                                <data name="TestDesc111111111" id="1944">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1945">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View911111111" id="1946">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1947">
                                            <property name="content">
                                                <data name="instruments111111111" id="1948">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1949">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1011111111" id="1950">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1951">
                                            <property name="content">
                                                <data name="calibration111111111" id="1952">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1953">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1111111111" id="1954">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1955">
                                            <property name="content">
                                                <data name="testcenter111111111" id="1956">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1957">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1211111111" id="1958">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1959">
                                            <property name="content">
                                                <data name="Productname11111111" id="1960">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1961">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1311111111" id="1962">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1963">
                                            <property name="content">
                                                <data name="version11111111" id="1964">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1965">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1411111111" id="1966">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1967">
                                            <property name="content">
                                                <data name="SerialNo11111111" id="1968">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1992">
                            <property name="dimension">Group18</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View18" id="1993">
                                    <property name="level">Group18/frequency9</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1994">
                                            <property name="content">
                                                <data name="frequency9" id="1996">
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frequency9</property>
                                                </data>
                                            </property>
                                            <property name="style">BorderStyle</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1973">
                    <property name="content">
                        <label id="1974">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1975">
                    <property name="content">
                        <label id="1976">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1977">
                    <property name="content">
                        <label id="1978">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1979">
                    <property name="content">
                        <label id="1980">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1981">
                    <property name="content">
                        <label id="1982">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1983">
                    <property name="content">
                        <label id="1984">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1985">
                    <property name="content">
                        <label id="1986">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1989">
                    <property name="content">
                        <label id="1990">
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1995">
                    <property name="content">
                        <label id="1997">
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq9"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency9</property>
                    <expression name="expression">dimension["Group18"]["frequency9"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="1991">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGPITCH.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX9&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN9&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset9</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq9"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2268">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq9"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2269"/>
            <row id="2270">
                <cell id="2271">
                    <table id="2272">
                        <property name="dataSet">PolarGrid9</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">3Db_BW_BMax</property>
                                <text-property name="displayName">3Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BW_BMax</property>
                                <text-property name="displayName">10Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2286"/>
                        <column id="2287"/>
                        <header>
                            <row id="2273">
                                <cell id="2274">
                                    <label id="2275">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                                <cell id="2276">
                                    <label id="2277">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2278">
                                <cell id="2279">
                                    <data id="2280">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid9</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="2281">
                                    <data id="2282">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid9</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2283">
                                <cell id="2284"/>
                                <cell id="2285"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1998">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1999">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="2000">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View161111111" id="2001">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2002">
                                            <property name="content">
                                                <data name="testproc111111111" id="2003">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2004">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View8111111111" id="2005">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2006">
                                            <property name="content">
                                                <data name="TestDesc1111111111" id="2007">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2008">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View9111111111" id="2009">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2010">
                                            <property name="content">
                                                <data name="instruments1111111111" id="2011">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2012">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View10111111111" id="2013">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2014">
                                            <property name="content">
                                                <data name="calibration1111111111" id="2015">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2016">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View11111111111" id="2017">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2018">
                                            <property name="content">
                                                <data name="testcenter1111111111" id="2019">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2020">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View12111111111" id="2021">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2022">
                                            <property name="content">
                                                <data name="Productname111111111" id="2023">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2024">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View13111111111" id="2025">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2026">
                                            <property name="content">
                                                <data name="version111111111" id="2027">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2028">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View14111111111" id="2029">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2030">
                                            <property name="content">
                                                <data name="SerialNo111111111" id="2031">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2055">
                            <property name="dimension">Group19</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View19" id="2056">
                                    <property name="level">Group19/frequency10</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2057">
                                            <property name="content">
                                                <data name="frequency10" id="2059">
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frequency10</property>
                                                </data>
                                            </property>
                                            <property name="style">BorderStyle</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="2036">
                    <property name="content">
                        <label id="2037">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2038">
                    <property name="content">
                        <label id="2039">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2040">
                    <property name="content">
                        <label id="2041">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2042">
                    <property name="content">
                        <label id="2043">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2044">
                    <property name="content">
                        <label id="2045">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2046">
                    <property name="content">
                        <label id="2047">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2048">
                    <property name="content">
                        <label id="2049">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2052">
                    <property name="content">
                        <label id="2053">
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2058">
                    <property name="content">
                        <label id="2060">
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq10"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency10</property>
                    <expression name="expression">dimension["Group19"]["frequency10"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="2054">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGPITCH.png</URL>
      <Data>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N9EvS8RkiNseUUejhd3benw4bYSIiKGbiCH7gqCjdhwhw5PYcDz498vu62EWJV73+KitQI/jOUVERAzdRDREGBtHdfVn3IxlmPYPBlgiImLoJqIrg+M4wuk4Nvi5zUWhw7Z/iOyNZp81ERFDNxHdc6ID3W2F09teFDpK+wd7o4mIiKGbiPphUOSCuqv6hEVVoe/DotBxz7vmgkciIoZuIprwkD1MUBblsmrzKOF0lGA/TiIDNRc8EhH92rS8C4ho0g0G+buuhHM0IxERjYKVbiIaa1D+2bD9g4iIGLqJaGJC6H0Lp2z/ICKicdL0ePYgokl7YbrFkYFEREQM3UREREREPwEupCQiIiIiYugmIiIiImLoJiIiIiIihm4iIiIiIoZuIiIiIiKGbiIiIiIiYugmIiIiImLoJiIiIiJi6CYiIiIiIoZuIiIiIiKGbiIiIiIiYugmIiIiImLoJiIiIiJi6CYiIiIiIoZuIiIiIiKGbiIiIiIihm4iIiIiImLoJiIiIiJi6CYiIiIiYujmXUBERERExNBNRERERMTQTUREREREDN1ERERERAzdREREREQM3URERERExNBNRERERMTQTURERETE0E1ERERERAzdREREREQM3URERERExNBNRERERMTQTURERETE0E1ERERERAzdREREREQM3UREREREDN1ERERERMTQTURERETE0E1ERERExNBNREREREQM3UREREREDN1ERERERMTQTURERETE0E1ERERExNBNREREREQM3UREREREDN1ERERERAzdRERERETE0E1ERERExNBNREREREQM3UREREREt+d/AwDH2Fgs8lJ+iQAAAABJRU5ErkJggg==</Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX10&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN10&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>60.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset10</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq10"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2288">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq10"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2289"/>
            <row id="2290">
                <cell id="2291">
                    <table id="2292">
                        <property name="dataSet">PolarGrid10</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">3Db_BW_BMax</property>
                                <text-property name="displayName">3Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BW_BMax</property>
                                <text-property name="displayName">10Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2306"/>
                        <column id="2307"/>
                        <header>
                            <row id="2293">
                                <cell id="2294">
                                    <label id="2295">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                                <cell id="2296">
                                    <label id="2297">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg.)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2298">
                                <cell id="2299">
                                    <data id="2300">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid10</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="2301">
                                    <data id="2302">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid10</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2303">
                                <cell id="2304"/>
                                <cell id="2305"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
    </body>
</report>
