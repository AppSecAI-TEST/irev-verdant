<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.eclipse.org/birt/2005/design" version="3.2.23" id="1">
    <property name="createdBy">Eclipse BIRT Designer Version 4.3.2.v20140211-1400 Build &lt;4.3.2.v20140218-1056></property>
    <text-property name="title">CP Conversion</text-property>
    <list-property name="userProperties">
        <structure>
            <property name="name">Data CubeTestGrid.graphgrid.x</property>
            <property name="type">integer</property>
            <property name="isVisible">false</property>
        </structure>
        <structure>
            <property name="name">Data CubeTestGrid.graphgrid.y</property>
            <property name="type">integer</property>
            <property name="isVisible">false</property>
        </structure>
    </list-property>
    <property name="Data CubeTestGrid.graphgrid.x">135</property>
    <property name="Data CubeTestGrid.graphgrid.y">80</property>
    <property name="units">in</property>
    <property name="iconFile">/templates/blank_report.gif</property>
    <property name="layoutPreference">auto layout</property>
    <property name="bidiLayoutOrientation">ltr</property>
    <property name="imageDPI">96</property>
    <parameters>
        <scalar-parameter name="testid" id="1017">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">integer</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq1" id="1006">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq2" id="1182">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq3" id="1262">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq4" id="1264">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq5" id="1265">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="AxDeg" id="1434">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="10dbDeg" id="1529">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="3dbDeg" id="1631">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="axr" id="1838">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="3db" id="1839">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="10db" id="1840">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="blobe" id="1841">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="cpg" id="1842">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="polar" id="1843">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq6" id="1844">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq7" id="1847">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq8" id="1848">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq9" id="1849">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq10" id="1850">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="img" id="2327">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="rpth" id="2381">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="rptf" id="2382">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="lg1" id="2654">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="type" id="2655">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="scale" id="2664">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="lg2" id="2665">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="lg3" id="2666">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="lg4" id="2667">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="lg5" id="2668">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="lg6" id="2669">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="lg7" id="2670">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="lg8" id="2671">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="lg9" id="2672">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="lg10" id="2673">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="pc" id="4873">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">integer</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
    </parameters>
    <data-sources>
        <oda-data-source extensionID="org.eclipse.birt.report.data.oda.jdbc" name="VerdantProfile" id="7">
            <list-property name="privateDriverProperties">
                <ex-property>
                    <name>metadataBidiFormatStr</name>
                    <value>ILYNN</value>
                </ex-property>
                <ex-property>
                    <name>disabledMetadataBidiFormatStr</name>
                </ex-property>
                <ex-property>
                    <name>contentBidiFormatStr</name>
                    <value>ILYNN</value>
                </ex-property>
                <ex-property>
                    <name>disabledContentBidiFormatStr</name>
                </ex-property>
            </list-property>
            <property name="odaDriverClass">com.mysql.jdbc.Driver</property>
            <property name="odaURL">jdbc:mysql://localhost:3306/verdant</property>
            <property name="odaUser">root</property>
            <property name="OdaConnProfileName">VerdantProfile</property>
            <property name="OdaConnProfileStorePath">VerdantProfile</property>
        </oda-data-source>
    </data-sources>
    <data-sets>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="CPfreqeuncy" id="772">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">Frequency</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">frequency</text-property>
                    <text-property name="heading">frequency</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[SELECT frequency FROM verdant.cpcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>Frequency</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>frequency</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>frequency</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="CPbeammax" id="773">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">3Db_BW_BMax</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">3Db_BW_BMax</text-property>
                    <text-property name="heading">3Db_BW_BMax</text-property>
                </structure>
                <structure>
                    <property name="columnName">3Db_BS_BMax</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">3Db_BS_BMax</text-property>
                    <text-property name="heading">3Db_BS_BMax</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_3</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">3</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[SELECT round(3Db_BW_BMax,?) as 3Db_BW_BMax,round(3Db_BS_BMax,?) as 3Db_BS_BMax  FROM cpcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BW_BMax</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BW_BMax</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BW_BMax</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BS_BMax</design:name>
              <design:position>2</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BS_BMax</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BS_BMax</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="cp0" id="774">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">3Db_BW_0</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">3Db_BW_0</text-property>
                    <text-property name="heading">3Db_BW_0</text-property>
                </structure>
                <structure>
                    <property name="columnName">3Db_BS_0</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">3Db_BS_0</text-property>
                    <text-property name="heading">3Db_BS_0</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_3</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">3</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_0</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_0</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_0</property>
                    <property name="nativeName">3Db_BW_0</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_0</property>
                    <property name="nativeName">3Db_BS_0</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[select round(3Db_BW_0,?) as 3Db_BW_0,round(3Db_BS_0,?) as 3Db_BS_0 from cpcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BW_0</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BW_0</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BW_0</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BS_0</design:name>
              <design:position>2</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BS_0</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BS_0</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="cp90" id="775">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">3Db_BW_90</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">3Db_BW_90</text-property>
                    <text-property name="heading">3Db_BW_90</text-property>
                </structure>
                <structure>
                    <property name="columnName">3Db_BS_90</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">3Db_BS_90</text-property>
                    <text-property name="heading">3Db_BS_90</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_3</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">3</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_90</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_90</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_90</property>
                    <property name="nativeName">3Db_BW_90</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_90</property>
                    <property name="nativeName">3Db_BS_90</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[select round(3Db_BW_90,?) as 3Db_BW_90,round(3Db_BS_90,?) as 3Db_BS_90
from cpcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BW_90</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BW_90</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BW_90</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BS_90</design:name>
              <design:position>2</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BS_90</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BS_90</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="beammaxHcalculated" id="966">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">3Db_BW_BMax</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">3Db_BW_BMax</text-property>
                    <text-property name="heading">3Db_BW_BMax</text-property>
                </structure>
                <structure>
                    <property name="columnName">3Db_BS_BMax</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">3Db_BS_BMax</text-property>
                    <text-property name="heading">3Db_BS_BMax</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_3</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">3</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[SELECT round(3Db_BW_BMax,?) as 3Db_BW_BMax,round(3Db_BS_BMax,?) as 3Db_BS_BMax FROM hcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BW_BMax</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BW_BMax</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BW_BMax</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BS_BMax</design:name>
              <design:position>2</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BS_BMax</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BS_BMax</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="bmaxvcalcu" id="971">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">3Db_BW_BMax</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">3Db_BW_BMax</text-property>
                    <text-property name="heading">3Db_BW_BMax</text-property>
                </structure>
                <structure>
                    <property name="columnName">3Db_BS_BMax</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">3Db_BS_BMax</text-property>
                    <text-property name="heading">3Db_BS_BMax</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_3</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">3</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[SELECT round(3Db_BW_BMax,?) as 3Db_BW_BMax,round(3Db_BS_BMax,?) as 3Db_BS_BMax FROM vcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BW_BMax</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BW_BMax</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BW_BMax</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BS_BMax</design:name>
              <design:position>2</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BS_BMax</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BS_BMax</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="graphgrid" id="974">
            <list-property name="computedColumns">
                <structure>
                    <property name="name">Frqncy</property>
                    <expression name="expression">params["freq1"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frqncy2</property>
                    <expression name="expression">params["freq2"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frqncy3</property>
                    <expression name="expression">params["freq3"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frqncy4</property>
                    <expression name="expression">params["freq4"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frqncy5</property>
                    <expression name="expression">params["freq5"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frqncy6</property>
                    <expression name="expression">params["freq6"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frqncy7</property>
                    <expression name="expression">params["freq7"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frqncy8</property>
                    <expression name="expression">params["freq8"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frqncy9</property>
                    <expression name="expression">params["freq9"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frqncy10</property>
                    <expression name="expression">params["freq10"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">GridHPVPTYPE</property>
                    <expression name="expression">params["type"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">testproc</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">testproc</text-property>
                    <text-property name="heading">testproc</text-property>
                </structure>
                <structure>
                    <property name="columnName">TestDesc</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">TestDesc</text-property>
                    <text-property name="heading">TestDesc</text-property>
                </structure>
                <structure>
                    <property name="columnName">TestDate</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">TestDate</text-property>
                    <text-property name="heading">TestDate</text-property>
                </structure>
                <structure>
                    <property name="columnName">frequnit</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">frequnit</text-property>
                    <text-property name="heading">frequnit</text-property>
                </structure>
                <structure>
                    <property name="columnName">testcenter</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">testcenter</text-property>
                    <text-property name="heading">testcenter</text-property>
                </structure>
                <structure>
                    <property name="columnName">instruments</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">instruments</text-property>
                    <text-property name="heading">instruments</text-property>
                </structure>
                <structure>
                    <property name="columnName">calibration</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">calibration</text-property>
                    <text-property name="heading">calibration</text-property>
                </structure>
                <structure>
                    <property name="columnName">SerialNo</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">SerialNo</text-property>
                    <text-property name="heading">SerialNo</text-property>
                </structure>
                <structure>
                    <property name="columnName">Productname</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">Productname</text-property>
                    <text-property name="heading">Productname</text-property>
                </structure>
                <structure>
                    <property name="columnName">Version</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">version</text-property>
                    <text-property name="heading">version</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">testproc</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">TestDesc</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">TestDate</property>
                        <property name="dataType">date-time</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">frequnit</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">testcenter</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">instruments</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">calibration</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">SerialNo</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">Productname</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">Version</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">11</property>
                        <property name="name">Frqncy</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">12</property>
                        <property name="name">frqncy2</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">13</property>
                        <property name="name">frqncy3</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">14</property>
                        <property name="name">frqncy4</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">15</property>
                        <property name="name">frqncy5</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">16</property>
                        <property name="name">frqncy6</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">17</property>
                        <property name="name">frqncy7</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">18</property>
                        <property name="name">frqncy8</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">19</property>
                        <property name="name">frqncy9</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">20</property>
                        <property name="name">frqncy10</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">21</property>
                        <property name="name">GridHPVPTYPE</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">testproc</property>
                    <property name="nativeName">testproc</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">TestDesc</property>
                    <property name="nativeName">TestDesc</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">TestDate</property>
                    <property name="nativeName">TestDate</property>
                    <property name="dataType">date-time</property>
                    <property name="nativeDataType">93</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">frequnit</property>
                    <property name="nativeName">frequnit</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">testcenter</property>
                    <property name="nativeName">testcenter</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">instruments</property>
                    <property name="nativeName">instruments</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">calibration</property>
                    <property name="nativeName">calibration</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">SerialNo</property>
                    <property name="nativeName">SerialNo</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">9</property>
                    <property name="name">Productname</property>
                    <property name="nativeName">Productname</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">10</property>
                    <property name="name">Version</property>
                    <property name="nativeName">Version</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[SELECT distinct TD.testproc,TD.TestDesc,TD.TestDate,TD.frequnit,TD.testcenter,TD.instruments,TD.calibration ,s.SerialNo,p.Productname,p.version
FROM testdata TD inner join product_serial s on td.ProdSerial_id=S.Prodserial_id 
inner join product p on s.Product_id=p.Product_id   where TD.Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>TestName</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
            <design:precision>50</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>TestName</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>TestName</design:label>
            <design:formattingHints>
              <design:displaySize>50</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>TestDesc</design:name>
              <design:position>2</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
            <design:precision>100</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>TestDesc</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>TestDesc</design:label>
            <design:formattingHints>
              <design:displaySize>100</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>TestDate</design:name>
              <design:position>3</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>93</design:nativeDataTypeCode>
            <design:precision>19</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>TestDate</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>TestDate</design:label>
            <design:formattingHints>
              <design:displaySize>19</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>frequnit</design:name>
              <design:position>4</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
            <design:precision>5</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>frequnit</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>frequnit</design:label>
            <design:formattingHints>
              <design:displaySize>5</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>testcenter</design:name>
              <design:position>5</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
            <design:precision>100</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>testcenter</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>testcenter</design:label>
            <design:formattingHints>
              <design:displaySize>100</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>instruments</design:name>
              <design:position>6</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
            <design:precision>100</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>instruments</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>instruments</design:label>
            <design:formattingHints>
              <design:displaySize>100</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>calibration</design:name>
              <design:position>7</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
            <design:precision>100</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>calibration</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>calibration</design:label>
            <design:formattingHints>
              <design:displaySize>100</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>SerialNo</design:name>
              <design:position>8</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
            <design:precision>45</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>SerialNo</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>SerialNo</design:label>
            <design:formattingHints>
              <design:displaySize>45</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>Productname</design:name>
              <design:position>9</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
            <design:precision>45</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>Productname</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>Productname</design:label>
            <design:formattingHints>
              <design:displaySize>45</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>Version</design:name>
              <design:position>10</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
            <design:precision>45</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>version</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>version</design:label>
            <design:formattingHints>
              <design:displaySize>45</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="CPGain" id="1433">
            <list-property name="computedColumns">
                <structure>
                    <property name="name">Hide</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">RUNNINGCOUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["Frequency"]</expression>
                        </structure>
                    </list-property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">Frequency</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">frequency</text-property>
                    <text-property name="heading">frequency</text-property>
                </structure>
                <structure>
                    <property name="columnName">frequnit</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">frequnit</text-property>
                    <text-property name="heading">frequnit</text-property>
                </structure>
                <structure>
                    <property name="columnName">CPGain</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">CPGain</text-property>
                    <text-property name="heading">CPGain</text-property>
                </structure>
                <structure>
                    <property name="columnName">lineargain</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">lineargain</text-property>
                    <text-property name="heading">lineargain</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_3</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">3</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">frequnit</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">lineargain</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">Hide</property>
                        <property name="dataType">integer</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">frequency</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">frequnit</property>
                    <property name="nativeName">frequnit</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">lineargain</property>
                    <property name="nativeName">lineargain</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[SELECT distinct case t.frequnit when 'GHz' then CP.frequency/1000 else CP.frequency end frequency,t.frequnit,
round(CPGain,?) as CPGain,round(lineargain,?) as lineargain
FROM cpcalculated CP
inner join testdata t on CP.test_id=t.test_id
 inner join testfreq tf on tf.Frequency=CP.Frequency
where CP.Test_id=? and lineargain is not null and CPGain is not null]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>Frequency</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>frequency</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>frequency</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="fq" id="464">
            <list-property name="computedColumns">
                <structure>
                    <property name="name">Hide</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">RUNNINGCOUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["Frequency"]</expression>
                        </structure>
                    </list-property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">Frequency</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">Frequency</text-property>
                    <text-property name="heading">Frequency</text-property>
                </structure>
                <structure>
                    <property name="columnName">frequnit</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">frequnit</text-property>
                    <text-property name="heading">frequnit</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">frequnit</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Hide</property>
                        <property name="dataType">integer</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">frequnit</property>
                    <property name="nativeName">frequnit</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[ SELECT case t.frequnit when 'GHz' then frequency/1000 else frequency end Frequency,t.frequnit FROM arcalculated ar inner join testdata t on ar.test_id=t.test_id  where ar.Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>Frequency</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>frequency</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>frequency</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="max0+45" id="721">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">MaxAR_P_Ratio</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">MaxAR_P_Ratio</text-property>
                    <text-property name="heading">MaxAR_P_Ratio</text-property>
                </structure>
                <structure>
                    <property name="columnName">MaxAR_P_Angle</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">MaxAR_P_Angle</text-property>
                    <text-property name="heading">MaxAR_P_Angle</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">MaxAR_P_Ratio</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">MaxAR_P_Angle</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">MaxAR_P_Ratio</property>
                    <property name="nativeName">MaxAR_P_Ratio</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">MaxAR_P_Angle</property>
                    <property name="nativeName">MaxAR_P_Angle</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[select round(MaxAR_P_Ratio,?) as MaxAR_P_Ratio,MaxAR_P_Angle from arcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="max0-45" id="738">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">MaxAR_M_Ratio</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">MaxAR_M_Ratio</text-property>
                    <text-property name="heading">MaxAR_M_Ratio</text-property>
                </structure>
                <structure>
                    <property name="columnName">MaxAR_M_Angle</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">MaxAR_M_Angle</text-property>
                    <text-property name="heading">MaxAR_M_Angle</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">MaxAR_M_Ratio</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">MaxAR_M_Angle</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">MaxAR_M_Ratio</property>
                    <property name="nativeName">MaxAR_M_Ratio</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">MaxAR_M_Angle</property>
                    <property name="nativeName">MaxAR_M_Angle</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[select round(MaxAR_M_Ratio,?) as MaxAR_M_Ratio,MaxAR_M_Angle from arcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>MaxAR_M_Ratio</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>MaxAR_M_Ratio</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>MaxAR_M_Ratio</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>MaxAR_M_Angle</design:name>
              <design:position>2</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>MaxAR_M_Angle</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>MaxAR_M_Angle</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="offaxis+45" id="699">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">AR_P45</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">AR_P45</text-property>
                    <text-property name="heading">AR_P45</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">AR_P45</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">AR_P45</property>
                    <property name="nativeName">AR_P45</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[select round(AR_P45,?) as AR_P45 from arcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>AR_P45</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>AR_P45</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>AR_P45</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="offaxis-45" id="710">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">AR_M45</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">AR_M45</text-property>
                    <text-property name="heading">AR_M45</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">AR_M45</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">AR_M45</property>
                    <property name="nativeName">AR_M45</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[select round(AR_M45,?) as AR_M45 from arcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>AR_M45</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>AR_M45</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>AR_M45</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="on0axis" id="688">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">AR_0</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">AR_0</text-property>
                    <text-property name="heading">AR_0</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[select round(AR_0,?) as AR_0 from arcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="cplobe" id="1464">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">BackLobe</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">BackLobe</text-property>
                    <text-property name="heading">BackLobe</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[select round(BackLobe,?) as BackLobe from cpcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>BackLobe</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>BackLobe</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>BackLobe</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="fqBlobe" id="1465">
            <list-property name="computedColumns">
                <structure>
                    <property name="name">Hide</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">RUNNINGCOUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["Frequency"]</expression>
                        </structure>
                    </list-property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">Frequency</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">frequency</text-property>
                    <text-property name="heading">frequency</text-property>
                </structure>
                <structure>
                    <property name="columnName">frequnit</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">frequnit</text-property>
                    <text-property name="heading">frequnit</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">frequnit</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Hide</property>
                        <property name="dataType">integer</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">frequency</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">frequnit</property>
                    <property name="nativeName">frequnit</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[SELECT case t.frequnit when 'GHz' then frequency/1000 else frequency end frequency,t.frequnit FROM cpcalculated ar inner join testdata t on ar.test_id=t.test_id  where ar.Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>Frequency</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>frequency</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>frequency</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="10Db_BW_BMax" id="402">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">10Db_BW_BMax</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">10Db_BW_BMax</text-property>
                    <text-property name="heading">10Db_BW_BMax</text-property>
                </structure>
                <structure>
                    <property name="columnName">10Db_BS_BMax</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">10Db_BS_BMax</text-property>
                    <text-property name="heading">10Db_BS_BMax</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_3</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">3</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[select round(10Db_BW_BMax,?) as 10Db_BW_BMax,round(10Db_BS_BMax,?) as 10Db_BS_BMax from cpcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BW_BMax</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BW_BMax</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BW_BMax</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="10dbhp0" id="583">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">10Db_BW_0</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">10Db_BW_0</text-property>
                    <text-property name="heading">10Db_BW_0</text-property>
                </structure>
                <structure>
                    <property name="columnName">10Db_BS_0</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">10Db_BS_0</text-property>
                    <text-property name="heading">10Db_BS_0</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_3</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">3</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">10Db_BW_0</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">10Db_BS_0</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">10Db_BW_0</property>
                    <property name="nativeName">10Db_BW_0</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">10Db_BS_0</property>
                    <property name="nativeName">10Db_BS_0</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[select round(10Db_BW_0,?) as 10Db_BW_0,round(10Db_BS_0,?) as 10Db_BS_0 from cpcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BW_0</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BW_0</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BW_0</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BS_0</design:name>
              <design:position>2</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BS_0</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BS_0</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="10dbhp90" id="608">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">10Db_BW_90</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">10Db_BW_90</text-property>
                    <text-property name="heading">10Db_BW_90</text-property>
                </structure>
                <structure>
                    <property name="columnName">10Db_BS_90</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">10Db_BS_90</text-property>
                    <text-property name="heading">10Db_BS_90</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_3</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">3</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">10Db_BW_90</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">10Db_BS_90</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">10Db_BW_90</property>
                    <property name="nativeName">10Db_BW_90</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">10Db_BS_90</property>
                    <property name="nativeName">10Db_BS_90</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[select round(10Db_BW_90,?) as 10Db_BW_90,round(10Db_BS_90,?) as 10Db_BS_90
from cpcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BW_90</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BW_90</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BW_90</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BS_90</design:name>
              <design:position>2</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BS_90</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BS_90</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="fq10dbwithCP" id="1511">
            <list-property name="computedColumns">
                <structure>
                    <property name="name">Hide</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">RUNNINGCOUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["Frequency"]</expression>
                        </structure>
                    </list-property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">Frequency</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">frequency</text-property>
                    <text-property name="heading">frequency</text-property>
                </structure>
                <structure>
                    <property name="columnName">frequnit</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">frequnit</text-property>
                    <text-property name="heading">frequnit</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">frequnit</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Hide</property>
                        <property name="dataType">integer</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">frequency</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">frequnit</property>
                    <property name="nativeName">frequnit</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[SELECT case t.frequnit when 'GHz' then frequency/1000 else frequency end frequency,t.frequnit FROM cpcalculated ar inner join testdata t on ar.test_id=t.test_id  where ar.Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>Frequency</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>frequency</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>frequency</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="3Db_BW_BMax" id="1627">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">3Db_BW_BMax</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">3Db_BW_BMax</text-property>
                    <text-property name="heading">3Db_BW_BMax</text-property>
                </structure>
                <structure>
                    <property name="columnName">3Db_BS_BMax</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">3Db_BS_BMax</text-property>
                    <text-property name="heading">3Db_BS_BMax</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_3</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">3</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[SELECT round(3Db_BW_BMax,?) as 3Db_BW_BMax,round(3Db_BS_BMax,?) as 3Db_BS_BMax  FROM cpcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BW_BMax</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BW_BMax</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BW_BMax</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="3dbhp0" id="1628">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">3Db_BW_0</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">3Db_BW_0</text-property>
                    <text-property name="heading">3Db_BW_0</text-property>
                </structure>
                <structure>
                    <property name="columnName">3Db_BS_0</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">3Db_BS_0</text-property>
                    <text-property name="heading">3Db_BS_0</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_3</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">3</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_0</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_0</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_0</property>
                    <property name="nativeName">3Db_BW_0</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_0</property>
                    <property name="nativeName">3Db_BS_0</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[select round(3Db_BW_0,?) as 3Db_BW_0,round(3Db_BS_0,?) as 3Db_BS_0  from cpcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BW_0</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BW_0</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BW_0</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BS_0</design:name>
              <design:position>2</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BS_0</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BS_0</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="3dbhp90" id="1629">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">3Db_BW_90</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">3Db_BW_90</text-property>
                    <text-property name="heading">3Db_BW_90</text-property>
                </structure>
                <structure>
                    <property name="columnName">3Db_BS_90</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">3Db_BS_90</text-property>
                    <text-property name="heading">3Db_BS_90</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_3</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">3</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_90</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_90</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_90</property>
                    <property name="nativeName">3Db_BW_90</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_90</property>
                    <property name="nativeName">3Db_BS_90</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[select round(3Db_BW_90,?) as 3Db_BW_90,round(3Db_BS_90,?) as 3Db_BS_90
from cpcalculated where Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BW_90</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BW_90</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BW_90</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>3Db_BS_90</design:name>
              <design:position>2</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>3Db_BS_90</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>3Db_BS_90</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="fq3dbwithCP" id="1630">
            <list-property name="computedColumns">
                <structure>
                    <property name="name">Hide</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">RUNNINGCOUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["Frequency"]</expression>
                        </structure>
                    </list-property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">Frequency</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">frequency</text-property>
                    <text-property name="heading">frequency</text-property>
                </structure>
                <structure>
                    <property name="columnName">frequnit</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">frequnit</text-property>
                    <text-property name="heading">frequnit</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">frequnit</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Hide</property>
                        <property name="dataType">integer</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">frequency</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">frequnit</property>
                    <property name="nativeName">frequnit</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[SELECT case t.frequnit when 'GHz' then frequency/1000 else frequency end frequency,t.frequnit FROM cpcalculated ar inner join testdata t on ar.test_id=t.test_id  where ar.Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>Frequency</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>frequency</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>frequency</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset2" id="2646">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq2</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lg2</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX2", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN2", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid1" id="496">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq1</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid10" id="2674">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq10</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid2" id="2675">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq2</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid3" id="2676">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq3</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid4" id="2677">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq4</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid5" id="2678">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq5</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid6" id="2679">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq6</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid7" id="2680">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq7</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid8" id="2681">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq8</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid9" id="2682">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq9</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset3" id="4875">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq3</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lg3</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX3", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN3", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset4" id="4876">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq4</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lg4</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX4", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN4", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset5" id="4877">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq5</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lg5</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX5", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN5", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset6" id="4878">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq6</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lg6</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX6", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN6", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset7" id="4879">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq7</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lg7</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX7", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN7", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset8" id="4880">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq8</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lg8</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX8", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN8", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset9" id="4881">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq9</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lg9</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX9", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN9", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset10" id="4882">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq10</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lg10</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX10", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN10", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset" id="4883">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq1</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lg1</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX1", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN1", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
    </data-sets>
    <cubes>
        <tabular-cube name="Data CubeTestGrid" id="975">
            <property name="dimensions">
                <tabular-dimension name="Group" id="976">
                    <property name="defaultHierarchy">NewTabularHierarchy</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy" id="977">
                            <property name="levels">
                                <tabular-level name="Productname" id="978">
                                    <property name="dataType">string</property>
                                    <property name="columnName">Productname</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group1" id="979">
                    <property name="defaultHierarchy">NewTabularHierarchy1</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy1" id="980">
                            <property name="levels">
                                <tabular-level name="SerialNo" id="981">
                                    <property name="dataType">string</property>
                                    <property name="columnName">SerialNo</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group2" id="982">
                    <property name="isTimeType">false</property>
                    <property name="defaultHierarchy">NewTabularHierarchy3</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy3" id="983">
                            <property name="levels">
                                <tabular-level name="TestDate" id="984">
                                    <property name="dataType">date-time</property>
                                    <property name="columnName">TestDate</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group4" id="985">
                    <property name="defaultHierarchy">NewTabularHierarchy4</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy4" id="986">
                            <property name="levels">
                                <tabular-level name="TestDesc" id="987">
                                    <property name="dataType">string</property>
                                    <property name="columnName">TestDesc</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group6" id="991">
                    <property name="defaultHierarchy">NewTabularHierarchy6</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy6" id="992">
                            <property name="levels">
                                <tabular-level name="calibration" id="993">
                                    <property name="dataType">string</property>
                                    <property name="columnName">calibration</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group7" id="994">
                    <property name="defaultHierarchy">NewTabularHierarchy7</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy7" id="995">
                            <property name="levels">
                                <tabular-level name="frequnit" id="996">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequnit</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group8" id="997">
                    <property name="defaultHierarchy">NewTabularHierarchy8</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy8" id="998">
                            <property name="levels">
                                <tabular-level name="instruments" id="999">
                                    <property name="dataType">string</property>
                                    <property name="columnName">instruments</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group9" id="1000">
                    <property name="defaultHierarchy">NewTabularHierarchy9</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy9" id="1001">
                            <property name="levels">
                                <tabular-level name="testcenter" id="1002">
                                    <property name="dataType">string</property>
                                    <property name="columnName">testcenter</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group10" id="1003">
                    <property name="defaultHierarchy">NewTabularHierarchy10</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy10" id="1004">
                            <property name="levels">
                                <tabular-level name="version" id="1005">
                                    <property name="dataType">string</property>
                                    <property name="columnName">Version</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group3" id="1007">
                    <property name="defaultHierarchy">NewTabularHierarchy2</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy2" id="1008">
                            <property name="levels">
                                <tabular-level name="Frqncy" id="1009">
                                    <property name="dataType">string</property>
                                    <property name="columnName">Frqncy</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group11" id="1092">
                    <property name="defaultHierarchy">NewTabularHierarchy11</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy11" id="1093">
                            <property name="levels">
                                <tabular-level name="testproc" id="1094">
                                    <property name="dataType">string</property>
                                    <property name="columnName">testproc</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group5" id="1184">
                    <property name="defaultHierarchy">NewTabularHierarchy5</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy5" id="1185">
                            <property name="levels">
                                <tabular-level name="frqncy2" id="1186">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frqncy2</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group12" id="1266">
                    <property name="defaultHierarchy">NewTabularHierarchy12</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy12" id="1267">
                            <property name="levels">
                                <tabular-level name="frqncy3" id="1268">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frqncy3</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group13" id="1269">
                    <property name="defaultHierarchy">NewTabularHierarchy13</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy13" id="1270">
                            <property name="levels">
                                <tabular-level name="frqncy4" id="1271">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frqncy4</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group14" id="1272">
                    <property name="defaultHierarchy">NewTabularHierarchy14</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy14" id="1273">
                            <property name="levels">
                                <tabular-level name="frqncy5" id="1274">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frqncy5</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group15" id="2328">
                    <property name="defaultHierarchy">NewTabularHierarchy15</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy15" id="2329">
                            <property name="levels">
                                <tabular-level name="frqncy6" id="2330">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frqncy6</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group16" id="2331">
                    <property name="defaultHierarchy">NewTabularHierarchy16</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy16" id="2332">
                            <property name="levels">
                                <tabular-level name="frqncy7" id="2333">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frqncy7</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group17" id="2334">
                    <property name="defaultHierarchy">NewTabularHierarchy17</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy17" id="2335">
                            <property name="levels">
                                <tabular-level name="frqncy8" id="2336">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frqncy8</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group18" id="2337">
                    <property name="defaultHierarchy">NewTabularHierarchy18</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy18" id="2338">
                            <property name="levels">
                                <tabular-level name="frqncy9" id="2339">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frqncy9</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group19" id="2340">
                    <property name="defaultHierarchy">NewTabularHierarchy19</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy19" id="2341">
                            <property name="levels">
                                <tabular-level name="frqncy10" id="2342">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frqncy10</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
            </property>
            <property name="dataSet">graphgrid</property>
        </tabular-cube>
    </cubes>
    <styles>
        <style name="report" id="4">
            <property name="fontFamily">sans-serif</property>
            <property name="fontSize">10pt</property>
        </style>
        <style name="NewStyle" id="1102">
            <property name="height">1cm</property>
        </style>
        <style name="table-cell" id="2404">
            <property name="backgroundColor">#FFFFFF</property>
            <property name="borderBottomColor">#000000</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1px</property>
            <property name="borderLeftColor">#000000</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1px</property>
            <property name="borderRightColor">#000000</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1px</property>
            <property name="borderTopColor">#000000</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1px</property>
        </style>
        <style name="crosstab-cell" id="2406">
            <property name="backgroundColor">#FFFFFF</property>
            <property name="fontSize">10px</property>
            <property name="color">#080808</property>
            <property name="borderBottomColor">#080808</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1px</property>
            <property name="borderLeftColor">#080808</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1px</property>
            <property name="borderRightColor">#080808</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1px</property>
            <property name="borderTopColor">#080808</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1px</property>
            <property name="paddingTop">0.2em</property>
            <property name="paddingLeft">0.2em</property>
            <property name="paddingBottom">0.2em</property>
            <property name="paddingRight">0.2em</property>
            <property name="textAlign">left</property>
            <property name="height">6px</property>
        </style>
        <style name="Border" id="2407">
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">thin</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">thin</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">thin</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">thin</property>
        </style>
    </styles>
    <page-setup>
        <simple-master-page name="Simple MasterPage" id="2">
            <property name="leftMargin">0.20833333333333334in</property>
            <property name="rightMargin">0.23958333333333334in</property>
            <page-header>
                <text-data id="2383">
                    <property name="style">NewStyle</property>
                    <property name="fontFamily">sans-serif</property>
                    <property name="fontSize">12pt</property>
                    <property name="fontWeight">bold</property>
                    <property name="borderBottomStyle">none</property>
                    <property name="borderLeftStyle">none</property>
                    <property name="borderRightStyle">none</property>
                    <property name="borderTopStyle">none</property>
                    <property name="textAlign">center</property>
                    <expression name="valueExpr">params["rpth"].value</expression>
                    <property name="contentType">html</property>
                </text-data>
            </page-header>
            <page-footer>
                <grid id="5545">
                    <property name="borderBottomStyle">none</property>
                    <property name="borderLeftStyle">none</property>
                    <property name="borderRightStyle">none</property>
                    <property name="borderTopStyle">none</property>
                    <property name="canShrink">false</property>
                    <column id="5546"/>
                    <row id="5547">
                        <cell id="5548">
                            <grid id="5549">
                                <column id="5550">
                                    <property name="width">1.9in</property>
                                </column>
                                <column id="5551">
                                    <property name="width">4.3in</property>
                                </column>
                                <column id="4885">
                                    <property name="width">1.9in</property>
                                </column>
                                <row id="5552">
                                    <cell id="5553">
                                        <text id="5554">
                                            <property name="width">6cm</property>
                                            <property name="contentType">html</property>
                                            <text-property name="content"><![CDATA[<html>
<body>
<style>
.outer{
  text-align: center;
}
.outer img{
  display: inline-block;
}
</style>
<table>
<tr>
<td>
<div class="outer">

<img src="\img\Verdantlogo.png" height="50px" width="175px" align="baseline" name="myimage">

</div>
</td>
</tr>
</table>
</body>
</html>]]></text-property>
                                        </text>
                                    </cell>
                                    <cell id="5555">
                                        <property name="textAlign">center</property>
                                        <text-data id="5556">
                                            <property name="fontWeight">normal</property>
                                            <expression name="valueExpr">params["rptf"].value</expression>
                                            <property name="contentType">html</property>
                                        </text-data>
                                        <text-data id="4886">
                                            <property name="textAlign">center</property>
                                            <expression name="valueExpr">"Verdant Telemetry and Antenna Systems Pvt. Ltd., Cochin, India"</expression>
                                            <property name="contentType">html</property>
                                        </text-data>
                                    </cell>
                                    <cell id="4884"/>
                                </row>
                            </grid>
                        </cell>
                    </row>
                    <row id="5557">
                        <cell id="5558"/>
                    </row>
                </grid>
            </page-footer>
        </simple-master-page>
    </page-setup>
    <body>
        <label id="1837">
            <property name="backgroundColor">#C0C0C0</property>
            <property name="fontWeight">bold</property>
            <property name="textAlign">left</property>
            <property name="pageBreakBefore">auto</property>
            <property name="canShrink">false</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["3db"].value!='yes'</expression>
                </structure>
            </list-property>
            <text-property name="text">3dB Beamwidth and Beam Squint</text-property>
        </label>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="4587">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="4588">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="4589">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View22" id="4590">
                                    <property name="level">Group4/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4591">
                                            <property name="content">
                                                <data name="TestDesc2" id="4592">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4593">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View23" id="4594">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4595">
                                            <property name="content">
                                                <data name="testproc2" id="4596">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4597">
                            <property name="dimension">Group2</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View110" id="4598">
                                    <property name="level">Group2/TestDate</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4599">
                                            <property name="content">
                                                <data name="TestDate2" id="4600">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDate</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4601">
                            <property name="dimension">Group</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View32" id="4602">
                                    <property name="level">Group/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4603">
                                            <property name="content">
                                                <data name="Productname2" id="4604">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4605">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View42" id="4606">
                                    <property name="level">Group6/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4607">
                                            <property name="content">
                                                <data name="calibration2" id="4608">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4609">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View62" id="4610">
                                    <property name="level">Group9/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4611">
                                            <property name="content">
                                                <data name="testcenter2" id="4612">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4613">
                            <property name="dimension">Group10</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View72" id="4614">
                                    <property name="level">Group10/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4615">
                                            <property name="content">
                                                <data name="version2" id="4616">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4621">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View52" id="4622">
                                    <property name="level">Group8/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4623">
                                            <property name="content">
                                                <data name="instruments2" id="4624">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4625">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View92" id="4626">
                                    <property name="level">Group1/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4627">
                                            <property name="content">
                                                <data name="SerialNo2" id="4628">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="4629">
                    <property name="content">
                        <label id="4630">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4631">
                    <property name="content">
                        <label id="4632">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4633">
                    <property name="content">
                        <label id="4634">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Date</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4635">
                    <property name="content">
                        <label id="4636">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4637">
                    <property name="content">
                        <label id="4638">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4639">
                    <property name="content">
                        <label id="4640">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4641">
                    <property name="content">
                        <label id="4642">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4645">
                    <property name="content">
                        <label id="4646">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments </text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4647">
                    <property name="content">
                        <label id="4648">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                </extended-item>
            </property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["3db"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group4"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">TestDate</property>
                    <expression name="expression">dimension["Group2"]["TestDate"]</expression>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group6"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group8"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group9"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group10"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group1"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="1735">
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">medium</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">medium</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">medium</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">medium</property>
            <property name="canShrink">true</property>
            <property name="dataSet">fq3dbwithCP</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">row["Hide"]&lt;1 || params["3dbDeg"].value=="0d90d" || params["3dbDeg"].value=="bm" || params["3db"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Hide</property>
                    <text-property name="displayName">Hide</text-property>
                    <expression name="expression" type="javascript">dataSetRow["Hide"]</expression>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <column id="1736"/>
            <row id="1737">
                <cell id="1738">
                    <label id="1739">
                        <property name="fontSize">medium</property>
                        <property name="fontWeight">bold</property>
                        <property name="textAlign">center</property>
                        <text-property name="text">3dB Beamwidth</text-property>
                    </label>
                </cell>
            </row>
            <row id="1740">
                <cell id="1741">
                    <grid id="1742">
                        <column id="1743">
                            <property name="style">Border</property>
                        </column>
                        <column id="1745">
                            <property name="style">Border</property>
                        </column>
                        <column id="1746">
                            <property name="style">Border</property>
                        </column>
                        <row id="1747">
                            <cell id="1748">
                                <grid id="1749">
                                    <expression name="bookmark" type="javascript">"BMHP"</expression>
                                    <column id="1750"/>
                                    <row id="1751">
                                        <cell id="1752">
                                            <label id="1753">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Spot Freq.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="1754">
                                        <cell id="1755">
                                            <table id="1756">
                                                <property name="dataSet">fq3dbwithCP</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">Frequency</property>
                                                        <text-property name="displayName">frequency</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">frequnit</property>
                                                        <text-property name="displayName">frequnit</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["frequnit"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                </list-property>
                                                <column id="1765"/>
                                                <header>
                                                    <row id="1757">
                                                        <cell id="1758">
                                                            <data id="1759">
                                                                <property name="fontSize">small</property>
                                                                <property name="resultSetColumn">frequnit</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="1760">
                                                        <cell id="1761">
                                                            <data id="1762">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">Frequency</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="1763">
                                                        <cell id="1764"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="1790">
                                <property name="colSpan">2</property>
                                <property name="rowSpan">1</property>
                                <grid id="1791">
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">params["3dbDeg"].value=="90d"</expression>
                                        </structure>
                                    </list-property>
                                    <expression name="bookmark" type="javascript">"3db0hp"</expression>
                                    <column id="1792"/>
                                    <row id="1793">
                                        <cell id="1794">
                                            <label id="1795">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">0</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="1796">
                                        <cell id="1797">
                                            <table id="1798">
                                                <property name="dataSet">3dbhp0</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">3Db_BW_0</property>
                                                        <text-property name="displayName">3Db_BW_0</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["3Db_BW_0"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">3Db_BS_0</property>
                                                        <text-property name="displayName">3Db_BS_0</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["3Db_BS_0"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="1812"/>
                                                <column id="1813"/>
                                                <header>
                                                    <row id="1799">
                                                        <cell id="1800">
                                                            <label id="1801">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                        <cell id="1802">
                                                            <label id="1803">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">BS (dB)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="1804">
                                                        <cell id="1805">
                                                            <data id="1806">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">3Db_BW_0</property>
                                                            </data>
                                                        </cell>
                                                        <cell id="1807">
                                                            <data id="1808">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">3Db_BS_0</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="1809">
                                                        <cell id="1810"/>
                                                        <cell id="1811"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                                <grid id="1814">
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">params["3dbDeg"].value=="0d"</expression>
                                        </structure>
                                    </list-property>
                                    <expression name="bookmark" type="javascript">"3dbhp90"</expression>
                                    <column id="1815"/>
                                    <row id="1816">
                                        <cell id="1817">
                                            <label id="1818">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">90</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="1819">
                                        <cell id="1820">
                                            <table id="1821">
                                                <property name="dataSet">3dbhp90</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">3Db_BW_90</property>
                                                        <text-property name="displayName">3Db_BW_90</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["3Db_BW_90"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">3Db_BS_90</property>
                                                        <text-property name="displayName">3Db_BS_90</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["3Db_BS_90"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="1835"/>
                                                <column id="1836"/>
                                                <header>
                                                    <row id="1822">
                                                        <cell id="1823">
                                                            <label id="1824">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                        <cell id="1825">
                                                            <label id="1826">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">BS (dB)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="1827">
                                                        <cell id="1828">
                                                            <data id="1829">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">3Db_BW_90</property>
                                                            </data>
                                                        </cell>
                                                        <cell id="1830">
                                                            <data id="1831">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">3Db_BS_90</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="1832">
                                                        <cell id="1833"/>
                                                        <cell id="1834"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                        </row>
                    </grid>
                </cell>
            </row>
        </grid>
        <grid id="2551">
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">medium</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">medium</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">medium</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">medium</property>
            <property name="canShrink">true</property>
            <property name="dataSet">fq3dbwithCP</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">row["Hide"]&lt;1 || params["3dbDeg"].value!="bm" || params["3db"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Hide</property>
                    <text-property name="displayName">Hide</text-property>
                    <expression name="expression" type="javascript">dataSetRow["Hide"]</expression>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <column id="2552"/>
            <row id="2553">
                <cell id="2554">
                    <label id="2555">
                        <property name="fontSize">medium</property>
                        <property name="fontWeight">bold</property>
                        <property name="textAlign">center</property>
                        <text-property name="text">3dB Beamwidth</text-property>
                    </label>
                </cell>
            </row>
            <row id="2556">
                <cell id="2557">
                    <grid id="2558">
                        <column id="2559"/>
                        <column id="2560"/>
                        <row id="2561">
                            <cell id="2562">
                                <grid id="2604">
                                    <expression name="bookmark" type="javascript">"BMHP"</expression>
                                    <column id="2605"/>
                                    <row id="2606">
                                        <cell id="2607">
                                            <label id="2608">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Spot Freq.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="2609">
                                        <cell id="2610">
                                            <table id="2611">
                                                <property name="dataSet">fq3dbwithCP</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">Frequency</property>
                                                        <text-property name="displayName">frequency</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">frequnit</property>
                                                        <text-property name="displayName">frequnit</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["frequnit"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                </list-property>
                                                <column id="2620"/>
                                                <header>
                                                    <row id="2612">
                                                        <cell id="2613">
                                                            <data id="2614">
                                                                <property name="fontSize">small</property>
                                                                <property name="resultSetColumn">frequnit</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="2615">
                                                        <cell id="2616">
                                                            <data id="2617">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">Frequency</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="2618">
                                                        <cell id="2619"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="2580">
                                <grid id="2621">
                                    <column id="2622"/>
                                    <row id="2623">
                                        <cell id="2624">
                                            <label id="2625">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Beam Max.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="2626">
                                        <cell id="2627">
                                            <table id="2628">
                                                <property name="dataSet">3Db_BW_BMax</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">Frequency</property>
                                                        <text-property name="displayName">bwmax</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                        <property name="dataType">decimal</property>
                                                        <property name="allowExport">true</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">3Db_BW_BMax</property>
                                                        <text-property name="displayName">3Db_Bs_BMax</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                        <property name="dataType">decimal</property>
                                                        <property name="allowExport">true</property>
                                                    </structure>
                                                </list-property>
                                                <column id="2642"/>
                                                <column id="2643"/>
                                                <header>
                                                    <row id="2629">
                                                        <cell id="2630">
                                                            <label id="2631">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                        <cell id="2632">
                                                            <label id="2633">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">BSq (dB)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="2634">
                                                        <cell id="2635">
                                                            <data id="2636">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">Frequency</property>
                                                            </data>
                                                        </cell>
                                                        <cell id="2637">
                                                            <data id="2638">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">3Db_BW_BMax</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="2639">
                                                        <cell id="2640"/>
                                                        <cell id="2641"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                        </row>
                    </grid>
                </cell>
            </row>
        </grid>
        <grid id="1632">
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">medium</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">medium</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">medium</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">medium</property>
            <property name="canShrink">true</property>
            <property name="dataSet">fq3dbwithCP</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">row["Hide"]&lt;1 || params["3dbDeg"].value !="0d90d" || params["3db"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Hide</property>
                    <text-property name="displayName">Hide</text-property>
                    <expression name="expression" type="javascript">dataSetRow["Hide"]</expression>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <column id="1633"/>
            <row id="1634">
                <cell id="1635">
                    <label id="1636">
                        <property name="fontSize">medium</property>
                        <property name="fontWeight">bold</property>
                        <property name="textAlign">center</property>
                        <text-property name="text">3dB Beamwidth</text-property>
                    </label>
                </cell>
            </row>
            <row id="1637">
                <cell id="1638">
                    <grid id="1639">
                        <column id="1640">
                            <property name="style">Border</property>
                        </column>
                        <column id="1641">
                            <property name="style">Border</property>
                        </column>
                        <column id="1642">
                            <property name="style">Border</property>
                        </column>
                        <column id="1643">
                            <property name="style">Border</property>
                        </column>
                        <row id="1644">
                            <cell id="1645">
                                <grid id="1646">
                                    <expression name="bookmark" type="javascript">"BMHP"</expression>
                                    <column id="1647"/>
                                    <row id="1648">
                                        <cell id="1649">
                                            <label id="1650">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Spot Freq.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="1651">
                                        <cell id="1652">
                                            <table id="1653">
                                                <property name="dataSet">fq3dbwithCP</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">Frequency</property>
                                                        <text-property name="displayName">frequency</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">frequnit</property>
                                                        <text-property name="displayName">frequnit</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["frequnit"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                </list-property>
                                                <column id="1662"/>
                                                <header>
                                                    <row id="1654">
                                                        <cell id="1655">
                                                            <data id="1656">
                                                                <property name="fontSize">small</property>
                                                                <property name="resultSetColumn">frequnit</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="1657">
                                                        <cell id="1658">
                                                            <data id="1659">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">Frequency</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="1660">
                                                        <cell id="1661"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="1663">
                                <grid id="1664">
                                    <column id="1665"/>
                                    <row id="1666">
                                        <cell id="1667">
                                            <label id="1668">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Beam Max.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="1669">
                                        <cell id="1670">
                                            <table id="1671">
                                                <property name="dataSet">3Db_BW_BMax</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">Frequency</property>
                                                        <text-property name="displayName">bwmax</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                        <property name="dataType">decimal</property>
                                                        <property name="allowExport">true</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">3Db_BW_BMax</property>
                                                        <text-property name="displayName">3Db_Bs_BMax</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                        <property name="dataType">decimal</property>
                                                        <property name="allowExport">true</property>
                                                    </structure>
                                                </list-property>
                                                <column id="1685"/>
                                                <column id="1686"/>
                                                <header>
                                                    <row id="1672">
                                                        <cell id="1673">
                                                            <label id="1674">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                        <cell id="1675">
                                                            <label id="1676">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">BSq (dB)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="1677">
                                                        <cell id="1678">
                                                            <data id="1679">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">Frequency</property>
                                                            </data>
                                                        </cell>
                                                        <cell id="1680">
                                                            <data id="1681">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">3Db_BW_BMax</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="1682">
                                                        <cell id="1683"/>
                                                        <cell id="1684"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="1687">
                                <grid id="1688">
                                    <expression name="bookmark" type="javascript">"3db0hp"</expression>
                                    <column id="1689"/>
                                    <row id="1690">
                                        <cell id="1691">
                                            <label id="1692">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">0</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="1693">
                                        <cell id="1694">
                                            <table id="1695">
                                                <property name="dataSet">3dbhp0</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">3Db_BW_0</property>
                                                        <text-property name="displayName">3Db_BW_0</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["3Db_BW_0"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">3Db_BS_0</property>
                                                        <text-property name="displayName">3Db_BS_0</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["3Db_BS_0"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="1709"/>
                                                <column id="1710"/>
                                                <header>
                                                    <row id="1696">
                                                        <cell id="1697">
                                                            <label id="1698">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                        <cell id="1699">
                                                            <label id="1700">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">BS (dB)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="1701">
                                                        <cell id="1702">
                                                            <data id="1703">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">3Db_BW_0</property>
                                                            </data>
                                                        </cell>
                                                        <cell id="1704">
                                                            <data id="1705">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">3Db_BS_0</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="1706">
                                                        <cell id="1707"/>
                                                        <cell id="1708"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="1711">
                                <grid id="1712">
                                    <expression name="bookmark" type="javascript">"3dbhp90"</expression>
                                    <column id="1713"/>
                                    <row id="1714">
                                        <cell id="1715">
                                            <label id="1716">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">90</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="1717">
                                        <cell id="1718">
                                            <table id="1719">
                                                <property name="dataSet">3dbhp90</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">3Db_BW_90</property>
                                                        <text-property name="displayName">3Db_BW_90</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["3Db_BW_90"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">3Db_BS_90</property>
                                                        <text-property name="displayName">3Db_BS_90</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["3Db_BS_90"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="1733"/>
                                                <column id="1734"/>
                                                <header>
                                                    <row id="1720">
                                                        <cell id="1721">
                                                            <label id="1722">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                        <cell id="1723">
                                                            <label id="1724">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">BS (dB)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="1725">
                                                        <cell id="1726">
                                                            <data id="1727">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">3Db_BW_90</property>
                                                            </data>
                                                        </cell>
                                                        <cell id="1728">
                                                            <data id="1729">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">3Db_BS_90</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="1730">
                                                        <cell id="1731"/>
                                                        <cell id="1732"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                        </row>
                    </grid>
                </cell>
            </row>
        </grid>
        <label id="1626">
            <property name="backgroundColor">#C0C0C0</property>
            <property name="fontWeight">bold</property>
            <property name="textAlign">left</property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">false</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["10db"].value!='yes'</expression>
                </structure>
            </list-property>
            <text-property name="text">10dB Beamwidth and Beam Squint</text-property>
        </label>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="4649">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="4650">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="4651">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View221" id="4652">
                                    <property name="level">Group4/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4653">
                                            <property name="content">
                                                <data name="TestDesc21" id="4654">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4655">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View231" id="4656">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4657">
                                            <property name="content">
                                                <data name="testproc21" id="4658">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4659">
                            <property name="dimension">Group2</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1101" id="4660">
                                    <property name="level">Group2/TestDate</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4661">
                                            <property name="content">
                                                <data name="TestDate21" id="4662">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDate</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4663">
                            <property name="dimension">Group</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View321" id="4664">
                                    <property name="level">Group/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4665">
                                            <property name="content">
                                                <data name="Productname21" id="4666">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4667">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View421" id="4668">
                                    <property name="level">Group6/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4669">
                                            <property name="content">
                                                <data name="calibration21" id="4670">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4671">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View621" id="4672">
                                    <property name="level">Group9/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4673">
                                            <property name="content">
                                                <data name="testcenter21" id="4674">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4675">
                            <property name="dimension">Group10</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View721" id="4676">
                                    <property name="level">Group10/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4677">
                                            <property name="content">
                                                <data name="version21" id="4678">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4679">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View521" id="4680">
                                    <property name="level">Group8/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4681">
                                            <property name="content">
                                                <data name="instruments21" id="4682">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4683">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View921" id="4684">
                                    <property name="level">Group1/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4685">
                                            <property name="content">
                                                <data name="SerialNo21" id="4686">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="4687">
                    <property name="content">
                        <label id="4688">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4689">
                    <property name="content">
                        <label id="4690">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4691">
                    <property name="content">
                        <label id="4692">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Date</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4693">
                    <property name="content">
                        <label id="4694">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4695">
                    <property name="content">
                        <label id="4696">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4697">
                    <property name="content">
                        <label id="4698">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4699">
                    <property name="content">
                        <label id="4700">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4701">
                    <property name="content">
                        <label id="4702">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments </text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4703">
                    <property name="content">
                        <label id="4704">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                </extended-item>
            </property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["10db"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group4"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">TestDate</property>
                    <expression name="expression">dimension["Group2"]["TestDate"]</expression>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group6"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group8"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group9"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group10"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group1"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="640">
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">medium</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">medium</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">medium</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">medium</property>
            <property name="canShrink">true</property>
            <property name="dataSet">fq10dbwithCP</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">row["Hide"]&lt;1 || params["10dbDeg"].value=="0d90d" || params["10dbDeg"].value=="bm"  || params["10db"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Hide</property>
                    <text-property name="displayName">Hide</text-property>
                    <expression name="expression" type="javascript">dataSetRow["Hide"]</expression>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <column id="641"/>
            <row id="642">
                <cell id="643">
                    <label id="644">
                        <property name="fontSize">medium</property>
                        <property name="fontWeight">bold</property>
                        <property name="textAlign">center</property>
                        <text-property name="text">10dB Beamwidth</text-property>
                    </label>
                </cell>
            </row>
            <row id="645">
                <cell id="1530">
                    <grid id="1531">
                        <column id="1532">
                            <property name="style">Border</property>
                        </column>
                        <column id="1534">
                            <property name="style">Border</property>
                        </column>
                        <column id="1535">
                            <property name="style">Border</property>
                        </column>
                        <row id="1536">
                            <cell id="1537">
                                <grid id="1538">
                                    <expression name="bookmark" type="javascript">"BMHP"</expression>
                                    <column id="1539"/>
                                    <row id="1540">
                                        <cell id="1541">
                                            <label id="1542">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Spot Freq.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="1543">
                                        <cell id="1544">
                                            <table id="1545">
                                                <property name="dataSet">fq10dbwithCP</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">Frequency</property>
                                                        <text-property name="displayName">frequency</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">frequnit</property>
                                                        <text-property name="displayName">frequnit</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["frequnit"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                </list-property>
                                                <column id="1554"/>
                                                <header>
                                                    <row id="1546">
                                                        <cell id="1547">
                                                            <data id="1548">
                                                                <property name="fontSize">small</property>
                                                                <property name="resultSetColumn">frequnit</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="1549">
                                                        <cell id="1550">
                                                            <data id="1551">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">Frequency</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="1552">
                                                        <cell id="1553"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="1579">
                                <property name="colSpan">2</property>
                                <property name="rowSpan">1</property>
                                <grid id="1580">
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">params["10dbDeg"].value=="90d"</expression>
                                        </structure>
                                    </list-property>
                                    <expression name="bookmark" type="javascript">"3db0hp"</expression>
                                    <column id="1581"/>
                                    <row id="1582">
                                        <cell id="1583">
                                            <label id="1584">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">0</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="1585">
                                        <cell id="1586">
                                            <table id="1587">
                                                <property name="dataSet">10dbhp0</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">10Db_BW_0</property>
                                                        <text-property name="displayName">10Db_BW_0</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BW_0"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">10Db_BS_0</property>
                                                        <text-property name="displayName">10Db_BS_0</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BS_0"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">Column Binding</property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BW_0"]</expression>
                                                        <property name="dataType">string</property>
                                                        <property name="allowExport">true</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">Column Binding_1</property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BS_0"]</expression>
                                                        <property name="dataType">string</property>
                                                        <property name="allowExport">true</property>
                                                    </structure>
                                                </list-property>
                                                <column id="1601"/>
                                                <column id="1602"/>
                                                <header>
                                                    <row id="1588">
                                                        <cell id="1589">
                                                            <label id="1590">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text"> BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                        <cell id="1591">
                                                            <label id="1592">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">BS (dB)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="1593">
                                                        <cell id="1594">
                                                            <data id="1595">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">Column Binding</property>
                                                            </data>
                                                        </cell>
                                                        <cell id="1596">
                                                            <data id="1597">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">Column Binding_1</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="1598">
                                                        <cell id="1599"/>
                                                        <cell id="1600"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                                <grid id="1603">
                                    <list-property name="visibility">
                                        <structure>
                                            <property name="format">all</property>
                                            <expression name="valueExpr" type="javascript">params["10dbDeg"].value=="0d"</expression>
                                        </structure>
                                    </list-property>
                                    <expression name="bookmark" type="javascript">"3dbhp90"</expression>
                                    <column id="1604"/>
                                    <row id="1605">
                                        <cell id="1606">
                                            <label id="1607">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">90</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="1608">
                                        <cell id="1609">
                                            <table id="1610">
                                                <property name="dataSet">10dbhp90</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">10Db_BW_90</property>
                                                        <text-property name="displayName">10Db_BW_90</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BW_90"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">10Db_BS_90</property>
                                                        <text-property name="displayName">10Db_BS_90</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BS_90"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">Column Binding</property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BW_90"]</expression>
                                                        <property name="dataType">string</property>
                                                        <property name="allowExport">true</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">Column Binding_1</property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BS_90"]</expression>
                                                        <property name="dataType">string</property>
                                                        <property name="allowExport">true</property>
                                                    </structure>
                                                </list-property>
                                                <column id="1624"/>
                                                <column id="1625"/>
                                                <header>
                                                    <row id="1611">
                                                        <cell id="1612">
                                                            <label id="1613">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                        <cell id="1614">
                                                            <label id="1615">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">BS (dB)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="1616">
                                                        <cell id="1617">
                                                            <data id="1618">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">Column Binding</property>
                                                            </data>
                                                        </cell>
                                                        <cell id="1619">
                                                            <data id="1620">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">Column Binding_1</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="1621">
                                                        <cell id="1622"/>
                                                        <cell id="1623"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                        </row>
                    </grid>
                </cell>
            </row>
        </grid>
        <grid id="2486">
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">medium</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">medium</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">medium</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">medium</property>
            <property name="canShrink">true</property>
            <property name="dataSet">fq10dbwithCP</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">row["Hide"]&lt;1 || params["10dbDeg"].value!="bm" || params["10db"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Hide</property>
                    <text-property name="displayName">Hide</text-property>
                    <expression name="expression" type="javascript">dataSetRow["Hide"]</expression>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <column id="2487"/>
            <row id="2488">
                <cell id="2489">
                    <label id="2550">
                        <property name="fontSize">medium</property>
                        <property name="fontWeight">bold</property>
                        <property name="textAlign">center</property>
                        <text-property name="text">10dB Beamwidth</text-property>
                    </label>
                </cell>
            </row>
            <row id="2490">
                <cell id="2491">
                    <grid id="2492">
                        <column id="2493"/>
                        <column id="2494"/>
                        <row id="2495">
                            <cell id="2496">
                                <grid id="2510">
                                    <expression name="bookmark" type="javascript">"BMHP"</expression>
                                    <column id="2511"/>
                                    <row id="2512">
                                        <cell id="2513">
                                            <label id="2514">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Spot Freq.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="2515">
                                        <cell id="2516">
                                            <table id="2517">
                                                <property name="dataSet">fq10dbwithCP</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">Frequency</property>
                                                        <text-property name="displayName">frequency</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">frequnit</property>
                                                        <text-property name="displayName">frequnit</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["frequnit"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                </list-property>
                                                <column id="2526"/>
                                                <header>
                                                    <row id="2518">
                                                        <cell id="2519">
                                                            <data id="2520">
                                                                <property name="fontSize">small</property>
                                                                <property name="resultSetColumn">frequnit</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="2521">
                                                        <cell id="2522">
                                                            <data id="2523">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">Frequency</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="2524">
                                                        <cell id="2525"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="2497">
                                <grid id="2527">
                                    <column id="2528"/>
                                    <row id="2529">
                                        <cell id="2530">
                                            <label id="2531">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Beam Max.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="2532">
                                        <cell id="2533">
                                            <table id="2534">
                                                <property name="dataSet">10Db_BW_BMax</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">10Db_BW_BMax</property>
                                                        <text-property name="displayName">10Db_BW_BMax</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">10Db_BS_BMax</property>
                                                        <text-property name="displayName">10Db_BS_BMax</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">Column Binding</property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                        <property name="dataType">string</property>
                                                        <property name="allowExport">true</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">Column Binding_1</property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                        <property name="dataType">string</property>
                                                        <property name="allowExport">true</property>
                                                    </structure>
                                                </list-property>
                                                <column id="2548"/>
                                                <column id="2549"/>
                                                <header>
                                                    <row id="2535">
                                                        <cell id="2536">
                                                            <label id="2537">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text"> BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                        <cell id="2538">
                                                            <label id="2539">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">BSq (dB)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="2540">
                                                        <cell id="2541">
                                                            <data id="2542">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">Column Binding</property>
                                                            </data>
                                                        </cell>
                                                        <cell id="2543">
                                                            <data id="2544">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">Column Binding_1</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="2545">
                                                        <cell id="2546"/>
                                                        <cell id="2547"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                        </row>
                    </grid>
                </cell>
            </row>
        </grid>
        <grid id="335">
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">medium</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">medium</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">medium</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">medium</property>
            <property name="canShrink">true</property>
            <property name="dataSet">fq10dbwithCP</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">row["Hide"]&lt;1 || params["10dbDeg"].value !="0d90d" || params["10db"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Hide</property>
                    <text-property name="displayName">Hide</text-property>
                    <expression name="expression" type="javascript">dataSetRow["Hide"]</expression>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <column id="336"/>
            <row id="337">
                <cell id="338">
                    <label id="341">
                        <property name="fontSize">medium</property>
                        <property name="fontWeight">bold</property>
                        <property name="textAlign">center</property>
                        <text-property name="text">10dB Beamwidth</text-property>
                    </label>
                </cell>
            </row>
            <row id="339">
                <cell id="340">
                    <grid id="532">
                        <column id="533">
                            <property name="style">Border</property>
                        </column>
                        <column id="534">
                            <property name="style">Border</property>
                        </column>
                        <column id="535">
                            <property name="style">Border</property>
                        </column>
                        <column id="536">
                            <property name="style">Border</property>
                        </column>
                        <row id="537">
                            <cell id="538">
                                <grid id="1512">
                                    <expression name="bookmark" type="javascript">"BMHP"</expression>
                                    <column id="1513"/>
                                    <row id="1514">
                                        <cell id="1515">
                                            <label id="1516">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Spot Freq.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="1517">
                                        <cell id="1518">
                                            <table id="1519">
                                                <property name="dataSet">fq10dbwithCP</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">Frequency</property>
                                                        <text-property name="displayName">frequency</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">frequnit</property>
                                                        <text-property name="displayName">frequnit</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["frequnit"]</expression>
                                                        <property name="dataType">string</property>
                                                    </structure>
                                                </list-property>
                                                <column id="1528"/>
                                                <header>
                                                    <row id="1520">
                                                        <cell id="1521">
                                                            <data id="1522">
                                                                <property name="fontSize">small</property>
                                                                <property name="resultSetColumn">frequnit</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="1523">
                                                        <cell id="1524">
                                                            <data id="1525">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">Frequency</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="1526">
                                                        <cell id="1527"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="539">
                                <grid id="542">
                                    <column id="543"/>
                                    <row id="544">
                                        <cell id="545">
                                            <label id="564">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">Beam Max.</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="546">
                                        <cell id="547">
                                            <table id="548">
                                                <property name="dataSet">10Db_BW_BMax</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">10Db_BW_BMax</property>
                                                        <text-property name="displayName">10Db_BW_BMax</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">10Db_BS_BMax</property>
                                                        <text-property name="displayName">10Db_BS_BMax</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">Column Binding</property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                        <property name="dataType">string</property>
                                                        <property name="allowExport">true</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">Column Binding_1</property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                        <property name="dataType">string</property>
                                                        <property name="allowExport">true</property>
                                                    </structure>
                                                </list-property>
                                                <column id="562"/>
                                                <column id="563"/>
                                                <header>
                                                    <row id="549">
                                                        <cell id="550">
                                                            <label id="551">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text"> BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                        <cell id="552">
                                                            <label id="553">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">BSq (dB)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="554">
                                                        <cell id="555">
                                                            <data id="556">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">Column Binding</property>
                                                            </data>
                                                        </cell>
                                                        <cell id="557">
                                                            <data id="558">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">Column Binding_1</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="559">
                                                        <cell id="560"/>
                                                        <cell id="561"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="540">
                                <grid id="584">
                                    <expression name="bookmark" type="javascript">"3db0hp"</expression>
                                    <column id="585"/>
                                    <row id="586">
                                        <cell id="587">
                                            <label id="607">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">0</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="588">
                                        <cell id="589">
                                            <table id="590">
                                                <property name="dataSet">10dbhp0</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">10Db_BW_0</property>
                                                        <text-property name="displayName">10Db_BW_0</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BW_0"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">10Db_BS_0</property>
                                                        <text-property name="displayName">10Db_BS_0</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BS_0"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">Column Binding</property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BW_0"]</expression>
                                                        <property name="dataType">string</property>
                                                        <property name="allowExport">true</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">Column Binding_1</property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BS_0"]</expression>
                                                        <property name="dataType">string</property>
                                                        <property name="allowExport">true</property>
                                                    </structure>
                                                </list-property>
                                                <column id="604"/>
                                                <column id="605"/>
                                                <header>
                                                    <row id="591">
                                                        <cell id="592">
                                                            <label id="593">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text"> BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                        <cell id="594">
                                                            <label id="595">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">BS (dB)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="596">
                                                        <cell id="597">
                                                            <data id="598">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">Column Binding</property>
                                                            </data>
                                                        </cell>
                                                        <cell id="599">
                                                            <data id="600">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">Column Binding_1</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="601">
                                                        <cell id="602"/>
                                                        <cell id="603"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                            <cell id="541">
                                <grid id="609">
                                    <expression name="bookmark" type="javascript">"3dbhp90"</expression>
                                    <column id="610"/>
                                    <row id="611">
                                        <cell id="612">
                                            <label id="631">
                                                <property name="fontSize">medium</property>
                                                <property name="fontWeight">bold</property>
                                                <property name="textAlign">center</property>
                                                <text-property name="text">90</text-property>
                                            </label>
                                        </cell>
                                    </row>
                                    <row id="613">
                                        <cell id="614">
                                            <table id="615">
                                                <property name="dataSet">10dbhp90</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">10Db_BW_90</property>
                                                        <text-property name="displayName">10Db_BW_90</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BW_90"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">10Db_BS_90</property>
                                                        <text-property name="displayName">10Db_BS_90</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BS_90"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">Column Binding</property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BW_90"]</expression>
                                                        <property name="dataType">string</property>
                                                        <property name="allowExport">true</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">Column Binding_1</property>
                                                        <expression name="expression" type="javascript">dataSetRow["10Db_BS_90"]</expression>
                                                        <property name="dataType">string</property>
                                                        <property name="allowExport">true</property>
                                                    </structure>
                                                </list-property>
                                                <column id="629"/>
                                                <column id="630"/>
                                                <header>
                                                    <row id="616">
                                                        <cell id="617">
                                                            <label id="618">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text"> BW (deg.)</text-property>
                                                            </label>
                                                        </cell>
                                                        <cell id="619">
                                                            <label id="620">
                                                                <property name="fontSize">small</property>
                                                                <text-property name="text">BS (dB)</text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="621">
                                                        <cell id="622">
                                                            <data id="623">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">Column Binding</property>
                                                            </data>
                                                        </cell>
                                                        <cell id="624">
                                                            <data id="625">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">Column Binding_1</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="626">
                                                        <cell id="627"/>
                                                        <cell id="628"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                        </row>
                    </grid>
                </cell>
            </row>
        </grid>
        <label id="1510">
            <property name="backgroundColor">#C0C0C0</property>
            <property name="fontWeight">bold</property>
            <property name="textAlign">left</property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">false</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["blobe"].value!='yes'</expression>
                </structure>
            </list-property>
            <text-property name="text">Back Lobe Level</text-property>
        </label>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="4761">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="4762">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="4763">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View2212" id="4764">
                                    <property name="level">Group4/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4765">
                                            <property name="content">
                                                <data name="TestDesc212" id="4766">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4767">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View2312" id="4768">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4769">
                                            <property name="content">
                                                <data name="testproc212" id="4770">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4771">
                            <property name="dimension">Group2</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View11012" id="4772">
                                    <property name="level">Group2/TestDate</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4773">
                                            <property name="content">
                                                <data name="TestDate212" id="4774">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDate</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4775">
                            <property name="dimension">Group</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View3212" id="4776">
                                    <property name="level">Group/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4777">
                                            <property name="content">
                                                <data name="Productname212" id="4778">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4779">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View4212" id="4780">
                                    <property name="level">Group6/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4781">
                                            <property name="content">
                                                <data name="calibration212" id="4782">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4783">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View6212" id="4784">
                                    <property name="level">Group9/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4785">
                                            <property name="content">
                                                <data name="testcenter212" id="4786">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4787">
                            <property name="dimension">Group10</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View7212" id="4788">
                                    <property name="level">Group10/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4789">
                                            <property name="content">
                                                <data name="version212" id="4790">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4791">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View5212" id="4792">
                                    <property name="level">Group8/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4793">
                                            <property name="content">
                                                <data name="instruments212" id="4794">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4795">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View9212" id="4796">
                                    <property name="level">Group1/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4797">
                                            <property name="content">
                                                <data name="SerialNo212" id="4798">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="4799">
                    <property name="content">
                        <label id="4800">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4801">
                    <property name="content">
                        <label id="4802">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4803">
                    <property name="content">
                        <label id="4804">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Date</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4805">
                    <property name="content">
                        <label id="4806">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4807">
                    <property name="content">
                        <label id="4808">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4809">
                    <property name="content">
                        <label id="4810">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4811">
                    <property name="content">
                        <label id="4812">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4813">
                    <property name="content">
                        <label id="4814">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments </text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4815">
                    <property name="content">
                        <label id="4816">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                </extended-item>
            </property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["blobe"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group4"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">TestDate</property>
                    <expression name="expression">dimension["Group2"]["TestDate"]</expression>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group6"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group8"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group9"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group10"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group1"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="763">
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">thin</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">thin</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">thin</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">thin</property>
            <property name="canShrink">true</property>
            <property name="dataSet">fqBlobe</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["blobe"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Hide</property>
                    <text-property name="displayName">Hide</text-property>
                    <expression name="expression" type="javascript">dataSetRow["Hide"]</expression>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <column id="764"/>
            <column id="765"/>
            <row id="766">
                <cell id="767"/>
                <cell id="768">
                    <label id="1466">
                        <property name="fontSize">medium</property>
                        <property name="fontWeight">bold</property>
                        <property name="textAlign">center</property>
                        <text-property name="text">Back Lobe Level </text-property>
                    </label>
                </cell>
            </row>
            <row id="769">
                <cell id="770">
                    <grid id="1467">
                        <property name="borderBottomStyle">solid</property>
                        <property name="borderBottomWidth">thin</property>
                        <property name="borderLeftStyle">solid</property>
                        <property name="borderLeftWidth">thin</property>
                        <property name="borderRightStyle">solid</property>
                        <property name="borderRightWidth">thin</property>
                        <property name="borderTopStyle">solid</property>
                        <property name="borderTopWidth">thin</property>
                        <expression name="bookmark" type="javascript">"BMHP"</expression>
                        <column id="1468"/>
                        <row id="1469">
                            <cell id="1470">
                                <label id="1471">
                                    <property name="fontSize">medium</property>
                                    <property name="fontWeight">bold</property>
                                    <property name="textAlign">center</property>
                                    <text-property name="text">Spot Frequency</text-property>
                                </label>
                            </cell>
                        </row>
                        <row id="1472">
                            <cell id="1473">
                                <grid id="1474">
                                    <column id="1475"/>
                                    <row id="1476">
                                        <cell id="1477">
                                            <table id="1478">
                                                <property name="dataSet">fqBlobe</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">frequnit</property>
                                                        <text-property name="displayName">frequnit</text-property>
                                                        <expression name="expression" type="javascript">"("+dataSetRow["frequnit"]+")"</expression>
                                                        <property name="dataType">string</property>
                                                        <property name="allowExport">true</property>
                                                    </structure>
                                                    <structure>
                                                        <property name="name">Frequency</property>
                                                        <text-property name="displayName">frequency</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="1487"/>
                                                <header>
                                                    <row id="1479">
                                                        <cell id="1480">
                                                            <data id="1481">
                                                                <property name="fontSize">small</property>
                                                                <property name="resultSetColumn">frequnit</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="1482">
                                                        <cell id="1483">
                                                            <data id="1484">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">Frequency</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="1485">
                                                        <cell id="1486"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                        </row>
                    </grid>
                </cell>
                <cell id="1488">
                    <grid id="1489">
                        <property name="style">Border</property>
                        <column id="1490"/>
                        <row id="1491">
                            <cell id="1492">
                                <label id="1493">
                                    <property name="fontSize">medium</property>
                                    <property name="fontWeight">bold</property>
                                    <property name="textAlign">center</property>
                                    <text-property name="text">(dB)</text-property>
                                </label>
                            </cell>
                        </row>
                        <row id="1494">
                            <cell id="1495">
                                <grid id="1496">
                                    <column id="1497">
                                        <property name="style">Border</property>
                                    </column>
                                    <row id="1498">
                                        <cell id="1499">
                                            <table id="1500">
                                                <property name="dataSet">cplobe</property>
                                                <list-property name="boundDataColumns">
                                                    <structure>
                                                        <property name="name">BackLobe</property>
                                                        <text-property name="displayName">BackLobe</text-property>
                                                        <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                        <property name="dataType">decimal</property>
                                                    </structure>
                                                </list-property>
                                                <column id="1509"/>
                                                <header>
                                                    <row id="1501">
                                                        <cell id="1502">
                                                            <label id="1503">
                                                                <text-property name="text"></text-property>
                                                            </label>
                                                        </cell>
                                                    </row>
                                                </header>
                                                <detail>
                                                    <row id="1504">
                                                        <cell id="1505">
                                                            <data id="1506">
                                                                <property name="fontSize">small</property>
                                                                <property name="textAlign">center</property>
                                                                <property name="resultSetColumn">BackLobe</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </detail>
                                                <footer>
                                                    <row id="1507">
                                                        <cell id="1508"/>
                                                    </row>
                                                </footer>
                                            </table>
                                        </cell>
                                    </row>
                                </grid>
                            </cell>
                        </row>
                    </grid>
                </cell>
            </row>
        </grid>
        <label id="777">
            <property name="backgroundColor">#C0C0C0</property>
            <property name="fontWeight">bold</property>
            <property name="textAlign">left</property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">false</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["axr"].value!='yes'</expression>
                </structure>
            </list-property>
            <text-property name="text">Axial Ratio</text-property>
        </label>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="4705">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="4706">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="4707">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View2211" id="4708">
                                    <property name="level">Group4/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4709">
                                            <property name="content">
                                                <data name="TestDesc211" id="4710">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4711">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View2311" id="4712">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4713">
                                            <property name="content">
                                                <data name="testproc211" id="4714">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4715">
                            <property name="dimension">Group2</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View11011" id="4716">
                                    <property name="level">Group2/TestDate</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4717">
                                            <property name="content">
                                                <data name="TestDate211" id="4718">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDate</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4719">
                            <property name="dimension">Group</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View3211" id="4720">
                                    <property name="level">Group/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4721">
                                            <property name="content">
                                                <data name="Productname211" id="4722">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4723">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View4211" id="4724">
                                    <property name="level">Group6/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4725">
                                            <property name="content">
                                                <data name="calibration211" id="4726">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4727">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View6211" id="4728">
                                    <property name="level">Group9/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4729">
                                            <property name="content">
                                                <data name="testcenter211" id="4730">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4731">
                            <property name="dimension">Group10</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View7211" id="4732">
                                    <property name="level">Group10/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4733">
                                            <property name="content">
                                                <data name="version211" id="4734">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4735">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View5211" id="4736">
                                    <property name="level">Group8/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4737">
                                            <property name="content">
                                                <data name="instruments211" id="4738">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4739">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View9211" id="4740">
                                    <property name="level">Group1/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4741">
                                            <property name="content">
                                                <data name="SerialNo211" id="4742">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="4743">
                    <property name="content">
                        <label id="4744">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4745">
                    <property name="content">
                        <label id="4746">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4747">
                    <property name="content">
                        <label id="4748">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Date</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4749">
                    <property name="content">
                        <label id="4750">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4751">
                    <property name="content">
                        <label id="4752">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4753">
                    <property name="content">
                        <label id="4754">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4755">
                    <property name="content">
                        <label id="4756">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4757">
                    <property name="content">
                        <label id="4758">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments </text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4759">
                    <property name="content">
                        <label id="4760">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                </extended-item>
            </property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["axr"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group4"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">TestDate</property>
                    <expression name="expression">dimension["Group2"]["TestDate"]</expression>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group6"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group8"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group9"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group10"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group1"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="789">
            <property name="display">block</property>
            <property name="canShrink">true</property>
            <property name="dataSet">fq</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">row["Hide"]&lt;1 || params["AxDeg"].value=="b" || params["AxDeg"].value=='x' || params["axr"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Hide</property>
                    <text-property name="displayName">Hide</text-property>
                    <expression name="expression" type="javascript">dataSetRow["Hide"]</expression>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <column id="790">
                <property name="style">Border</property>
            </column>
            <column id="791">
                <property name="style">Border</property>
            </column>
            <column id="792">
                <property name="style">Border</property>
            </column>
            <column id="793">
                <property name="style">Border</property>
            </column>
            <column id="794">
                <property name="style">Border</property>
            </column>
            <column id="795">
                <property name="style">Border</property>
            </column>
            <row id="796">
                <cell id="797">
                    <grid id="798">
                        <expression name="bookmark" type="javascript">"BMHP"</expression>
                        <column id="799"/>
                        <row id="800">
                            <cell id="801">
                                <label id="802">
                                    <property name="fontSize">medium</property>
                                    <property name="fontWeight">bold</property>
                                    <property name="textAlign">center</property>
                                    <text-property name="text">S.Freq.</text-property>
                                </label>
                            </cell>
                        </row>
                        <row id="803">
                            <cell id="804">
                                <table id="805">
                                    <property name="dataSet">fq</property>
                                    <list-property name="boundDataColumns">
                                        <structure>
                                            <property name="name">Frequency</property>
                                            <text-property name="displayName">frequency</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                                            <property name="dataType">decimal</property>
                                        </structure>
                                        <structure>
                                            <property name="name">frequnit</property>
                                            <text-property name="displayName">frequnit</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["frequnit"]</expression>
                                            <property name="dataType">string</property>
                                        </structure>
                                    </list-property>
                                    <column id="814"/>
                                    <header>
                                        <row id="806">
                                            <cell id="807">
                                                <data id="808">
                                                    <property name="fontSize">small</property>
                                                    <property name="resultSetColumn">frequnit</property>
                                                </data>
                                            </cell>
                                        </row>
                                    </header>
                                    <detail>
                                        <row id="809">
                                            <cell id="810">
                                                <data id="811">
                                                    <property name="fontSize">small</property>
                                                    <property name="textAlign">center</property>
                                                    <property name="resultSetColumn">Frequency</property>
                                                </data>
                                            </cell>
                                        </row>
                                    </detail>
                                    <footer>
                                        <row id="812">
                                            <cell id="813"/>
                                        </row>
                                    </footer>
                                </table>
                            </cell>
                        </row>
                    </grid>
                </cell>
                <cell id="815">
                    <grid id="816">
                        <property name="canShrink">true</property>
                        <column id="817"/>
                        <row id="818">
                            <cell id="819">
                                <label id="820">
                                    <property name="fontSize">medium</property>
                                    <property name="fontWeight">bold</property>
                                    <property name="textAlign">center</property>
                                    <text-property name="text">On axis (0) </text-property>
                                </label>
                            </cell>
                        </row>
                        <row id="821">
                            <cell id="822">
                                <table id="823">
                                    <property name="dataSet">on0axis</property>
                                    <list-property name="boundDataColumns">
                                        <structure>
                                            <property name="name">AR_0</property>
                                            <text-property name="displayName">AR_0</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                            <property name="dataType">decimal</property>
                                        </structure>
                                    </list-property>
                                    <column id="832"/>
                                    <header>
                                        <row id="824">
                                            <cell id="825">
                                                <label id="826">
                                                    <property name="fontSize">small</property>
                                                    <text-property name="text">Axial Ratio</text-property>
                                                </label>
                                            </cell>
                                        </row>
                                    </header>
                                    <detail>
                                        <row id="827">
                                            <cell id="828">
                                                <data id="829">
                                                    <property name="fontSize">small</property>
                                                    <property name="textAlign">center</property>
                                                    <property name="resultSetColumn">AR_0</property>
                                                </data>
                                            </cell>
                                        </row>
                                    </detail>
                                    <footer>
                                        <row id="830">
                                            <cell id="831"/>
                                        </row>
                                    </footer>
                                </table>
                            </cell>
                        </row>
                    </grid>
                </cell>
                <cell id="833">
                    <grid id="834">
                        <property name="canShrink">true</property>
                        <column id="835"/>
                        <row id="836">
                            <cell id="837">
                                <label id="838">
                                    <property name="fontSize">medium</property>
                                    <property name="fontWeight">bold</property>
                                    <property name="textAlign">center</property>
                                    <text-property name="text">Off axis (+45)</text-property>
                                </label>
                            </cell>
                        </row>
                        <row id="1435">
                            <cell id="1436">
                                <table id="1437">
                                    <property name="dataSet">offaxis+45</property>
                                    <list-property name="boundDataColumns">
                                        <structure>
                                            <property name="name">AR_P45</property>
                                            <text-property name="displayName">AR_P45</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["AR_P45"]</expression>
                                            <property name="dataType">decimal</property>
                                        </structure>
                                    </list-property>
                                    <column id="1446"/>
                                    <header>
                                        <row id="1438">
                                            <cell id="1439">
                                                <label id="1440">
                                                    <property name="fontSize">small</property>
                                                    <text-property name="text">Axial Ratio</text-property>
                                                </label>
                                            </cell>
                                        </row>
                                    </header>
                                    <detail>
                                        <row id="1441">
                                            <cell id="1442">
                                                <data id="1443">
                                                    <property name="fontSize">small</property>
                                                    <property name="textAlign">center</property>
                                                    <property name="resultSetColumn">AR_P45</property>
                                                </data>
                                            </cell>
                                        </row>
                                    </detail>
                                    <footer>
                                        <row id="1444">
                                            <cell id="1445"/>
                                        </row>
                                    </footer>
                                </table>
                            </cell>
                        </row>
                    </grid>
                </cell>
                <cell id="1447">
                    <grid id="1448">
                        <property name="canShrink">true</property>
                        <column id="1449"/>
                        <row id="1450">
                            <cell id="1451">
                                <label id="1452">
                                    <property name="fontSize">medium</property>
                                    <property name="fontWeight">bold</property>
                                    <property name="textAlign">center</property>
                                    <text-property name="text">Off axis (-45)</text-property>
                                </label>
                            </cell>
                        </row>
                        <row id="857">
                            <cell id="1453">
                                <table id="859">
                                    <property name="dataSet">offaxis-45</property>
                                    <list-property name="boundDataColumns">
                                        <structure>
                                            <property name="name">AR_M45</property>
                                            <text-property name="displayName">AR_M45</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["AR_M45"]</expression>
                                            <property name="dataType">decimal</property>
                                        </structure>
                                    </list-property>
                                    <column id="1461"/>
                                    <header>
                                        <row id="860">
                                            <cell id="1454">
                                                <label id="1455">
                                                    <property name="fontSize">small</property>
                                                    <text-property name="text">Axial Ratio</text-property>
                                                </label>
                                            </cell>
                                        </row>
                                    </header>
                                    <detail>
                                        <row id="1456">
                                            <cell id="1457">
                                                <data id="1458">
                                                    <property name="fontSize">small</property>
                                                    <property name="textAlign">center</property>
                                                    <property name="resultSetColumn">AR_M45</property>
                                                </data>
                                            </cell>
                                        </row>
                                    </detail>
                                    <footer>
                                        <row id="1459">
                                            <cell id="1460"/>
                                        </row>
                                    </footer>
                                </table>
                            </cell>
                        </row>
                    </grid>
                </cell>
                <cell id="1462">
                    <property name="colSpan">2</property>
                    <property name="rowSpan">1</property>
                    <grid id="1463">
                        <property name="canShrink">true</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">params["AxDeg"].value=="n"</expression>
                            </structure>
                        </list-property>
                        <property name="allowExport">true</property>
                        <column id="871"/>
                        <row id="872">
                            <cell id="873">
                                <label id="874">
                                    <property name="fontSize">medium</property>
                                    <property name="fontWeight">bold</property>
                                    <property name="textAlign">center</property>
                                    <text-property name="text">Max diff (0 to +45)</text-property>
                                </label>
                            </cell>
                        </row>
                        <row id="875">
                            <cell id="876">
                                <table id="877">
                                    <property name="dataSet">max0+45</property>
                                    <list-property name="boundDataColumns">
                                        <structure>
                                            <property name="name">MaxAR_P_Ratio</property>
                                            <text-property name="displayName">MaxAR_P_Ratio</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["MaxAR_P_Ratio"]</expression>
                                            <property name="dataType">decimal</property>
                                        </structure>
                                        <structure>
                                            <property name="name">MaxAR_P_Angle</property>
                                            <text-property name="displayName">MaxAR_P_Angle</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["MaxAR_P_Angle"]</expression>
                                            <property name="dataType">decimal</property>
                                        </structure>
                                    </list-property>
                                    <column id="891"/>
                                    <column id="892"/>
                                    <header>
                                        <row id="878">
                                            <cell id="879">
                                                <label id="880">
                                                    <property name="fontSize">small</property>
                                                    <text-property name="text">Axial Ratio</text-property>
                                                </label>
                                            </cell>
                                            <cell id="881">
                                                <label id="882">
                                                    <property name="fontSize">small</property>
                                                    <text-property name="text">Angle</text-property>
                                                </label>
                                            </cell>
                                        </row>
                                    </header>
                                    <detail>
                                        <row id="883">
                                            <cell id="884">
                                                <data id="885">
                                                    <property name="fontSize">small</property>
                                                    <property name="textAlign">center</property>
                                                    <property name="resultSetColumn">MaxAR_P_Ratio</property>
                                                </data>
                                            </cell>
                                            <cell id="886">
                                                <data id="887">
                                                    <property name="fontSize">small</property>
                                                    <property name="textAlign">center</property>
                                                    <property name="resultSetColumn">MaxAR_P_Angle</property>
                                                </data>
                                            </cell>
                                        </row>
                                    </detail>
                                    <footer>
                                        <row id="888">
                                            <cell id="889"/>
                                            <cell id="890"/>
                                        </row>
                                    </footer>
                                </table>
                            </cell>
                        </row>
                    </grid>
                    <grid id="894">
                        <property name="canShrink">true</property>
                        <list-property name="visibility">
                            <structure>
                                <property name="format">all</property>
                                <expression name="valueExpr" type="javascript">params["AxDeg"].value=="p"</expression>
                            </structure>
                        </list-property>
                        <column id="895"/>
                        <row id="896">
                            <cell id="897">
                                <label id="898">
                                    <property name="fontSize">medium</property>
                                    <property name="fontWeight">bold</property>
                                    <property name="textAlign">center</property>
                                    <text-property name="text">Max diff (0 to -45)</text-property>
                                </label>
                            </cell>
                        </row>
                        <row id="899">
                            <cell id="900">
                                <table id="901">
                                    <property name="dataSet">max0-45</property>
                                    <list-property name="boundDataColumns">
                                        <structure>
                                            <property name="name">MaxAR_M_Ratio</property>
                                            <text-property name="displayName">MaxAR_M_Ratio</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["MaxAR_M_Ratio"]</expression>
                                            <property name="dataType">decimal</property>
                                        </structure>
                                        <structure>
                                            <property name="name">MaxAR_M_Angle</property>
                                            <text-property name="displayName">MaxAR_M_Angle</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["MaxAR_M_Angle"]</expression>
                                            <property name="dataType">decimal</property>
                                        </structure>
                                    </list-property>
                                    <column id="915"/>
                                    <column id="916"/>
                                    <header>
                                        <row id="902">
                                            <cell id="903">
                                                <label id="904">
                                                    <property name="fontSize">small</property>
                                                    <text-property name="text">Axial Ratio</text-property>
                                                </label>
                                            </cell>
                                            <cell id="905">
                                                <label id="906">
                                                    <property name="fontSize">small</property>
                                                    <text-property name="text">Angle</text-property>
                                                </label>
                                            </cell>
                                        </row>
                                    </header>
                                    <detail>
                                        <row id="907">
                                            <cell id="908">
                                                <data id="909">
                                                    <property name="fontSize">small</property>
                                                    <property name="textAlign">center</property>
                                                    <property name="resultSetColumn">MaxAR_M_Ratio</property>
                                                </data>
                                            </cell>
                                            <cell id="910">
                                                <data id="911">
                                                    <property name="fontSize">small</property>
                                                    <property name="textAlign">center</property>
                                                    <property name="resultSetColumn">MaxAR_M_Angle</property>
                                                </data>
                                            </cell>
                                        </row>
                                    </detail>
                                    <footer>
                                        <row id="912">
                                            <cell id="913"/>
                                            <cell id="914"/>
                                        </row>
                                    </footer>
                                </table>
                            </cell>
                        </row>
                    </grid>
                </cell>
            </row>
        </grid>
        <grid id="2199">
            <property name="display">block</property>
            <property name="canShrink">true</property>
            <property name="dataSet">fq</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">row["Hide"]&lt;1 || params["AxDeg"].value!="b" || params["axr"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Hide</property>
                    <text-property name="displayName">Hide</text-property>
                    <expression name="expression" type="javascript">dataSetRow["Hide"]</expression>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <column id="2200">
                <property name="style">Border</property>
            </column>
            <column id="2201">
                <property name="style">Border</property>
            </column>
            <column id="2202">
                <property name="style">Border</property>
            </column>
            <column id="2203">
                <property name="style">Border</property>
            </column>
            <column id="2204">
                <property name="style">Border</property>
            </column>
            <column id="2205">
                <property name="style">Border</property>
            </column>
            <row id="2206">
                <cell id="2207">
                    <grid id="2208">
                        <expression name="bookmark" type="javascript">"BMHP"</expression>
                        <column id="2209"/>
                        <row id="2210">
                            <cell id="2211">
                                <label id="2212">
                                    <property name="fontWeight">bold</property>
                                    <property name="textAlign">center</property>
                                    <text-property name="text">Spot Freq.</text-property>
                                </label>
                            </cell>
                        </row>
                        <row id="2213">
                            <cell id="2214">
                                <table id="2215">
                                    <property name="dataSet">fq</property>
                                    <list-property name="boundDataColumns">
                                        <structure>
                                            <property name="name">Frequency</property>
                                            <text-property name="displayName">frequency</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                                            <property name="dataType">decimal</property>
                                        </structure>
                                        <structure>
                                            <property name="name">frequnit</property>
                                            <text-property name="displayName">frequnit</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["frequnit"]</expression>
                                            <property name="dataType">string</property>
                                        </structure>
                                    </list-property>
                                    <column id="2224"/>
                                    <header>
                                        <row id="2216">
                                            <cell id="2217">
                                                <data id="2218">
                                                    <property name="fontSize">9pt</property>
                                                    <property name="resultSetColumn">frequnit</property>
                                                </data>
                                            </cell>
                                        </row>
                                    </header>
                                    <detail>
                                        <row id="2219">
                                            <cell id="2220">
                                                <data id="2221">
                                                    <property name="fontSize">9pt</property>
                                                    <property name="textAlign">center</property>
                                                    <property name="resultSetColumn">Frequency</property>
                                                </data>
                                            </cell>
                                        </row>
                                    </detail>
                                    <footer>
                                        <row id="2222">
                                            <cell id="2223"/>
                                        </row>
                                    </footer>
                                </table>
                            </cell>
                        </row>
                    </grid>
                </cell>
                <cell id="2225">
                    <grid id="2226">
                        <property name="canShrink">true</property>
                        <column id="2227"/>
                        <row id="2228">
                            <cell id="2229">
                                <label id="2230">
                                    <property name="fontWeight">bold</property>
                                    <property name="textAlign">center</property>
                                    <text-property name="text">On axis (0) </text-property>
                                </label>
                            </cell>
                        </row>
                        <row id="2231">
                            <cell id="2232">
                                <table id="2233">
                                    <property name="dataSet">on0axis</property>
                                    <list-property name="boundDataColumns">
                                        <structure>
                                            <property name="name">AR_0</property>
                                            <text-property name="displayName">AR_0</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                            <property name="dataType">decimal</property>
                                        </structure>
                                    </list-property>
                                    <column id="2242"/>
                                    <header>
                                        <row id="2234">
                                            <cell id="2235">
                                                <label id="2236">
                                                    <property name="fontSize">9pt</property>
                                                    <text-property name="text">A.Ratio</text-property>
                                                </label>
                                            </cell>
                                        </row>
                                    </header>
                                    <detail>
                                        <row id="2237">
                                            <cell id="2238">
                                                <data id="2239">
                                                    <property name="fontSize">9pt</property>
                                                    <property name="textAlign">center</property>
                                                    <property name="resultSetColumn">AR_0</property>
                                                </data>
                                            </cell>
                                        </row>
                                    </detail>
                                    <footer>
                                        <row id="2240">
                                            <cell id="2241"/>
                                        </row>
                                    </footer>
                                </table>
                            </cell>
                        </row>
                    </grid>
                </cell>
                <cell id="2243">
                    <grid id="2244">
                        <property name="canShrink">true</property>
                        <column id="2245"/>
                        <row id="2246">
                            <cell id="2247">
                                <label id="2248">
                                    <property name="fontWeight">bold</property>
                                    <property name="textAlign">center</property>
                                    <text-property name="text">Off axis (+45)</text-property>
                                </label>
                            </cell>
                        </row>
                        <row id="2249">
                            <cell id="2250">
                                <table id="2251">
                                    <property name="dataSet">offaxis+45</property>
                                    <list-property name="boundDataColumns">
                                        <structure>
                                            <property name="name">AR_P45</property>
                                            <text-property name="displayName">AR_P45</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["AR_P45"]</expression>
                                            <property name="dataType">decimal</property>
                                        </structure>
                                    </list-property>
                                    <column id="2260"/>
                                    <header>
                                        <row id="2252">
                                            <cell id="2253">
                                                <label id="2254">
                                                    <property name="fontSize">9pt</property>
                                                    <text-property name="text">A. Ratio</text-property>
                                                </label>
                                            </cell>
                                        </row>
                                    </header>
                                    <detail>
                                        <row id="2255">
                                            <cell id="2256">
                                                <data id="2257">
                                                    <property name="fontSize">9pt</property>
                                                    <property name="textAlign">center</property>
                                                    <property name="resultSetColumn">AR_P45</property>
                                                </data>
                                            </cell>
                                        </row>
                                    </detail>
                                    <footer>
                                        <row id="2258">
                                            <cell id="2259"/>
                                        </row>
                                    </footer>
                                </table>
                            </cell>
                        </row>
                    </grid>
                </cell>
                <cell id="2261">
                    <grid id="2262">
                        <property name="canShrink">true</property>
                        <column id="2263"/>
                        <row id="2264">
                            <cell id="2265">
                                <label id="2266">
                                    <property name="fontWeight">bold</property>
                                    <property name="textAlign">center</property>
                                    <text-property name="text">Off axis (-45)</text-property>
                                </label>
                            </cell>
                        </row>
                        <row id="2267">
                            <cell id="2268">
                                <table id="2269">
                                    <property name="dataSet">offaxis-45</property>
                                    <list-property name="boundDataColumns">
                                        <structure>
                                            <property name="name">AR_M45</property>
                                            <text-property name="displayName">AR_M45</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["AR_M45"]</expression>
                                            <property name="dataType">decimal</property>
                                        </structure>
                                    </list-property>
                                    <column id="2278"/>
                                    <header>
                                        <row id="2270">
                                            <cell id="2271">
                                                <label id="2272">
                                                    <property name="fontSize">9pt</property>
                                                    <text-property name="text">A.Ratio</text-property>
                                                </label>
                                            </cell>
                                        </row>
                                    </header>
                                    <detail>
                                        <row id="2273">
                                            <cell id="2274">
                                                <data id="2275">
                                                    <property name="fontSize">9pt</property>
                                                    <property name="textAlign">center</property>
                                                    <property name="resultSetColumn">AR_M45</property>
                                                </data>
                                            </cell>
                                        </row>
                                    </detail>
                                    <footer>
                                        <row id="2276">
                                            <cell id="2277"/>
                                        </row>
                                    </footer>
                                </table>
                            </cell>
                        </row>
                    </grid>
                </cell>
                <cell id="2279">
                    <grid id="2280">
                        <property name="canShrink">true</property>
                        <property name="allowExport">true</property>
                        <column id="2281"/>
                        <row id="2282">
                            <cell id="2283">
                                <label id="2284">
                                    <property name="fontWeight">bold</property>
                                    <property name="textAlign">center</property>
                                    <text-property name="text">Max diff (0 to +45)</text-property>
                                </label>
                            </cell>
                        </row>
                        <row id="2285">
                            <cell id="2286">
                                <table id="2287">
                                    <property name="dataSet">max0+45</property>
                                    <list-property name="boundDataColumns">
                                        <structure>
                                            <property name="name">MaxAR_P_Ratio</property>
                                            <text-property name="displayName">MaxAR_P_Ratio</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["MaxAR_P_Ratio"]</expression>
                                            <property name="dataType">decimal</property>
                                        </structure>
                                        <structure>
                                            <property name="name">MaxAR_P_Angle</property>
                                            <text-property name="displayName">MaxAR_P_Angle</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["MaxAR_P_Angle"]</expression>
                                            <property name="dataType">decimal</property>
                                        </structure>
                                    </list-property>
                                    <column id="2301"/>
                                    <column id="2302"/>
                                    <header>
                                        <row id="2288">
                                            <cell id="2289">
                                                <label id="2290">
                                                    <property name="fontSize">9pt</property>
                                                    <text-property name="text">A.Ratio</text-property>
                                                </label>
                                            </cell>
                                            <cell id="2291">
                                                <label id="2292">
                                                    <property name="fontSize">9pt</property>
                                                    <text-property name="text">Angle</text-property>
                                                </label>
                                            </cell>
                                        </row>
                                    </header>
                                    <detail>
                                        <row id="2293">
                                            <cell id="2294">
                                                <data id="2295">
                                                    <property name="fontSize">9pt</property>
                                                    <property name="textAlign">center</property>
                                                    <property name="resultSetColumn">MaxAR_P_Ratio</property>
                                                </data>
                                            </cell>
                                            <cell id="2296">
                                                <data id="2297">
                                                    <property name="fontSize">9pt</property>
                                                    <property name="textAlign">center</property>
                                                    <property name="resultSetColumn">MaxAR_P_Angle</property>
                                                </data>
                                            </cell>
                                        </row>
                                    </detail>
                                    <footer>
                                        <row id="2298">
                                            <cell id="2299"/>
                                            <cell id="2300"/>
                                        </row>
                                    </footer>
                                </table>
                            </cell>
                        </row>
                    </grid>
                </cell>
                <cell id="2303">
                    <grid id="2304">
                        <property name="canShrink">true</property>
                        <column id="2305"/>
                        <row id="2306">
                            <cell id="2307">
                                <label id="2308">
                                    <property name="fontWeight">bold</property>
                                    <property name="textAlign">center</property>
                                    <text-property name="text">Max diff (0 to -45)</text-property>
                                </label>
                            </cell>
                        </row>
                        <row id="2309">
                            <cell id="2310">
                                <table id="2311">
                                    <property name="dataSet">max0-45</property>
                                    <list-property name="boundDataColumns">
                                        <structure>
                                            <property name="name">MaxAR_M_Ratio</property>
                                            <text-property name="displayName">MaxAR_M_Ratio</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["MaxAR_M_Ratio"]</expression>
                                            <property name="dataType">decimal</property>
                                        </structure>
                                        <structure>
                                            <property name="name">MaxAR_M_Angle</property>
                                            <text-property name="displayName">MaxAR_M_Angle</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["MaxAR_M_Angle"]</expression>
                                            <property name="dataType">decimal</property>
                                        </structure>
                                    </list-property>
                                    <column id="2325"/>
                                    <column id="2326"/>
                                    <header>
                                        <row id="2312">
                                            <cell id="2313">
                                                <label id="2314">
                                                    <property name="fontSize">9pt</property>
                                                    <text-property name="text">A.Ratio</text-property>
                                                </label>
                                            </cell>
                                            <cell id="2315">
                                                <label id="2316">
                                                    <property name="fontSize">9pt</property>
                                                    <text-property name="text">Angle</text-property>
                                                </label>
                                            </cell>
                                        </row>
                                    </header>
                                    <detail>
                                        <row id="2317">
                                            <cell id="2318">
                                                <data id="2319">
                                                    <property name="fontSize">9pt</property>
                                                    <property name="textAlign">center</property>
                                                    <property name="resultSetColumn">MaxAR_M_Ratio</property>
                                                </data>
                                            </cell>
                                            <cell id="2320">
                                                <data id="2321">
                                                    <property name="fontSize">9pt</property>
                                                    <property name="textAlign">center</property>
                                                    <property name="resultSetColumn">MaxAR_M_Angle</property>
                                                </data>
                                            </cell>
                                        </row>
                                    </detail>
                                    <footer>
                                        <row id="2322">
                                            <cell id="2323"/>
                                            <cell id="2324"/>
                                        </row>
                                    </footer>
                                </table>
                            </cell>
                        </row>
                    </grid>
                </cell>
            </row>
        </grid>
        <grid id="2408">
            <property name="canShrink">true</property>
            <property name="dataSet">fq</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">row["Hide"]&lt;1 || params["AxDeg"].value!="x" || params["axr"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Hide</property>
                    <text-property name="displayName">Hide</text-property>
                    <expression name="expression" type="javascript">dataSetRow["Hide"]</expression>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <column id="2409"/>
            <column id="2410"/>
            <column id="2411"/>
            <column id="2412"/>
            <row id="2413">
                <cell id="2414">
                    <grid id="2418">
                        <expression name="bookmark" type="javascript">"BMHP"</expression>
                        <column id="2419"/>
                        <row id="2420">
                            <cell id="2421">
                                <label id="2422">
                                    <property name="fontWeight">bold</property>
                                    <property name="textAlign">center</property>
                                    <text-property name="text">Spot Freq.</text-property>
                                </label>
                            </cell>
                        </row>
                        <row id="2423">
                            <cell id="2424">
                                <table id="2425">
                                    <property name="dataSet">fq</property>
                                    <list-property name="boundDataColumns">
                                        <structure>
                                            <property name="name">Frequency</property>
                                            <text-property name="displayName">frequency</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                                            <property name="dataType">decimal</property>
                                        </structure>
                                        <structure>
                                            <property name="name">frequnit</property>
                                            <text-property name="displayName">frequnit</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["frequnit"]</expression>
                                            <property name="dataType">string</property>
                                        </structure>
                                    </list-property>
                                    <column id="2434"/>
                                    <header>
                                        <row id="2426">
                                            <cell id="2427">
                                                <data id="2428">
                                                    <property name="fontSize">10pt</property>
                                                    <property name="resultSetColumn">frequnit</property>
                                                </data>
                                            </cell>
                                        </row>
                                    </header>
                                    <detail>
                                        <row id="2429">
                                            <cell id="2430">
                                                <data id="2431">
                                                    <property name="fontSize">10pt</property>
                                                    <property name="textAlign">center</property>
                                                    <property name="resultSetColumn">Frequency</property>
                                                </data>
                                            </cell>
                                        </row>
                                    </detail>
                                    <footer>
                                        <row id="2432">
                                            <cell id="2433"/>
                                        </row>
                                    </footer>
                                </table>
                            </cell>
                        </row>
                    </grid>
                </cell>
                <cell id="2415">
                    <grid id="2435">
                        <property name="canShrink">true</property>
                        <column id="2436"/>
                        <row id="2437">
                            <cell id="2438">
                                <label id="2439">
                                    <property name="fontWeight">bold</property>
                                    <property name="textAlign">center</property>
                                    <text-property name="text">On axis (0) </text-property>
                                </label>
                            </cell>
                        </row>
                        <row id="2440">
                            <cell id="2441">
                                <table id="2442">
                                    <property name="dataSet">on0axis</property>
                                    <list-property name="boundDataColumns">
                                        <structure>
                                            <property name="name">AR_0</property>
                                            <text-property name="displayName">AR_0</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                            <property name="dataType">decimal</property>
                                        </structure>
                                    </list-property>
                                    <column id="2451"/>
                                    <header>
                                        <row id="2443">
                                            <cell id="2444">
                                                <label id="2445">
                                                    <property name="fontSize">10pt</property>
                                                    <text-property name="text">A.Ratio</text-property>
                                                </label>
                                            </cell>
                                        </row>
                                    </header>
                                    <detail>
                                        <row id="2446">
                                            <cell id="2447">
                                                <data id="2448">
                                                    <property name="fontSize">10pt</property>
                                                    <property name="textAlign">center</property>
                                                    <property name="resultSetColumn">AR_0</property>
                                                </data>
                                            </cell>
                                        </row>
                                    </detail>
                                    <footer>
                                        <row id="2449">
                                            <cell id="2450"/>
                                        </row>
                                    </footer>
                                </table>
                            </cell>
                        </row>
                    </grid>
                </cell>
                <cell id="2416">
                    <grid id="2452">
                        <property name="canShrink">true</property>
                        <column id="2453"/>
                        <row id="2454">
                            <cell id="2455">
                                <label id="2456">
                                    <property name="fontSize">10pt</property>
                                    <property name="fontWeight">bold</property>
                                    <property name="textAlign">center</property>
                                    <text-property name="text">Off axis (+45)</text-property>
                                </label>
                            </cell>
                        </row>
                        <row id="2457">
                            <cell id="2458">
                                <table id="2459">
                                    <property name="dataSet">offaxis+45</property>
                                    <list-property name="boundDataColumns">
                                        <structure>
                                            <property name="name">AR_P45</property>
                                            <text-property name="displayName">AR_P45</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["AR_P45"]</expression>
                                            <property name="dataType">decimal</property>
                                        </structure>
                                    </list-property>
                                    <column id="2468"/>
                                    <header>
                                        <row id="2460">
                                            <cell id="2461">
                                                <label id="2462">
                                                    <property name="fontSize">small</property>
                                                    <text-property name="text">Axial Ratio</text-property>
                                                </label>
                                            </cell>
                                        </row>
                                    </header>
                                    <detail>
                                        <row id="2463">
                                            <cell id="2464">
                                                <data id="2465">
                                                    <property name="fontSize">small</property>
                                                    <property name="textAlign">center</property>
                                                    <property name="resultSetColumn">AR_P45</property>
                                                </data>
                                            </cell>
                                        </row>
                                    </detail>
                                    <footer>
                                        <row id="2466">
                                            <cell id="2467"/>
                                        </row>
                                    </footer>
                                </table>
                            </cell>
                        </row>
                    </grid>
                </cell>
                <cell id="2417">
                    <grid id="2469">
                        <property name="canShrink">true</property>
                        <column id="2470"/>
                        <row id="2471">
                            <cell id="2472">
                                <label id="2473">
                                    <property name="fontSize">10pt</property>
                                    <property name="fontWeight">bold</property>
                                    <property name="textAlign">center</property>
                                    <text-property name="text">Off axis (-45)</text-property>
                                </label>
                            </cell>
                        </row>
                        <row id="2474">
                            <cell id="2475">
                                <table id="2476">
                                    <property name="dataSet">offaxis-45</property>
                                    <list-property name="boundDataColumns">
                                        <structure>
                                            <property name="name">AR_M45</property>
                                            <text-property name="displayName">AR_M45</text-property>
                                            <expression name="expression" type="javascript">dataSetRow["AR_M45"]</expression>
                                            <property name="dataType">decimal</property>
                                        </structure>
                                    </list-property>
                                    <column id="2485"/>
                                    <header>
                                        <row id="2477">
                                            <cell id="2478">
                                                <label id="2479">
                                                    <property name="fontSize">small</property>
                                                    <text-property name="text">Axial Ratio</text-property>
                                                </label>
                                            </cell>
                                        </row>
                                    </header>
                                    <detail>
                                        <row id="2480">
                                            <cell id="2481">
                                                <data id="2482">
                                                    <property name="fontSize">small</property>
                                                    <property name="textAlign">center</property>
                                                    <property name="resultSetColumn">AR_M45</property>
                                                </data>
                                            </cell>
                                        </row>
                                    </detail>
                                    <footer>
                                        <row id="2483">
                                            <cell id="2484"/>
                                        </row>
                                    </footer>
                                </table>
                            </cell>
                        </row>
                    </grid>
                </cell>
            </row>
        </grid>
        <label id="776">
            <property name="backgroundColor">#C0C0C0</property>
            <property name="fontWeight">bold</property>
            <property name="textAlign">left</property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">false</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["cpg"].value!='yes'</expression>
                </structure>
            </list-property>
            <text-property name="text">CP Gain</text-property>
        </label>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="4817">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="4818">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="4819">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View2213" id="4820">
                                    <property name="level">Group4/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4821">
                                            <property name="content">
                                                <data name="TestDesc213" id="4822">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4823">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View2313" id="4824">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4825">
                                            <property name="content">
                                                <data name="testproc213" id="4826">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4827">
                            <property name="dimension">Group2</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View11013" id="4828">
                                    <property name="level">Group2/TestDate</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4829">
                                            <property name="content">
                                                <data name="TestDate213" id="4830">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDate</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4831">
                            <property name="dimension">Group</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View3213" id="4832">
                                    <property name="level">Group/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4833">
                                            <property name="content">
                                                <data name="Productname213" id="4834">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4835">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View4213" id="4836">
                                    <property name="level">Group6/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4837">
                                            <property name="content">
                                                <data name="calibration213" id="4838">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4839">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View6213" id="4840">
                                    <property name="level">Group9/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4841">
                                            <property name="content">
                                                <data name="testcenter213" id="4842">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4843">
                            <property name="dimension">Group10</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View7213" id="4844">
                                    <property name="level">Group10/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4845">
                                            <property name="content">
                                                <data name="version213" id="4846">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4847">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View5213" id="4848">
                                    <property name="level">Group8/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4849">
                                            <property name="content">
                                                <data name="instruments213" id="4850">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4851">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View9213" id="4852">
                                    <property name="level">Group1/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4853">
                                            <property name="content">
                                                <data name="SerialNo213" id="4854">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="4855">
                    <property name="content">
                        <label id="4856">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4857">
                    <property name="content">
                        <label id="4858">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4859">
                    <property name="content">
                        <label id="4860">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Date</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4861">
                    <property name="content">
                        <label id="4862">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4863">
                    <property name="content">
                        <label id="4864">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4865">
                    <property name="content">
                        <label id="4866">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4867">
                    <property name="content">
                        <label id="4868">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4869">
                    <property name="content">
                        <label id="4870">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments </text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="4871">
                    <property name="content">
                        <label id="4872">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                </extended-item>
            </property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["cpg"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group4"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">TestDate</property>
                    <expression name="expression">dimension["Group2"]["TestDate"]</expression>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group6"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group8"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group9"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group10"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group1"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="863">
            <property name="style">Border</property>
            <property name="pageBreakAfter">always</property>
            <property name="canShrink">true</property>
            <property name="dataSet">CPGain</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["cpg"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Hide</property>
                    <text-property name="displayName">Hide</text-property>
                    <expression name="expression" type="javascript">dataSetRow["Hide"]</expression>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <column id="864"/>
            <row id="865">
                <cell id="866">
                    <label id="839">
                        <property name="fontSize">medium</property>
                        <property name="fontWeight">bold</property>
                        <property name="borderBottomStyle">solid</property>
                        <property name="borderBottomWidth">medium</property>
                        <property name="borderLeftStyle">solid</property>
                        <property name="borderLeftWidth">medium</property>
                        <property name="borderRightStyle">solid</property>
                        <property name="borderRightWidth">medium</property>
                        <property name="borderTopStyle">solid</property>
                        <property name="borderTopWidth">medium</property>
                        <property name="textAlign">center</property>
                        <text-property name="text">CP Gain</text-property>
                    </label>
                </cell>
            </row>
            <row id="867">
                <cell id="868">
                    <table id="840">
                        <property name="dataSet">CPGain</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">Frequency</property>
                                <text-property name="displayName">frequency</text-property>
                                <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">frequnit</property>
                                <text-property name="displayName">frequnit</text-property>
                                <expression name="expression" type="javascript">'Spot Frequency ('+dataSetRow["frequnit"]+')'</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                            <structure>
                                <property name="name">CPGain</property>
                                <text-property name="displayName">CPGain</text-property>
                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">lineargain</property>
                                <text-property name="displayName">lineargain</text-property>
                                <expression name="expression" type="javascript">dataSetRow["lineargain"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="853"/>
                        <column id="854"/>
                        <column id="855"/>
                        <header>
                            <row id="841">
                                <cell id="842">
                                    <data id="862">
                                        <property name="fontSize">small</property>
                                        <property name="resultSetColumn">frequnit</property>
                                    </data>
                                </cell>
                                <cell id="843">
                                    <label id="856">
                                        <property name="fontSize">small</property>
                                        <text-property name="text">Linear Gain (dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="844">
                                    <label id="858">
                                        <property name="fontSize">small</property>
                                        <text-property name="text">CP Gain (dBic)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="845">
                                <cell id="846">
                                    <data id="861">
                                        <property name="fontSize">small</property>
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">Frequency</property>
                                    </data>
                                </cell>
                                <cell id="847">
                                    <data id="870">
                                        <property name="fontSize">small</property>
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">lineargain</property>
                                    </data>
                                </cell>
                                <cell id="848">
                                    <data id="869">
                                        <property name="fontSize">small</property>
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">CPGain</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="849">
                                <cell id="850"/>
                                <cell id="851"/>
                                <cell id="852"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <label id="1016">
            <property name="backgroundColor">#C0C0C0</property>
            <property name="fontWeight">bold</property>
            <property name="textAlign">left</property>
            <property name="pageBreakAfter">auto</property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <text-property name="text">Polar Chart</text-property>
        </label>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1018">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1032">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1033">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View" id="1034">
                                    <property name="level">Group4/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1035">
                                            <property name="content">
                                                <data name="TestDesc" id="1036">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1095">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View2" id="1096">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1097">
                                            <property name="content">
                                                <data name="testproc" id="1099">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1038">
                            <property name="dimension">Group2</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1" id="1039">
                                    <property name="level">Group2/TestDate</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1040">
                                            <property name="content">
                                                <data name="TestDate" id="1042">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDate</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1050">
                            <property name="dimension">Group</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View3" id="1051">
                                    <property name="level">Group/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1052">
                                            <property name="content">
                                                <data name="Productname" id="1054">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1056">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View4" id="1057">
                                    <property name="level">Group6/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1058">
                                            <property name="content">
                                                <data name="calibration" id="1060">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1068">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View6" id="1069">
                                    <property name="level">Group9/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1070">
                                            <property name="content">
                                                <data name="testcenter" id="1072">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1074">
                            <property name="dimension">Group10</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View7" id="1075">
                                    <property name="level">Group10/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1076">
                                            <property name="content">
                                                <data name="version" id="1078">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1080">
                            <property name="dimension">Group3</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View8" id="1081">
                                    <property name="level">Group3/Frqncy</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1082">
                                            <property name="content">
                                                <data name="Frqncy" id="1084">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Frqncy</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1062">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View5" id="1063">
                                    <property name="level">Group8/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1064">
                                            <property name="content">
                                                <data name="instruments" id="1066">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1086">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View9" id="1087">
                                    <property name="level">Group1/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1088">
                                            <property name="content">
                                                <data name="SerialNo" id="1090">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1019">
                    <property name="content">
                        <label id="1037">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1098">
                    <property name="content">
                        <label id="1100">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1041">
                    <property name="content">
                        <label id="1043">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Date</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1053">
                    <property name="content">
                        <label id="1055">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1059">
                    <property name="content">
                        <label id="1061">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1071">
                    <property name="content">
                        <label id="1073">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1077">
                    <property name="content">
                        <label id="1079">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1083">
                    <property name="content">
                        <label id="1085">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1065">
                    <property name="content">
                        <label id="1067">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments </text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1089">
                    <property name="content">
                        <label id="1091">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                </extended-item>
            </property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq1"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group4"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">TestDate</property>
                    <expression name="expression">dimension["Group2"]["TestDate"]</expression>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group6"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group8"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group9"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group10"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Frqncy</property>
                    <expression name="expression">dimension["Group3"]["Frqncy"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group1"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="9">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <Cursor>
        <Type>Auto</Type>
      </Cursor>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
      <ShowValue>false</ShowValue>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBG.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX1&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN1&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}
/**
 * Called before rendering each label on a given Axis.
 * 
 * @param axis
 *            Axis
 * @param label
 *            Label
 * @param icsc
 *            IChartScriptContext
 */

function beforeDrawAxisLabel( axis, label, icsc )
{&#xD;
&#xD;
if(label.getOutline().isVisible()==true)&#xD;
			{&#xD;
				label.getOutline().setVisible(false);&#xD;
				if(Math.floor(label.getCaption().getValue())==label.getCaption().getValue() &amp;&amp; label.getCaption().getValue()%5==0 ) &#xD;
				{  &#xD;
					label.setVisible(true);&#xD;
					&#xD;
				&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					label.setVisible(false);&#xD;
				}&#xD;
			}
}
</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Color>
          <Visible>true</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>true</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern></Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq1"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="3951">
            <property name="canShrink">true</property>
            <property name="width">9.3125in</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq1"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="3952"/>
            <row id="3953">
                <cell id="3954">
                    <table id="4041">
                        <property name="width">9.239583333333334in</property>
                        <property name="dataSet">PolarGrid1</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">3Db_BW_BMax</property>
                                <text-property name="displayName">3Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">3Db_BS_BMax</property>
                                <text-property name="displayName">3Db_BS_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BW_BMax</property>
                                <text-property name="displayName">10Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BS_BMax</property>
                                <text-property name="displayName">10Db_BS_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">BackLobe</property>
                                <text-property name="displayName">BackLobe</text-property>
                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">CPGain</property>
                                <text-property name="displayName">CPGain</text-property>
                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">AR_0</property>
                                <text-property name="displayName">AR_0</text-property>
                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="4585"/>
                        <column id="4066"/>
                        <column id="4067"/>
                        <column id="4068"/>
                        <column id="4069"/>
                        <column id="4070"/>
                        <column id="4071"/>
                        <column id="4072">
                            <property name="width">0.6458333333333334in</property>
                        </column>
                        <header>
                            <row id="4042">
                                <cell id="4582"/>
                                <cell id="4043">
                                    <label id="4073">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg)</text-property>
                                    </label>
                                </cell>
                                <cell id="4044">
                                    <label id="4075">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3db-BSquit(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4045">
                                    <label id="4077">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg)</text-property>
                                    </label>
                                </cell>
                                <cell id="4046">
                                    <label id="4079">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10db-BSquit(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4047">
                                    <label id="4081">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">BackLobe(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4048">
                                    <label id="4083">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">CP Gain(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4049">
                                    <label id="4085">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">AxR.On Axis(0)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="4050">
                                <cell id="4583">
                                    <text-data id="4586">
                                        <property name="fontWeight">bold</property>
                                        <property name="dataSet">graphgrid</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">GridHPVPTYPE</property>
                                                <text-property name="displayName">GridHPVPTYPE</text-property>
                                                <expression name="expression" type="javascript">dataSetRow["GridHPVPTYPE"]</expression>
                                                <property name="dataType">string</property>
                                            </structure>
                                        </list-property>
                                        <expression name="valueExpr">if(row["GridHPVPTYPE"]=='H')&#13;
{&#13;
&#13;
	row["GridHPVPTYPE"]='HP'&#13;
}&#13;
else if(row["GridHPVPTYPE"]=='V')&#13;
{&#13;
row["GridHPVPTYPE"]='VP'&#13;
}&#13;
else&#13;
{&#13;
row["GridHPVPTYPE"]='CP'&#13;
}</expression>
                                        <property name="contentType">html</property>
                                    </text-data>
                                </cell>
                                <cell id="4051">
                                    <data id="4074">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4052">
                                    <data id="4076">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">3Db_BS_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4053">
                                    <data id="4078">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4054">
                                    <data id="4080">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">10Db_BS_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4055">
                                    <data id="4082">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">BackLobe</property>
                                    </data>
                                </cell>
                                <cell id="4056">
                                    <data id="4084">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">CPGain</property>
                                    </data>
                                </cell>
                                <cell id="4057">
                                    <data id="4086">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">AR_0</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1117">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1118">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1119">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View10" id="1120">
                                    <property name="level">Group4/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1121">
                                            <property name="content">
                                                <data name="TestDesc1" id="1122">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1123">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View21" id="1124">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1125">
                                            <property name="content">
                                                <data name="testproc1" id="1126">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1127">
                            <property name="dimension">Group2</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View11" id="1128">
                                    <property name="level">Group2/TestDate</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1129">
                                            <property name="content">
                                                <data name="TestDate1" id="1130">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDate</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1131">
                            <property name="dimension">Group</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View31" id="1132">
                                    <property name="level">Group/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1133">
                                            <property name="content">
                                                <data name="Productname1" id="1134">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1135">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View41" id="1136">
                                    <property name="level">Group6/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1137">
                                            <property name="content">
                                                <data name="calibration1" id="1138">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1139">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View61" id="1140">
                                    <property name="level">Group9/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1141">
                                            <property name="content">
                                                <data name="testcenter1" id="1142">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1143">
                            <property name="dimension">Group10</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View71" id="1144">
                                    <property name="level">Group10/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1145">
                                            <property name="content">
                                                <data name="version1" id="1146">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1187">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View12" id="1188">
                                    <property name="level">Group5/frqncy2</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1189">
                                            <property name="content">
                                                <data name="frqncy2" id="1191">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frqncy2</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1151">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View51" id="1152">
                                    <property name="level">Group8/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1153">
                                            <property name="content">
                                                <data name="instruments1" id="1154">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1155">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View91" id="1156">
                                    <property name="level">Group1/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1157">
                                            <property name="content">
                                                <data name="SerialNo1" id="1158">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1159">
                    <property name="content">
                        <label id="1160">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1161">
                    <property name="content">
                        <label id="1162">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1163">
                    <property name="content">
                        <label id="1164">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Date</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1165">
                    <property name="content">
                        <label id="1166">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1167">
                    <property name="content">
                        <label id="1168">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1169">
                    <property name="content">
                        <label id="1170">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1171">
                    <property name="content">
                        <label id="1172">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1190">
                    <property name="content">
                        <label id="1192">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1175">
                    <property name="content">
                        <label id="1176">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments </text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1177">
                    <property name="content">
                        <label id="1178">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq2"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group4"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">TestDate</property>
                    <expression name="expression">dimension["Group2"]["TestDate"]</expression>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group6"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group8"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group9"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group10"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group1"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frqncy2</property>
                    <expression name="expression">dimension["Group5"]["frqncy2"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="2656">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBG.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX2&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN2&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}
/**
 * Called before rendering each label on a given Axis.
 * 
 * @param axis
 *            Axis
 * @param label
 *            Label
 * @param icsc
 *            IChartScriptContext
 */

function beforeDrawAxisLabel( axis, label, icsc )
{&#xD;
	if(label.getOutline().isVisible()==true)&#xD;
			{&#xD;
				label.getOutline().setVisible(false);&#xD;
				if(Math.floor(label.getCaption().getValue())==label.getCaption().getValue() &amp;&amp; label.getCaption().getValue()%5==0 ) &#xD;
				{  &#xD;
					label.setVisible(true);&#xD;
					&#xD;
				&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					label.setVisible(false);&#xD;
				}&#xD;
			}
}
</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Color>
          <Visible>true</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>true</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern></Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset2</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq2"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="4087">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq2"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="4088"/>
            <row id="4089">
                <cell id="4090">
                    <table id="4091">
                        <property name="dataSet">PolarGrid2</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">3Db_BW_BMax</property>
                                <text-property name="displayName">3Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">3Db_BS_BMax</property>
                                <text-property name="displayName">3Db_BS_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BW_BMax</property>
                                <text-property name="displayName">10Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BS_BMax</property>
                                <text-property name="displayName">10Db_BS_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">BackLobe</property>
                                <text-property name="displayName">BackLobe</text-property>
                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">CPGain</property>
                                <text-property name="displayName">CPGain</text-property>
                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">AR_0</property>
                                <text-property name="displayName">AR_0</text-property>
                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="4580"/>
                        <column id="4130"/>
                        <column id="4131"/>
                        <column id="4132"/>
                        <column id="4133"/>
                        <column id="4134"/>
                        <column id="4135"/>
                        <column id="4136"/>
                        <header>
                            <row id="4092">
                                <cell id="4577"/>
                                <cell id="4093">
                                    <label id="4094">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg)</text-property>
                                    </label>
                                </cell>
                                <cell id="4095">
                                    <label id="4096">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3db-BSquit(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4097">
                                    <label id="4098">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg)</text-property>
                                    </label>
                                </cell>
                                <cell id="4099">
                                    <label id="4100">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10db-BSquit(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4101">
                                    <label id="4102">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">BackLobe(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4103">
                                    <label id="4104">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">CP Gain(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4105">
                                    <label id="4106">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">AxR.On Axis(0)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="4107">
                                <cell id="4578">
                                    <text-data id="4581">
                                        <property name="fontWeight">bold</property>
                                        <property name="dataSet">graphgrid</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">GridHPVPTYPE</property>
                                                <text-property name="displayName">GridHPVPTYPE</text-property>
                                                <expression name="expression" type="javascript">dataSetRow["GridHPVPTYPE"]</expression>
                                                <property name="dataType">string</property>
                                            </structure>
                                        </list-property>
                                        <expression name="valueExpr">if(row["GridHPVPTYPE"]=='H')&#13;
{&#13;
&#13;
	row["GridHPVPTYPE"]='HP'&#13;
}&#13;
else if(row["GridHPVPTYPE"]=='V')&#13;
{&#13;
row["GridHPVPTYPE"]='VP'&#13;
}&#13;
else&#13;
{&#13;
row["GridHPVPTYPE"]='CP'&#13;
}</expression>
                                        <property name="contentType">html</property>
                                    </text-data>
                                </cell>
                                <cell id="4108">
                                    <data id="4109">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4110">
                                    <data id="4111">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">3Db_BS_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4112">
                                    <data id="4113">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4114">
                                    <data id="4115">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">10Db_BS_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4116">
                                    <data id="4117">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">BackLobe</property>
                                    </data>
                                </cell>
                                <cell id="4118">
                                    <data id="4119">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">CPGain</property>
                                    </data>
                                </cell>
                                <cell id="4120">
                                    <data id="4121">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">AR_0</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="4122">
                                <cell id="4579"/>
                                <cell id="4123"/>
                                <cell id="4124"/>
                                <cell id="4125"/>
                                <cell id="4126"/>
                                <cell id="4127"/>
                                <cell id="4128"/>
                                <cell id="4129"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1197">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1198">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1199">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View101" id="1200">
                                    <property name="level">Group4/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1201">
                                            <property name="content">
                                                <data name="TestDesc11" id="1202">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1203">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View211" id="1204">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1205">
                                            <property name="content">
                                                <data name="testproc11" id="1206">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1207">
                            <property name="dimension">Group2</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View111" id="1208">
                                    <property name="level">Group2/TestDate</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1209">
                                            <property name="content">
                                                <data name="TestDate11" id="1210">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDate</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1211">
                            <property name="dimension">Group</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View311" id="1212">
                                    <property name="level">Group/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1213">
                                            <property name="content">
                                                <data name="Productname11" id="1214">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1215">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View411" id="1216">
                                    <property name="level">Group6/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1217">
                                            <property name="content">
                                                <data name="calibration11" id="1218">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1219">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View611" id="1220">
                                    <property name="level">Group9/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1221">
                                            <property name="content">
                                                <data name="testcenter11" id="1222">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1223">
                            <property name="dimension">Group10</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View711" id="1224">
                                    <property name="level">Group10/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1225">
                                            <property name="content">
                                                <data name="version11" id="1226">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1275">
                            <property name="dimension">Group12</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View13" id="1276">
                                    <property name="level">Group12/frqncy3</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1277">
                                            <property name="content">
                                                <data name="frqncy3" id="1279">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frqncy3</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1231">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View511" id="1232">
                                    <property name="level">Group8/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1233">
                                            <property name="content">
                                                <data name="instruments11" id="1234">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1235">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View911" id="1236">
                                    <property name="level">Group1/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1237">
                                            <property name="content">
                                                <data name="SerialNo11" id="1238">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1239">
                    <property name="content">
                        <label id="1240">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1241">
                    <property name="content">
                        <label id="1242">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1243">
                    <property name="content">
                        <label id="1244">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Date</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1245">
                    <property name="content">
                        <label id="1246">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1247">
                    <property name="content">
                        <label id="1248">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1249">
                    <property name="content">
                        <label id="1250">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1251">
                    <property name="content">
                        <label id="1252">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1278">
                    <property name="content">
                        <label id="1280">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1255">
                    <property name="content">
                        <label id="1256">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments </text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1257">
                    <property name="content">
                        <label id="1258">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq3"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group4"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">TestDate</property>
                    <expression name="expression">dimension["Group2"]["TestDate"]</expression>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group6"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group8"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group9"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group10"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group1"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frqncy3</property>
                    <expression name="expression">dimension["Group12"]["frqncy3"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="2657">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBG.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX3&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN3&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}
/**
 * Called before rendering each label on a given Axis.
 * 
 * @param axis
 *            Axis
 * @param label
 *            Label
 * @param icsc
 *            IChartScriptContext
 */

function beforeDrawAxisLabel( axis, label, icsc )
{&#xD;
	if(label.getOutline().isVisible()==true)&#xD;
			{&#xD;
				label.getOutline().setVisible(false);&#xD;
				if(Math.floor(label.getCaption().getValue())==label.getCaption().getValue() &amp;&amp; label.getCaption().getValue()%5==0 ) &#xD;
				{  &#xD;
					label.setVisible(true);&#xD;
					&#xD;
				&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					label.setVisible(false);&#xD;
				}&#xD;
			}
}
</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Color>
          <Visible>true</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>true</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern></Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset3</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq3"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="4137">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq3"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="4138"/>
            <row id="4139">
                <cell id="4140">
                    <table id="4141">
                        <property name="dataSet">PolarGrid3</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">3Db_BW_BMax</property>
                                <text-property name="displayName">3Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">3Db_BS_BMax</property>
                                <text-property name="displayName">3Db_BS_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BW_BMax</property>
                                <text-property name="displayName">10Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BS_BMax</property>
                                <text-property name="displayName">10Db_BS_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">BackLobe</property>
                                <text-property name="displayName">BackLobe</text-property>
                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">CPGain</property>
                                <text-property name="displayName">CPGain</text-property>
                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">AR_0</property>
                                <text-property name="displayName">AR_0</text-property>
                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="4575"/>
                        <column id="4180"/>
                        <column id="4181"/>
                        <column id="4182"/>
                        <column id="4183"/>
                        <column id="4184"/>
                        <column id="4185"/>
                        <column id="4186"/>
                        <header>
                            <row id="4142">
                                <cell id="4572"/>
                                <cell id="4143">
                                    <label id="4144">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg)</text-property>
                                    </label>
                                </cell>
                                <cell id="4145">
                                    <label id="4146">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3db-BSquit(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4147">
                                    <label id="4148">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg)</text-property>
                                    </label>
                                </cell>
                                <cell id="4149">
                                    <label id="4150">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10db-BSquit(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4151">
                                    <label id="4152">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">BackLobe(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4153">
                                    <label id="4154">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">CP Gain(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4155">
                                    <label id="4156">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">AxR.On Axis(0)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="4157">
                                <cell id="4573">
                                    <text-data id="4576">
                                        <property name="fontWeight">bold</property>
                                        <property name="dataSet">graphgrid</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">GridHPVPTYPE</property>
                                                <text-property name="displayName">GridHPVPTYPE</text-property>
                                                <expression name="expression" type="javascript">dataSetRow["GridHPVPTYPE"]</expression>
                                                <property name="dataType">string</property>
                                            </structure>
                                        </list-property>
                                        <expression name="valueExpr">if(row["GridHPVPTYPE"]=='H')&#13;
{&#13;
&#13;
	row["GridHPVPTYPE"]='HP'&#13;
}&#13;
else if(row["GridHPVPTYPE"]=='V')&#13;
{&#13;
row["GridHPVPTYPE"]='VP'&#13;
}&#13;
else&#13;
{&#13;
row["GridHPVPTYPE"]='CP'&#13;
}</expression>
                                        <property name="contentType">html</property>
                                    </text-data>
                                </cell>
                                <cell id="4158">
                                    <data id="4159">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4160">
                                    <data id="4161">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">3Db_BS_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4162">
                                    <data id="4163">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4164">
                                    <data id="4165">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">10Db_BS_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4166">
                                    <data id="4167">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">BackLobe</property>
                                    </data>
                                </cell>
                                <cell id="4168">
                                    <data id="4169">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">CPGain</property>
                                    </data>
                                </cell>
                                <cell id="4170">
                                    <data id="4171">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">AR_0</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="4172">
                                <cell id="4574"/>
                                <cell id="4173"/>
                                <cell id="4174"/>
                                <cell id="4175"/>
                                <cell id="4176"/>
                                <cell id="4177"/>
                                <cell id="4178"/>
                                <cell id="4179"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1285">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1286">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1287">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1011" id="1288">
                                    <property name="level">Group4/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1289">
                                            <property name="content">
                                                <data name="TestDesc111" id="1290">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1291">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View2111" id="1292">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1293">
                                            <property name="content">
                                                <data name="testproc111" id="1294">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1295">
                            <property name="dimension">Group2</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1111" id="1296">
                                    <property name="level">Group2/TestDate</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1297">
                                            <property name="content">
                                                <data name="TestDate111" id="1298">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDate</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1299">
                            <property name="dimension">Group</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View3111" id="1300">
                                    <property name="level">Group/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1301">
                                            <property name="content">
                                                <data name="Productname111" id="1302">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1303">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View4111" id="1304">
                                    <property name="level">Group6/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1305">
                                            <property name="content">
                                                <data name="calibration111" id="1306">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1307">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View6111" id="1308">
                                    <property name="level">Group9/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1309">
                                            <property name="content">
                                                <data name="testcenter111" id="1310">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1311">
                            <property name="dimension">Group10</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View7111" id="1312">
                                    <property name="level">Group10/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1313">
                                            <property name="content">
                                                <data name="version111" id="1314">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1351">
                            <property name="dimension">Group13</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View14" id="1352">
                                    <property name="level">Group13/frqncy4</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1353">
                                            <property name="content">
                                                <data name="frqncy4" id="1355">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frqncy4</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1319">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View5111" id="1320">
                                    <property name="level">Group8/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1321">
                                            <property name="content">
                                                <data name="instruments111" id="1322">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1323">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View9111" id="1324">
                                    <property name="level">Group1/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1325">
                                            <property name="content">
                                                <data name="SerialNo111" id="1326">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1327">
                    <property name="content">
                        <label id="1328">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1329">
                    <property name="content">
                        <label id="1330">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1331">
                    <property name="content">
                        <label id="1332">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Date</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1333">
                    <property name="content">
                        <label id="1334">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1335">
                    <property name="content">
                        <label id="1336">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1337">
                    <property name="content">
                        <label id="1338">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1339">
                    <property name="content">
                        <label id="1340">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1354">
                    <property name="content">
                        <label id="1356">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1343">
                    <property name="content">
                        <label id="1344">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments </text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1345">
                    <property name="content">
                        <label id="1346">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq4"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group4"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">TestDate</property>
                    <expression name="expression">dimension["Group2"]["TestDate"]</expression>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group6"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group8"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group9"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group10"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group1"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frqncy4</property>
                    <expression name="expression">dimension["Group13"]["frqncy4"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="2658">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBG.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX4&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN4&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}
/**
 * Called before rendering each label on a given Axis.
 * 
 * @param axis
 *            Axis
 * @param label
 *            Label
 * @param icsc
 *            IChartScriptContext
 */

function beforeDrawAxisLabel( axis, label, icsc )
{&#xD;
if(label.getOutline().isVisible()==true)&#xD;
			{&#xD;
				label.getOutline().setVisible(false);&#xD;
				if(Math.floor(label.getCaption().getValue())==label.getCaption().getValue() &amp;&amp; label.getCaption().getValue()%5==0 ) &#xD;
				{  &#xD;
					label.setVisible(true);&#xD;
					&#xD;
				&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					label.setVisible(false);&#xD;
				}&#xD;
			}
}
</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Color>
          <Visible>true</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>true</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern></Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset4</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq4"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="4187">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq4"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="4188"/>
            <row id="4189">
                <cell id="4190">
                    <table id="4191">
                        <property name="dataSet">PolarGrid4</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">3Db_BW_BMax</property>
                                <text-property name="displayName">3Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">3Db_BS_BMax</property>
                                <text-property name="displayName">3Db_BS_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BW_BMax</property>
                                <text-property name="displayName">10Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BS_BMax</property>
                                <text-property name="displayName">10Db_BS_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">BackLobe</property>
                                <text-property name="displayName">BackLobe</text-property>
                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">CPGain</property>
                                <text-property name="displayName">CPGain</text-property>
                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">AR_0</property>
                                <text-property name="displayName">AR_0</text-property>
                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="4570"/>
                        <column id="4230"/>
                        <column id="4231"/>
                        <column id="4232"/>
                        <column id="4233"/>
                        <column id="4234"/>
                        <column id="4235"/>
                        <column id="4236"/>
                        <header>
                            <row id="4192">
                                <cell id="4567"/>
                                <cell id="4193">
                                    <label id="4194">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg)</text-property>
                                    </label>
                                </cell>
                                <cell id="4195">
                                    <label id="4196">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3db-BSquit(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4197">
                                    <label id="4198">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg)</text-property>
                                    </label>
                                </cell>
                                <cell id="4199">
                                    <label id="4200">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10db-BSquit(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4201">
                                    <label id="4202">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">BackLobe(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4203">
                                    <label id="4204">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">CP Gain(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4205">
                                    <label id="4206">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">AxR.On Axis(0)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="4207">
                                <cell id="4568">
                                    <text-data id="4571">
                                        <property name="fontWeight">bold</property>
                                        <property name="dataSet">graphgrid</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">GridHPVPTYPE</property>
                                                <text-property name="displayName">GridHPVPTYPE</text-property>
                                                <expression name="expression" type="javascript">dataSetRow["GridHPVPTYPE"]</expression>
                                                <property name="dataType">string</property>
                                            </structure>
                                        </list-property>
                                        <expression name="valueExpr">if(row["GridHPVPTYPE"]=='H')&#13;
{&#13;
&#13;
	row["GridHPVPTYPE"]='HP'&#13;
}&#13;
else if(row["GridHPVPTYPE"]=='V')&#13;
{&#13;
row["GridHPVPTYPE"]='VP'&#13;
}&#13;
else&#13;
{&#13;
row["GridHPVPTYPE"]='CP'&#13;
}</expression>
                                        <property name="contentType">html</property>
                                    </text-data>
                                </cell>
                                <cell id="4208">
                                    <data id="4209">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4210">
                                    <data id="4211">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">3Db_BS_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4212">
                                    <data id="4213">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4214">
                                    <data id="4215">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">10Db_BS_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4216">
                                    <data id="4217">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">BackLobe</property>
                                    </data>
                                </cell>
                                <cell id="4218">
                                    <data id="4219">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">CPGain</property>
                                    </data>
                                </cell>
                                <cell id="4220">
                                    <data id="4221">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">AR_0</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="4222">
                                <cell id="4569"/>
                                <cell id="4223"/>
                                <cell id="4224"/>
                                <cell id="4225"/>
                                <cell id="4226"/>
                                <cell id="4227"/>
                                <cell id="4228"/>
                                <cell id="4229"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1361">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1362">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1363">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View10111" id="1364">
                                    <property name="level">Group4/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1365">
                                            <property name="content">
                                                <data name="TestDesc1111" id="1366">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1367">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View21111" id="1368">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1369">
                                            <property name="content">
                                                <data name="testproc1111" id="1370">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1371">
                            <property name="dimension">Group2</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View11111" id="1372">
                                    <property name="level">Group2/TestDate</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1373">
                                            <property name="content">
                                                <data name="TestDate1111" id="1374">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDate</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1375">
                            <property name="dimension">Group</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View31111" id="1376">
                                    <property name="level">Group/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1377">
                                            <property name="content">
                                                <data name="Productname1111" id="1378">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1379">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View41111" id="1380">
                                    <property name="level">Group6/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1381">
                                            <property name="content">
                                                <data name="calibration1111" id="1382">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1383">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View61111" id="1384">
                                    <property name="level">Group9/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1385">
                                            <property name="content">
                                                <data name="testcenter1111" id="1386">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1387">
                            <property name="dimension">Group10</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View71111" id="1388">
                                    <property name="level">Group10/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1389">
                                            <property name="content">
                                                <data name="version1111" id="1390">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1427">
                            <property name="dimension">Group14</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View15" id="1428">
                                    <property name="level">Group14/frqncy5</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1429">
                                            <property name="content">
                                                <data name="frqncy5" id="1431">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frqncy5</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1395">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View51111" id="1396">
                                    <property name="level">Group8/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1397">
                                            <property name="content">
                                                <data name="instruments1111" id="1398">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1399">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View91111" id="1400">
                                    <property name="level">Group1/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1401">
                                            <property name="content">
                                                <data name="SerialNo1111" id="1402">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1403">
                    <property name="content">
                        <label id="1404">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1405">
                    <property name="content">
                        <label id="1406">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1407">
                    <property name="content">
                        <label id="1408">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Date</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1409">
                    <property name="content">
                        <label id="1410">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1411">
                    <property name="content">
                        <label id="1412">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1413">
                    <property name="content">
                        <label id="1414">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1415">
                    <property name="content">
                        <label id="1416">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1430">
                    <property name="content">
                        <label id="1432">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1419">
                    <property name="content">
                        <label id="1420">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments </text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1421">
                    <property name="content">
                        <label id="1422">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq5"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group4"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">TestDate</property>
                    <expression name="expression">dimension["Group2"]["TestDate"]</expression>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group6"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group8"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group9"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group10"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group1"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frqncy5</property>
                    <expression name="expression">dimension["Group14"]["frqncy5"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="2659">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBG.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX5&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN5&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}
/**
 * Called before rendering each label on a given Axis.
 * 
 * @param axis
 *            Axis
 * @param label
 *            Label
 * @param icsc
 *            IChartScriptContext
 */

function beforeDrawAxisLabel( axis, label, icsc )
{&#xD;
	if(label.getOutline().isVisible()==true)&#xD;
			{&#xD;
				label.getOutline().setVisible(false);&#xD;
				if(Math.floor(label.getCaption().getValue())==label.getCaption().getValue() &amp;&amp; label.getCaption().getValue()%5==0 ) &#xD;
				{  &#xD;
					label.setVisible(true);&#xD;
					&#xD;
				&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					label.setVisible(false);&#xD;
				}&#xD;
			}
}
</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Color>
          <Visible>true</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>true</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern></Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset5</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq5"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="4237">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq5"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="4238"/>
            <row id="4239">
                <cell id="4240">
                    <table id="4241">
                        <property name="dataSet">PolarGrid5</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">3Db_BW_BMax</property>
                                <text-property name="displayName">3Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">3Db_BS_BMax</property>
                                <text-property name="displayName">3Db_BS_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BW_BMax</property>
                                <text-property name="displayName">10Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BS_BMax</property>
                                <text-property name="displayName">10Db_BS_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">BackLobe</property>
                                <text-property name="displayName">BackLobe</text-property>
                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">CPGain</property>
                                <text-property name="displayName">CPGain</text-property>
                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">AR_0</property>
                                <text-property name="displayName">AR_0</text-property>
                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="4565"/>
                        <column id="4280"/>
                        <column id="4281"/>
                        <column id="4282"/>
                        <column id="4283"/>
                        <column id="4284"/>
                        <column id="4285"/>
                        <column id="4286"/>
                        <header>
                            <row id="4242">
                                <cell id="4562"/>
                                <cell id="4243">
                                    <label id="4244">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg)</text-property>
                                    </label>
                                </cell>
                                <cell id="4245">
                                    <label id="4246">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3db-BSquit(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4247">
                                    <label id="4248">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg)</text-property>
                                    </label>
                                </cell>
                                <cell id="4249">
                                    <label id="4250">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10db-BSquit(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4251">
                                    <label id="4252">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">BackLobe(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4253">
                                    <label id="4254">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">CP Gain(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4255">
                                    <label id="4256">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">AxR.On Axis(0)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="4257">
                                <cell id="4563">
                                    <text-data id="4566">
                                        <property name="fontWeight">bold</property>
                                        <property name="dataSet">graphgrid</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">GridHPVPTYPE</property>
                                                <text-property name="displayName">GridHPVPTYPE</text-property>
                                                <expression name="expression" type="javascript">dataSetRow["GridHPVPTYPE"]</expression>
                                                <property name="dataType">string</property>
                                            </structure>
                                        </list-property>
                                        <expression name="valueExpr">if(row["GridHPVPTYPE"]=='H')&#13;
{&#13;
&#13;
	row["GridHPVPTYPE"]='HP'&#13;
}&#13;
else if(row["GridHPVPTYPE"]=='V')&#13;
{&#13;
row["GridHPVPTYPE"]='VP'&#13;
}&#13;
else&#13;
{&#13;
row["GridHPVPTYPE"]='CP'&#13;
}</expression>
                                        <property name="contentType">html</property>
                                    </text-data>
                                </cell>
                                <cell id="4258">
                                    <data id="4259">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4260">
                                    <data id="4261">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">3Db_BS_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4262">
                                    <data id="4263">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4264">
                                    <data id="4265">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">10Db_BS_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4266">
                                    <data id="4267">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">BackLobe</property>
                                    </data>
                                </cell>
                                <cell id="4268">
                                    <data id="4269">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">CPGain</property>
                                    </data>
                                </cell>
                                <cell id="4270">
                                    <data id="4271">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">AR_0</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="4272">
                                <cell id="4564"/>
                                <cell id="4273"/>
                                <cell id="4274"/>
                                <cell id="4275"/>
                                <cell id="4276"/>
                                <cell id="4277"/>
                                <cell id="4278"/>
                                <cell id="4279"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1858">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1859">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1860">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View101111" id="1861">
                                    <property name="level">Group4/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1862">
                                            <property name="content">
                                                <data name="TestDesc11111" id="1863">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1864">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View211111" id="1865">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1866">
                                            <property name="content">
                                                <data name="testproc11111" id="1867">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1868">
                            <property name="dimension">Group2</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View111111" id="1869">
                                    <property name="level">Group2/TestDate</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1870">
                                            <property name="content">
                                                <data name="TestDate11111" id="1871">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDate</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1872">
                            <property name="dimension">Group</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View311111" id="1873">
                                    <property name="level">Group/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1874">
                                            <property name="content">
                                                <data name="Productname11111" id="1875">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1876">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View411111" id="1877">
                                    <property name="level">Group6/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1878">
                                            <property name="content">
                                                <data name="calibration11111" id="1879">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1880">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View611111" id="1881">
                                    <property name="level">Group9/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1882">
                                            <property name="content">
                                                <data name="testcenter11111" id="1883">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1884">
                            <property name="dimension">Group10</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View711111" id="1885">
                                    <property name="level">Group10/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1886">
                                            <property name="content">
                                                <data name="version11111" id="1887">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2367">
                            <property name="dimension">Group15</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View20" id="2368">
                                    <property name="level">Group15/frqncy6</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2369">
                                            <property name="content">
                                                <data name="frqncy6" id="2371">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frqncy6</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1892">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View511111" id="1893">
                                    <property name="level">Group8/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1894">
                                            <property name="content">
                                                <data name="instruments11111" id="1895">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1896">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View911111" id="1897">
                                    <property name="level">Group1/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1898">
                                            <property name="content">
                                                <data name="SerialNo11111" id="1899">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1900">
                    <property name="content">
                        <label id="1901">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1902">
                    <property name="content">
                        <label id="1903">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1904">
                    <property name="content">
                        <label id="1905">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Date</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1906">
                    <property name="content">
                        <label id="1907">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1908">
                    <property name="content">
                        <label id="1909">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1910">
                    <property name="content">
                        <label id="1911">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1912">
                    <property name="content">
                        <label id="1913">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2370">
                    <property name="content">
                        <label id="2372">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1916">
                    <property name="content">
                        <label id="1917">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments </text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1918">
                    <property name="content">
                        <label id="1919">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq6"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group4"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">TestDate</property>
                    <expression name="expression">dimension["Group2"]["TestDate"]</expression>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group6"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group8"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group9"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group10"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group1"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frqncy6</property>
                    <expression name="expression">dimension["Group15"]["frqncy6"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="2660">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBG.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX6&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN6&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}
/**
 * Called before rendering each label on a given Axis.
 * 
 * @param axis
 *            Axis
 * @param label
 *            Label
 * @param icsc
 *            IChartScriptContext
 */

function beforeDrawAxisLabel( axis, label, icsc )
{&#xD;
	if(label.getOutline().isVisible()==true)&#xD;
			{&#xD;
				label.getOutline().setVisible(false);&#xD;
				if(Math.floor(label.getCaption().getValue())==label.getCaption().getValue() &amp;&amp; label.getCaption().getValue()%5==0 ) &#xD;
				{  &#xD;
					label.setVisible(true);&#xD;
					&#xD;
				&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					label.setVisible(false);&#xD;
				}&#xD;
			}
}
</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Color>
          <Visible>true</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>true</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern></Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset6</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq6"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="4287">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq6"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="4288"/>
            <row id="4289">
                <cell id="4290">
                    <table id="4291">
                        <property name="dataSet">PolarGrid6</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">3Db_BW_BMax</property>
                                <text-property name="displayName">3Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">3Db_BS_BMax</property>
                                <text-property name="displayName">3Db_BS_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BW_BMax</property>
                                <text-property name="displayName">10Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BS_BMax</property>
                                <text-property name="displayName">10Db_BS_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">BackLobe</property>
                                <text-property name="displayName">BackLobe</text-property>
                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">CPGain</property>
                                <text-property name="displayName">CPGain</text-property>
                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">AR_0</property>
                                <text-property name="displayName">AR_0</text-property>
                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="4560"/>
                        <column id="4330"/>
                        <column id="4331"/>
                        <column id="4332"/>
                        <column id="4333"/>
                        <column id="4334"/>
                        <column id="4335"/>
                        <column id="4336"/>
                        <header>
                            <row id="4292">
                                <cell id="4557"/>
                                <cell id="4293">
                                    <label id="4294">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg)</text-property>
                                    </label>
                                </cell>
                                <cell id="4295">
                                    <label id="4296">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3db-BSquit(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4297">
                                    <label id="4298">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg)</text-property>
                                    </label>
                                </cell>
                                <cell id="4299">
                                    <label id="4300">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10db-BSquit(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4301">
                                    <label id="4302">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">BackLobe(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4303">
                                    <label id="4304">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">CP Gain(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4305">
                                    <label id="4306">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">AxR.On Axis(0)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="4307">
                                <cell id="4558">
                                    <text-data id="4561">
                                        <property name="fontWeight">bold</property>
                                        <property name="dataSet">graphgrid</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">GridHPVPTYPE</property>
                                                <text-property name="displayName">GridHPVPTYPE</text-property>
                                                <expression name="expression" type="javascript">dataSetRow["GridHPVPTYPE"]</expression>
                                                <property name="dataType">string</property>
                                            </structure>
                                        </list-property>
                                        <expression name="valueExpr">if(row["GridHPVPTYPE"]=='H')&#13;
{&#13;
&#13;
	row["GridHPVPTYPE"]='HP'&#13;
}&#13;
else if(row["GridHPVPTYPE"]=='V')&#13;
{&#13;
row["GridHPVPTYPE"]='VP'&#13;
}&#13;
else&#13;
{&#13;
row["GridHPVPTYPE"]='CP'&#13;
}</expression>
                                        <property name="contentType">html</property>
                                    </text-data>
                                </cell>
                                <cell id="4308">
                                    <data id="4309">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4310">
                                    <data id="4311">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">3Db_BS_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4312">
                                    <data id="4313">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4314">
                                    <data id="4315">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">10Db_BS_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4316">
                                    <data id="4317">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">BackLobe</property>
                                    </data>
                                </cell>
                                <cell id="4318">
                                    <data id="4319">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">CPGain</property>
                                    </data>
                                </cell>
                                <cell id="4320">
                                    <data id="4321">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">AR_0</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="4322">
                                <cell id="4559"/>
                                <cell id="4323"/>
                                <cell id="4324"/>
                                <cell id="4325"/>
                                <cell id="4326"/>
                                <cell id="4327"/>
                                <cell id="4328"/>
                                <cell id="4329"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1927">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1928">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1929">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View101112" id="1930">
                                    <property name="level">Group4/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1931">
                                            <property name="content">
                                                <data name="TestDesc11112" id="1932">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1933">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View211112" id="1934">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1935">
                                            <property name="content">
                                                <data name="testproc11112" id="1936">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1937">
                            <property name="dimension">Group2</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View111112" id="1938">
                                    <property name="level">Group2/TestDate</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1939">
                                            <property name="content">
                                                <data name="TestDate11112" id="1940">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDate</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1941">
                            <property name="dimension">Group</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View311112" id="1942">
                                    <property name="level">Group/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1943">
                                            <property name="content">
                                                <data name="Productname11112" id="1944">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1945">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View411112" id="1946">
                                    <property name="level">Group6/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1947">
                                            <property name="content">
                                                <data name="calibration11112" id="1948">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1949">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View611112" id="1950">
                                    <property name="level">Group9/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1951">
                                            <property name="content">
                                                <data name="testcenter11112" id="1952">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1953">
                            <property name="dimension">Group10</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View711112" id="1954">
                                    <property name="level">Group10/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1955">
                                            <property name="content">
                                                <data name="version11112" id="1956">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2361">
                            <property name="dimension">Group16</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View19" id="2362">
                                    <property name="level">Group16/frqncy7</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2363">
                                            <property name="content">
                                                <data name="frqncy7" id="2365">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frqncy7</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1961">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View511112" id="1962">
                                    <property name="level">Group8/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1963">
                                            <property name="content">
                                                <data name="instruments11112" id="1964">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1965">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View911112" id="1966">
                                    <property name="level">Group1/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1967">
                                            <property name="content">
                                                <data name="SerialNo11112" id="1968">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1969">
                    <property name="content">
                        <label id="1970">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1971">
                    <property name="content">
                        <label id="1972">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1973">
                    <property name="content">
                        <label id="1974">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Date</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1975">
                    <property name="content">
                        <label id="1976">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1977">
                    <property name="content">
                        <label id="1978">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1979">
                    <property name="content">
                        <label id="1980">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1981">
                    <property name="content">
                        <label id="1982">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2364">
                    <property name="content">
                        <label id="2366">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1985">
                    <property name="content">
                        <label id="1986">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments </text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1987">
                    <property name="content">
                        <label id="1988">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq7"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group4"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">TestDate</property>
                    <expression name="expression">dimension["Group2"]["TestDate"]</expression>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group6"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group8"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group9"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group10"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group1"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frqncy7</property>
                    <expression name="expression">dimension["Group16"]["frqncy7"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="2661">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBG.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX7&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN7&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}
/**
 * Called before rendering each label on a given Axis.
 * 
 * @param axis
 *            Axis
 * @param label
 *            Label
 * @param icsc
 *            IChartScriptContext
 */

function beforeDrawAxisLabel( axis, label, icsc )
{&#xD;
	if(label.getOutline().isVisible()==true)&#xD;
			{&#xD;
				label.getOutline().setVisible(false);&#xD;
				if(Math.floor(label.getCaption().getValue())==label.getCaption().getValue() &amp;&amp; label.getCaption().getValue()%5==0 ) &#xD;
				{  &#xD;
					label.setVisible(true);&#xD;
					&#xD;
				&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					label.setVisible(false);&#xD;
				}&#xD;
			}
}
</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Color>
          <Visible>true</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>true</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern></Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset7</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq7"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="4337">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq7"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="4338"/>
            <row id="4339">
                <cell id="4340">
                    <table id="4341">
                        <property name="dataSet">PolarGrid7</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">3Db_BW_BMax</property>
                                <text-property name="displayName">3Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">3Db_BS_BMax</property>
                                <text-property name="displayName">3Db_BS_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BW_BMax</property>
                                <text-property name="displayName">10Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BS_BMax</property>
                                <text-property name="displayName">10Db_BS_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">BackLobe</property>
                                <text-property name="displayName">BackLobe</text-property>
                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">CPGain</property>
                                <text-property name="displayName">CPGain</text-property>
                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">AR_0</property>
                                <text-property name="displayName">AR_0</text-property>
                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="4555"/>
                        <column id="4380"/>
                        <column id="4381"/>
                        <column id="4382"/>
                        <column id="4383"/>
                        <column id="4384"/>
                        <column id="4385"/>
                        <column id="4386"/>
                        <header>
                            <row id="4342">
                                <cell id="4552"/>
                                <cell id="4343">
                                    <label id="4344">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg)</text-property>
                                    </label>
                                </cell>
                                <cell id="4345">
                                    <label id="4346">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3db-BSquit(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4347">
                                    <label id="4348">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg)</text-property>
                                    </label>
                                </cell>
                                <cell id="4349">
                                    <label id="4350">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10db-BSquit(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4351">
                                    <label id="4352">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">BackLobe(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4353">
                                    <label id="4354">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">CP Gain(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4355">
                                    <label id="4356">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">AxR.On Axis(0)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="4357">
                                <cell id="4553">
                                    <text-data id="4556">
                                        <property name="fontWeight">bold</property>
                                        <property name="dataSet">graphgrid</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">GridHPVPTYPE</property>
                                                <text-property name="displayName">GridHPVPTYPE</text-property>
                                                <expression name="expression" type="javascript">dataSetRow["GridHPVPTYPE"]</expression>
                                                <property name="dataType">string</property>
                                            </structure>
                                        </list-property>
                                        <expression name="valueExpr">if(row["GridHPVPTYPE"]=='H')&#13;
{&#13;
&#13;
	row["GridHPVPTYPE"]='HP'&#13;
}&#13;
else if(row["GridHPVPTYPE"]=='V')&#13;
{&#13;
row["GridHPVPTYPE"]='VP'&#13;
}&#13;
else&#13;
{&#13;
row["GridHPVPTYPE"]='CP'&#13;
}</expression>
                                        <property name="contentType">html</property>
                                    </text-data>
                                </cell>
                                <cell id="4358">
                                    <data id="4359">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4360">
                                    <data id="4361">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">3Db_BS_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4362">
                                    <data id="4363">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4364">
                                    <data id="4365">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">10Db_BS_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4366">
                                    <data id="4367">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">BackLobe</property>
                                    </data>
                                </cell>
                                <cell id="4368">
                                    <data id="4369">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">CPGain</property>
                                    </data>
                                </cell>
                                <cell id="4370">
                                    <data id="4371">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">AR_0</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="4372">
                                <cell id="4554"/>
                                <cell id="4373"/>
                                <cell id="4374"/>
                                <cell id="4375"/>
                                <cell id="4376"/>
                                <cell id="4377"/>
                                <cell id="4378"/>
                                <cell id="4379"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1996">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1997">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1998">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View101113" id="1999">
                                    <property name="level">Group4/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2000">
                                            <property name="content">
                                                <data name="TestDesc11113" id="2001">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2002">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View211113" id="2003">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2004">
                                            <property name="content">
                                                <data name="testproc11113" id="2005">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2006">
                            <property name="dimension">Group2</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View111113" id="2007">
                                    <property name="level">Group2/TestDate</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2008">
                                            <property name="content">
                                                <data name="TestDate11113" id="2009">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDate</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2010">
                            <property name="dimension">Group</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View311113" id="2011">
                                    <property name="level">Group/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2012">
                                            <property name="content">
                                                <data name="Productname11113" id="2013">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2014">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View411113" id="2015">
                                    <property name="level">Group6/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2016">
                                            <property name="content">
                                                <data name="calibration11113" id="2017">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2018">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View611113" id="2019">
                                    <property name="level">Group9/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2020">
                                            <property name="content">
                                                <data name="testcenter11113" id="2021">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2022">
                            <property name="dimension">Group10</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View711113" id="2023">
                                    <property name="level">Group10/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2024">
                                            <property name="content">
                                                <data name="version11113" id="2025">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2355">
                            <property name="dimension">Group17</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View18" id="2356">
                                    <property name="level">Group17/frqncy8</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2357">
                                            <property name="content">
                                                <data name="frqncy8" id="2359">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frqncy8</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2030">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View511113" id="2031">
                                    <property name="level">Group8/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2032">
                                            <property name="content">
                                                <data name="instruments11113" id="2033">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2034">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View911113" id="2035">
                                    <property name="level">Group1/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2036">
                                            <property name="content">
                                                <data name="SerialNo11113" id="2037">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="2038">
                    <property name="content">
                        <label id="2039">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2040">
                    <property name="content">
                        <label id="2041">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2042">
                    <property name="content">
                        <label id="2043">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Date</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2044">
                    <property name="content">
                        <label id="2045">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2046">
                    <property name="content">
                        <label id="2047">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2048">
                    <property name="content">
                        <label id="2049">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2050">
                    <property name="content">
                        <label id="2051">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2358">
                    <property name="content">
                        <label id="2360">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2054">
                    <property name="content">
                        <label id="2055">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments </text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2056">
                    <property name="content">
                        <label id="2057">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq8"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group4"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">TestDate</property>
                    <expression name="expression">dimension["Group2"]["TestDate"]</expression>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group6"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group8"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group9"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group10"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group1"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frqncy8</property>
                    <expression name="expression">dimension["Group17"]["frqncy8"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="2662">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency </Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBG.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX8&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN8&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}
/**
 * Called before rendering each label on a given Axis.
 * 
 * @param axis
 *            Axis
 * @param label
 *            Label
 * @param icsc
 *            IChartScriptContext
 */

function beforeDrawAxisLabel( axis, label, icsc )
{&#xD;
if(label.getOutline().isVisible()==true)&#xD;
			{&#xD;
				label.getOutline().setVisible(false);&#xD;
				if(Math.floor(label.getCaption().getValue())==label.getCaption().getValue() &amp;&amp; label.getCaption().getValue()%5==0 ) &#xD;
				{  &#xD;
					label.setVisible(true);&#xD;
					&#xD;
				&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					label.setVisible(false);&#xD;
				}&#xD;
			}
}
</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Color>
          <Visible>true</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern></Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset8</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq8"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="4387">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq8"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="4388"/>
            <row id="4389">
                <cell id="4390">
                    <table id="4391">
                        <property name="dataSet">PolarGrid8</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">3Db_BW_BMax</property>
                                <text-property name="displayName">3Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">3Db_BS_BMax</property>
                                <text-property name="displayName">3Db_BS_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BW_BMax</property>
                                <text-property name="displayName">10Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BS_BMax</property>
                                <text-property name="displayName">10Db_BS_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">BackLobe</property>
                                <text-property name="displayName">BackLobe</text-property>
                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">CPGain</property>
                                <text-property name="displayName">CPGain</text-property>
                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">AR_0</property>
                                <text-property name="displayName">AR_0</text-property>
                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="4550"/>
                        <column id="4430"/>
                        <column id="4431"/>
                        <column id="4432"/>
                        <column id="4433"/>
                        <column id="4434"/>
                        <column id="4435"/>
                        <column id="4436"/>
                        <header>
                            <row id="4392">
                                <cell id="4547"/>
                                <cell id="4393">
                                    <label id="4394">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg)</text-property>
                                    </label>
                                </cell>
                                <cell id="4395">
                                    <label id="4396">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3db-BSquit(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4397">
                                    <label id="4398">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg)</text-property>
                                    </label>
                                </cell>
                                <cell id="4399">
                                    <label id="4400">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10db-BSquit(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4401">
                                    <label id="4402">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">BackLobe(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4403">
                                    <label id="4404">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">CP Gain(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4405">
                                    <label id="4406">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">AxR.On Axis(0)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="4407">
                                <cell id="4548">
                                    <text-data id="4551">
                                        <property name="fontWeight">bold</property>
                                        <property name="dataSet">graphgrid</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">GridHPVPTYPE</property>
                                                <text-property name="displayName">GridHPVPTYPE</text-property>
                                                <expression name="expression" type="javascript">dataSetRow["GridHPVPTYPE"]</expression>
                                                <property name="dataType">string</property>
                                            </structure>
                                        </list-property>
                                        <expression name="valueExpr">if(row["GridHPVPTYPE"]=='H')&#13;
{&#13;
&#13;
	row["GridHPVPTYPE"]='HP'&#13;
}&#13;
else if(row["GridHPVPTYPE"]=='V')&#13;
{&#13;
row["GridHPVPTYPE"]='VP'&#13;
}&#13;
else&#13;
{&#13;
row["GridHPVPTYPE"]='CP'&#13;
}</expression>
                                        <property name="contentType">html</property>
                                    </text-data>
                                </cell>
                                <cell id="4408">
                                    <data id="4409">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4410">
                                    <data id="4411">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">3Db_BS_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4412">
                                    <data id="4413">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4414">
                                    <data id="4415">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">10Db_BS_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4416">
                                    <data id="4417">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">BackLobe</property>
                                    </data>
                                </cell>
                                <cell id="4418">
                                    <data id="4419">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">CPGain</property>
                                    </data>
                                </cell>
                                <cell id="4420">
                                    <data id="4421">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">AR_0</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="4422">
                                <cell id="4549"/>
                                <cell id="4423"/>
                                <cell id="4424"/>
                                <cell id="4425"/>
                                <cell id="4426"/>
                                <cell id="4427"/>
                                <cell id="4428"/>
                                <cell id="4429"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="2065">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="2066">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="2067">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View101114" id="2068">
                                    <property name="level">Group4/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2069">
                                            <property name="content">
                                                <data name="TestDesc11114" id="2070">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2071">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View211114" id="2072">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2073">
                                            <property name="content">
                                                <data name="testproc11114" id="2074">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2075">
                            <property name="dimension">Group2</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View111114" id="2076">
                                    <property name="level">Group2/TestDate</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2077">
                                            <property name="content">
                                                <data name="TestDate11114" id="2078">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDate</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2079">
                            <property name="dimension">Group</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View311114" id="2080">
                                    <property name="level">Group/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2081">
                                            <property name="content">
                                                <data name="Productname11114" id="2082">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2083">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View411114" id="2084">
                                    <property name="level">Group6/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2085">
                                            <property name="content">
                                                <data name="calibration11114" id="2086">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2087">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View611114" id="2088">
                                    <property name="level">Group9/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2089">
                                            <property name="content">
                                                <data name="testcenter11114" id="2090">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2091">
                            <property name="dimension">Group10</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View711114" id="2092">
                                    <property name="level">Group10/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2093">
                                            <property name="content">
                                                <data name="version11114" id="2094">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2349">
                            <property name="dimension">Group18</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View17" id="2350">
                                    <property name="level">Group18/frqncy9</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2351">
                                            <property name="content">
                                                <data name="frqncy9" id="2353">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frqncy9</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2099">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View511114" id="2100">
                                    <property name="level">Group8/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2101">
                                            <property name="content">
                                                <data name="instruments11114" id="2102">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2103">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View911114" id="2104">
                                    <property name="level">Group1/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2105">
                                            <property name="content">
                                                <data name="SerialNo11114" id="2106">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="2107">
                    <property name="content">
                        <label id="2108">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2109">
                    <property name="content">
                        <label id="2110">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2111">
                    <property name="content">
                        <label id="2112">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Date</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2113">
                    <property name="content">
                        <label id="2114">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2115">
                    <property name="content">
                        <label id="2116">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2117">
                    <property name="content">
                        <label id="2118">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2119">
                    <property name="content">
                        <label id="2120">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2352">
                    <property name="content">
                        <label id="2354">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2123">
                    <property name="content">
                        <label id="2124">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments </text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2125">
                    <property name="content">
                        <label id="2126">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq9"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group4"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">TestDate</property>
                    <expression name="expression">dimension["Group2"]["TestDate"]</expression>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group6"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group8"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group9"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group10"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group1"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frqncy9</property>
                    <expression name="expression">dimension["Group18"]["frqncy9"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="1991">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBG.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX9&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN9&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}
/**
 * Called before rendering each label on a given Axis.
 * 
 * @param axis
 *            Axis
 * @param label
 *            Label
 * @param icsc
 *            IChartScriptContext
 */

function beforeDrawAxisLabel( axis, label, icsc )
{&#xD;
	if(label.getOutline().isVisible()==true)&#xD;
			{&#xD;
				label.getOutline().setVisible(false);&#xD;
				if(Math.floor(label.getCaption().getValue())==label.getCaption().getValue() &amp;&amp; label.getCaption().getValue()%5==0 ) &#xD;
				{  &#xD;
					label.setVisible(true);&#xD;
					&#xD;
				&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					label.setVisible(false);&#xD;
				}&#xD;
			}
}
</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Color>
          <Visible>true</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>true</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern></Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset9</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq9"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="4437">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq9"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="4438"/>
            <row id="4439">
                <cell id="4440">
                    <table id="4441">
                        <property name="dataSet">PolarGrid9</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">3Db_BW_BMax</property>
                                <text-property name="displayName">3Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">3Db_BS_BMax</property>
                                <text-property name="displayName">3Db_BS_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BW_BMax</property>
                                <text-property name="displayName">10Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BS_BMax</property>
                                <text-property name="displayName">10Db_BS_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">BackLobe</property>
                                <text-property name="displayName">BackLobe</text-property>
                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">CPGain</property>
                                <text-property name="displayName">CPGain</text-property>
                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">AR_0</property>
                                <text-property name="displayName">AR_0</text-property>
                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="4545"/>
                        <column id="4480"/>
                        <column id="4481"/>
                        <column id="4482"/>
                        <column id="4483"/>
                        <column id="4484"/>
                        <column id="4485"/>
                        <column id="4486"/>
                        <header>
                            <row id="4442">
                                <cell id="4542"/>
                                <cell id="4443">
                                    <label id="4444">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg)</text-property>
                                    </label>
                                </cell>
                                <cell id="4445">
                                    <label id="4446">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3db-BSquit(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4447">
                                    <label id="4448">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg)</text-property>
                                    </label>
                                </cell>
                                <cell id="4449">
                                    <label id="4450">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10db-BSquit(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4451">
                                    <label id="4452">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">BackLobe(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4453">
                                    <label id="4454">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">CP Gain(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4455">
                                    <label id="4456">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">AxR.On Axis(0)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="4457">
                                <cell id="4543">
                                    <text-data id="4546">
                                        <property name="fontWeight">bold</property>
                                        <property name="dataSet">graphgrid</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">GridHPVPTYPE</property>
                                                <text-property name="displayName">GridHPVPTYPE</text-property>
                                                <expression name="expression" type="javascript">dataSetRow["GridHPVPTYPE"]</expression>
                                                <property name="dataType">string</property>
                                            </structure>
                                        </list-property>
                                        <expression name="valueExpr">if(row["GridHPVPTYPE"]=='H')&#13;
{&#13;
&#13;
	row["GridHPVPTYPE"]='HP'&#13;
}&#13;
else if(row["GridHPVPTYPE"]=='V')&#13;
{&#13;
row["GridHPVPTYPE"]='VP'&#13;
}&#13;
else&#13;
{&#13;
row["GridHPVPTYPE"]='CP'&#13;
}</expression>
                                        <property name="contentType">html</property>
                                    </text-data>
                                </cell>
                                <cell id="4458">
                                    <data id="4459">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4460">
                                    <data id="4461">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">3Db_BS_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4462">
                                    <data id="4463">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4464">
                                    <data id="4465">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">10Db_BS_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4466">
                                    <data id="4467">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">BackLobe</property>
                                    </data>
                                </cell>
                                <cell id="4468">
                                    <data id="4469">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">CPGain</property>
                                    </data>
                                </cell>
                                <cell id="4470">
                                    <data id="4471">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">AR_0</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="4472">
                                <cell id="4544"/>
                                <cell id="4473"/>
                                <cell id="4474"/>
                                <cell id="4475"/>
                                <cell id="4476"/>
                                <cell id="4477"/>
                                <cell id="4478"/>
                                <cell id="4479"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="2134">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="2135">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="2136">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View101115" id="2137">
                                    <property name="level">Group4/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2138">
                                            <property name="content">
                                                <data name="TestDesc11115" id="2139">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2140">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View211115" id="2141">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2142">
                                            <property name="content">
                                                <data name="testproc11115" id="2143">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2144">
                            <property name="dimension">Group2</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View111115" id="2145">
                                    <property name="level">Group2/TestDate</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2146">
                                            <property name="content">
                                                <data name="TestDate11115" id="2147">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDate</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2148">
                            <property name="dimension">Group</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View311115" id="2149">
                                    <property name="level">Group/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2150">
                                            <property name="content">
                                                <data name="Productname11115" id="2151">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2152">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View411115" id="2153">
                                    <property name="level">Group6/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2154">
                                            <property name="content">
                                                <data name="calibration11115" id="2155">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2156">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View611115" id="2157">
                                    <property name="level">Group9/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2158">
                                            <property name="content">
                                                <data name="testcenter11115" id="2159">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2160">
                            <property name="dimension">Group10</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View711115" id="2161">
                                    <property name="level">Group10/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2162">
                                            <property name="content">
                                                <data name="version11115" id="2163">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2343">
                            <property name="dimension">Group19</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View16" id="2344">
                                    <property name="level">Group19/frqncy10</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2345">
                                            <property name="content">
                                                <data name="frqncy10" id="2347">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frqncy10</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2168">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View511115" id="2169">
                                    <property name="level">Group8/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2170">
                                            <property name="content">
                                                <data name="instruments11115" id="2171">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2172">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View911115" id="2173">
                                    <property name="level">Group1/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2174">
                                            <property name="content">
                                                <data name="SerialNo11115" id="2175">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="2176">
                    <property name="content">
                        <label id="2177">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2178">
                    <property name="content">
                        <label id="2179">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2180">
                    <property name="content">
                        <label id="2181">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Date</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2182">
                    <property name="content">
                        <label id="2183">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2184">
                    <property name="content">
                        <label id="2185">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2186">
                    <property name="content">
                        <label id="2187">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2188">
                    <property name="content">
                        <label id="2189">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2346">
                    <property name="content">
                        <label id="2348">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2192">
                    <property name="content">
                        <label id="2193">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments </text-property>
                        </label>
                    </property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2194">
                    <property name="content">
                        <label id="2195">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq10"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group4"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">TestDate</property>
                    <expression name="expression">dimension["Group2"]["TestDate"]</expression>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group6"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group8"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group9"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group10"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group1"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frqncy10</property>
                    <expression name="expression">dimension["Group19"]["frqncy10"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="2663">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBG.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX10&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN10&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}
/**
 * Called before rendering each label on a given Axis.
 * 
 * @param axis
 *            Axis
 * @param label
 *            Label
 * @param icsc
 *            IChartScriptContext
 */

function beforeDrawAxisLabel( axis, label, icsc )
{&#xD;
	if(label.getOutline().isVisible()==true)&#xD;
			{&#xD;
				label.getOutline().setVisible(false);&#xD;
				if(Math.floor(label.getCaption().getValue())==label.getCaption().getValue() &amp;&amp; label.getCaption().getValue()%5==0 ) &#xD;
				{  &#xD;
					label.setVisible(true);&#xD;
					&#xD;
				&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					label.setVisible(false);&#xD;
				}&#xD;
			}
}
</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Color>
          <Visible>true</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>true</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern></Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset10</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq10"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="4487">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq10"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="4488"/>
            <row id="4489">
                <cell id="4490">
                    <table id="4491">
                        <property name="dataSet">PolarGrid10</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">3Db_BW_BMax</property>
                                <text-property name="displayName">3Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">3Db_BS_BMax</property>
                                <text-property name="displayName">3Db_BS_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BW_BMax</property>
                                <text-property name="displayName">10Db_BW_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">10Db_BS_BMax</property>
                                <text-property name="displayName">10Db_BS_BMax</text-property>
                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">BackLobe</property>
                                <text-property name="displayName">BackLobe</text-property>
                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">CPGain</property>
                                <text-property name="displayName">CPGain</text-property>
                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">AR_0</property>
                                <text-property name="displayName">AR_0</text-property>
                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="4540"/>
                        <column id="4530"/>
                        <column id="4531"/>
                        <column id="4532"/>
                        <column id="4533"/>
                        <column id="4534"/>
                        <column id="4535"/>
                        <column id="4536"/>
                        <header>
                            <row id="4492">
                                <cell id="4537"/>
                                <cell id="4493">
                                    <label id="4494">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3dB-BMax(deg)</text-property>
                                    </label>
                                </cell>
                                <cell id="4495">
                                    <label id="4496">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">3db-BSquit(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4497">
                                    <label id="4498">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10dB-BMax(deg)</text-property>
                                    </label>
                                </cell>
                                <cell id="4499">
                                    <label id="4500">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">10db-BSquit(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4501">
                                    <label id="4502">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">BackLobe(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4503">
                                    <label id="4504">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">CP Gain(dB)</text-property>
                                    </label>
                                </cell>
                                <cell id="4505">
                                    <label id="4506">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">AxR.On Axis(0)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="4507">
                                <cell id="4538">
                                    <text-data id="4541">
                                        <property name="fontWeight">bold</property>
                                        <property name="dataSet">graphgrid</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">GridHPVPTYPE</property>
                                                <text-property name="displayName">GridHPVPTYPE</text-property>
                                                <expression name="expression" type="javascript">dataSetRow["GridHPVPTYPE"]</expression>
                                                <property name="dataType">string</property>
                                            </structure>
                                        </list-property>
                                        <expression name="valueExpr">if(row["GridHPVPTYPE"]=='H')&#13;
{&#13;
&#13;
	row["GridHPVPTYPE"]='HP'&#13;
}&#13;
else if(row["GridHPVPTYPE"]=='V')&#13;
{&#13;
row["GridHPVPTYPE"]='VP'&#13;
}&#13;
else&#13;
{&#13;
row["GridHPVPTYPE"]='CP'&#13;
}</expression>
                                        <property name="contentType">html</property>
                                    </text-data>
                                </cell>
                                <cell id="4508">
                                    <data id="4509">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">3Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4510">
                                    <data id="4511">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">3Db_BS_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4512">
                                    <data id="4513">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">10Db_BW_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4514">
                                    <data id="4515">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">10Db_BS_BMax</property>
                                    </data>
                                </cell>
                                <cell id="4516">
                                    <data id="4517">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">BackLobe</property>
                                    </data>
                                </cell>
                                <cell id="4518">
                                    <data id="4519">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">CPGain</property>
                                    </data>
                                </cell>
                                <cell id="4520">
                                    <data id="4521">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">AR_0</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="4522">
                                <cell id="4539"/>
                                <cell id="4523"/>
                                <cell id="4524"/>
                                <cell id="4525"/>
                                <cell id="4526"/>
                                <cell id="4527"/>
                                <cell id="4528"/>
                                <cell id="4529"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
    </body>
</report>
