<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.eclipse.org/birt/2005/design" version="3.2.23" id="1">
    <property name="createdBy">Eclipse BIRT Designer Version 4.4.1.v201408290142 Build &lt;4.4.1.v20140916-1320></property>
    <text-property name="title">Slant-Azimuth</text-property>
    <list-property name="propertyBindings">
        <structure>
            <property name="name">queryText</property>
            <property name="id">13</property>
        </structure>
        <structure>
            <property name="name">queryTimeOut</property>
            <property name="id">13</property>
        </structure>
        <structure>
            <property name="name">rowFetchSize</property>
            <property name="id">13</property>
        </structure>
    </list-property>
    <property name="units">in</property>
    <property name="iconFile">/templates/blank_report.gif</property>
    <property name="layoutPreference">auto layout</property>
    <property name="bidiLayoutOrientation">ltr</property>
    <property name="imageDPI">96</property>
    <parameters>
        <scalar-parameter name="freq1" id="10">
            <property name="hidden">false</property>
            <text-property name="helpText">Enter the frequency</text-property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="testid" id="12">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">integer</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="type" id="767">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="lg1" id="768">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="img" id="1028">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="rpth" id="1124">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="rptf" id="1125">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="scale" id="1128">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq2" id="1131">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq3" id="1132">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq5" id="1458">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq4" id="1457">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq6" id="1459">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq7" id="1460">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq8" id="1461">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq9" id="1462">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq10" id="1463">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="polar" id="2061">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="lg2" id="2462">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="lg3" id="2463">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="lg4" id="2464">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="lg6" id="2465">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="lg5" id="2466">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="lg7" id="2467">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="lg8" id="2468">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="lg9" id="2469">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="lg10" id="2470">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="omni" id="2471">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="pc" id="2757">
            <property name="hidden">false</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">integer</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
    </parameters>
    <data-sources>
        <oda-data-source extensionID="org.eclipse.birt.report.data.oda.jdbc" name="VerdantProfile" id="7">
            <list-property name="privateDriverProperties">
                <ex-property>
                    <name>metadataBidiFormatStr</name>
                    <value>ILYNN</value>
                </ex-property>
                <ex-property>
                    <name>disabledMetadataBidiFormatStr</name>
                </ex-property>
                <ex-property>
                    <name>contentBidiFormatStr</name>
                    <value>ILYNN</value>
                </ex-property>
                <ex-property>
                    <name>disabledContentBidiFormatStr</name>
                </ex-property>
            </list-property>
            <property name="odaDriverClass">com.mysql.jdbc.Driver</property>
            <property name="odaURL">jdbc:mysql://localhost:3306/verdant</property>
            <property name="odaUser">root</property>
            <property name="OdaConnProfileName">VerdantProfile</property>
            <property name="OdaConnProfileStorePath">VerdantProfile</property>
        </oda-data-source>
    </data-sources>
    <data-sets>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="Data SetGrid" id="13">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression">params["freq1"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MyDataHeader</property>
                    <expression name="expression">params["type"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency2</property>
                    <expression name="expression">params["freq2"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency3</property>
                    <expression name="expression">params["freq3"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency4</property>
                    <expression name="expression">params["freq4"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency5</property>
                    <expression name="expression">params["freq5"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency6</property>
                    <expression name="expression">params["freq6"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency7</property>
                    <expression name="expression">params["freq7"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency8</property>
                    <expression name="expression">params["freq8"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency9</property>
                    <expression name="expression">params["freq9"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency10</property>
                    <expression name="expression">params["freq10"].value+" "+row["frequnit"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">GridHPVPTYPE</property>
                    <expression name="expression">params["type"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">testproc</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">testproc</text-property>
                    <text-property name="heading">testproc</text-property>
                </structure>
                <structure>
                    <property name="columnName">TestDesc</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">TestDesc</text-property>
                    <text-property name="heading">TestDesc</text-property>
                </structure>
                <structure>
                    <property name="columnName">TestDate</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">TestDate</text-property>
                    <text-property name="heading">TestDate</text-property>
                </structure>
                <structure>
                    <property name="columnName">frequnit</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">frequnit</text-property>
                    <text-property name="heading">frequnit</text-property>
                </structure>
                <structure>
                    <property name="columnName">testcenter</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">testcenter</text-property>
                    <text-property name="heading">testcenter</text-property>
                </structure>
                <structure>
                    <property name="columnName">instruments</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">instruments</text-property>
                    <text-property name="heading">instruments</text-property>
                </structure>
                <structure>
                    <property name="columnName">calibration</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">calibration</text-property>
                    <text-property name="heading">calibration</text-property>
                </structure>
                <structure>
                    <property name="columnName">SerialNo</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">SerialNo</text-property>
                    <text-property name="heading">SerialNo</text-property>
                </structure>
                <structure>
                    <property name="columnName">Productname</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">Productname</text-property>
                    <text-property name="heading">Productname</text-property>
                </structure>
                <structure>
                    <property name="columnName">Version</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">version</text-property>
                    <text-property name="heading">version</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">testidGrid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">testproc</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">TestDesc</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">TestDate</property>
                        <property name="dataType">date-time</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">frequnit</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">testcenter</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">instruments</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">calibration</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">SerialNo</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">Productname</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">Version</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">11</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">12</property>
                        <property name="name">MyDataHeader</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">13</property>
                        <property name="name">frequency2</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">14</property>
                        <property name="name">frequency3</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">15</property>
                        <property name="name">frequency4</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">16</property>
                        <property name="name">frequency5</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">17</property>
                        <property name="name">frequency6</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">18</property>
                        <property name="name">frequency7</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">19</property>
                        <property name="name">frequency8</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">20</property>
                        <property name="name">frequency9</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">21</property>
                        <property name="name">frequency10</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">22</property>
                        <property name="name">GridHPVPTYPE</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">testproc</property>
                    <property name="nativeName">testproc</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">TestDesc</property>
                    <property name="nativeName">TestDesc</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">TestDate</property>
                    <property name="nativeName">TestDate</property>
                    <property name="dataType">date-time</property>
                    <property name="nativeDataType">93</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">frequnit</property>
                    <property name="nativeName">frequnit</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">testcenter</property>
                    <property name="nativeName">testcenter</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">instruments</property>
                    <property name="nativeName">instruments</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">calibration</property>
                    <property name="nativeName">calibration</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">SerialNo</property>
                    <property name="nativeName">SerialNo</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">9</property>
                    <property name="name">Productname</property>
                    <property name="nativeName">Productname</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">10</property>
                    <property name="name">Version</property>
                    <property name="nativeName">Version</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[SELECT distinct TD.testproc,TD.TestDesc,TD.TestDate,TD.frequnit,TD.testcenter,TD.instruments,TD.calibration ,s.SerialNo,p.Productname,p.version
FROM testdata TD inner join product_serial s on td.ProdSerial_id=S.Prodserial_id 
inner join product p on s.Product_id=p.Product_id   where TD.Test_id=?]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>Test_id</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
            <design:precision>11</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>NotNullable</design:nullability>
            <design:uiHints>
              <design:displayName>Test_id</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>Test_id</design:label>
            <design:formattingHints>
              <design:displaySize>11</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>TestName</design:name>
              <design:position>2</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
            <design:precision>50</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>TestName</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>TestName</design:label>
            <design:formattingHints>
              <design:displaySize>50</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>TestDesc</design:name>
              <design:position>3</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
            <design:precision>100</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>TestDesc</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>TestDesc</design:label>
            <design:formattingHints>
              <design:displaySize>100</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>ProdSerial_id</design:name>
              <design:position>4</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
            <design:precision>11</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>ProdSerial_id</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>ProdSerial_id</design:label>
            <design:formattingHints>
              <design:displaySize>11</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>TestDate</design:name>
              <design:position>5</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>93</design:nativeDataTypeCode>
            <design:precision>19</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>TestDate</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>TestDate</design:label>
            <design:formattingHints>
              <design:displaySize>19</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="CPOmniDeviation" id="790">
            <list-property name="computedColumns">
                <structure>
                    <property name="name">Hide</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">RUNNINGCOUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value">row["Frequency"]</expression>
                        </structure>
                    </list-property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">Frequency</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">frequency</text-property>
                    <text-property name="heading">frequency</text-property>
                </structure>
                <structure>
                    <property name="columnName">frequnit</property>
                    <property name="analysis">dimension</property>
                    <text-property name="displayName">frequnit</text-property>
                    <text-property name="heading">frequnit</text-property>
                </structure>
                <structure>
                    <property name="columnName">Homni</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">Homni</text-property>
                    <text-property name="heading">Homni</text-property>
                </structure>
                <structure>
                    <property name="columnName">Vomni</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">Vomni</text-property>
                    <text-property name="heading">Vomni</text-property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">param_1</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_2</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">param_3</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName"></property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">-1</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">frequnit</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Homni</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Vomni</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">Hide</property>
                        <property name="dataType">integer</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">frequency</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">frequnit</property>
                    <property name="nativeName">frequnit</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Homni</property>
                    <property name="nativeName">Homni</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Vomni</property>
                    <property name="nativeName">Vomni</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[select frequency,frequnit,case Homni when 0 then null else Homni end Homni,case Vomni when 0 then null else Vomni end Vomni from (
select distinct (case t.frequnit when 'GHz' then frequency/1000 else frequency end) frequency,frequnit,
round(sum(Homni),?) Homni,round(sum(Vomni),?) Vomni from (
select frequency,OmniDeviation Homni,0 Vomni,test_id from hcalculated  
union select frequency,0 Homni,OmniDeviation Vomni,test_id from vcalculated ) as tab
inner join testdata t on tab.test_id=t.test_id
where t.test_id=?
group by frequency,t.test_id) as t;]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name></design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>-1</design:nativeDataTypeCode>
          <design:precision>0</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Unknown</design:nullability>
        </design:attributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>Frequency</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
            <design:precision>20</design:precision>
            <design:scale>10</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>frequency</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>frequency</design:label>
            <design:formattingHints>
              <design:displaySize>22</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid1" id="496">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq1</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid10" id="2227">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq10</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid2" id="2119">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq2</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid3" id="2120">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq3</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid4" id="2121">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq4</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid5" id="2122">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq5</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid6" id="2223">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq6</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid7" id="2224">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq7</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid8" id="2225">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq8</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="PolarGrid9" id="2226">
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freq</property>
                    <property name="paramName">freq9</property>
                    <property name="nativeName">freq</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'P'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">3Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">3Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">10Db_BW_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">10Db_BS_BMax</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">BackLobe</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">CPGain</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AR_0</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">OmniDeviation</property>
                        <property name="dataType">decimal</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">3Db_BW_BMax</property>
                    <property name="nativeName">3Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">3Db_BS_BMax</property>
                    <property name="nativeName">3Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">10Db_BW_BMax</property>
                    <property name="nativeName">10Db_BW_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">10Db_BS_BMax</property>
                    <property name="nativeName">10Db_BS_BMax</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">BackLobe</property>
                    <property name="nativeName">BackLobe</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">CPGain</property>
                    <property name="nativeName">CPGain</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AR_0</property>
                    <property name="nativeName">AR_0</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">OmniDeviation</property>
                    <property name="nativeName">OmniDeviation</property>
                    <property name="dataType">decimal</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarSummary(?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freq</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>10</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset" id="4883">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq1</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lg1</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX1", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN1", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset10" id="4882">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq10</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lg10</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX10", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN10", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset2" id="4884">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq2</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lg2</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX2", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN2", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset3" id="4875">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq3</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lg3</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX3", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN3", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset4" id="4876">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq4</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lg4</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX4", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN4", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset5" id="4877">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq5</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lg5</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX5", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN5", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset6" id="4878">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq6</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lg6</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX6", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN6", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset7" id="4879">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq7</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lg7</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX7", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN7", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset8" id="4880">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq8</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lg8</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX8", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN8", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset9" id="4881">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">1</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq9</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <expression name="defaultValue" type="javascript">2000</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <expression name="defaultValue" type="javascript">'H'</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">lg</property>
                    <property name="paramName">lg9</property>
                    <property name="nativeName">lg</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">4</property>
                    <expression name="defaultValue" type="javascript">.0001</expression>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Test_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX9", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN9", dataSetRow["strminvalue"]);

reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Test_id</property>
                    <property name="nativeName">Test_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spGetPolarPlot(?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>lg</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
    </data-sets>
    <cubes>
        <tabular-cube name="Data CubeTestGrid" id="14">
            <property name="dimensions">
                <tabular-dimension name="Group1" id="18">
                    <property name="defaultHierarchy">NewTabularHierarchy1</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy1" id="19">
                            <property name="levels">
                                <tabular-level name="TestDesc" id="20">
                                    <property name="dataType">string</property>
                                    <property name="columnName">TestDesc</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group2" id="21">
                    <property name="isTimeType">false</property>
                    <property name="defaultHierarchy">NewTabularHierarchy3</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy3" id="22">
                            <property name="levels">
                                <tabular-level name="TestDate" id="23">
                                    <property name="dataType">date-time</property>
                                    <property name="columnName">TestDate</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group3" id="56">
                    <property name="defaultHierarchy">NewTabularHierarchy2</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy2" id="57">
                            <property name="levels">
                                <tabular-level name="frequnit" id="58">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequnit</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group4" id="59">
                    <property name="defaultHierarchy">NewTabularHierarchy4</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy4" id="60">
                            <property name="levels">
                                <tabular-level name="calibration" id="61">
                                    <property name="dataType">string</property>
                                    <property name="columnName">calibration</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group5" id="62">
                    <property name="defaultHierarchy">NewTabularHierarchy5</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy5" id="63">
                            <property name="levels">
                                <tabular-level name="instruments" id="64">
                                    <property name="dataType">string</property>
                                    <property name="columnName">instruments</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group6" id="65">
                    <property name="defaultHierarchy">NewTabularHierarchy6</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy6" id="66">
                            <property name="levels">
                                <tabular-level name="testcenter" id="67">
                                    <property name="dataType">string</property>
                                    <property name="columnName">testcenter</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group7" id="270">
                    <property name="defaultHierarchy">NewTabularHierarchy7</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy7" id="271">
                            <property name="levels">
                                <tabular-level name="Productname" id="272">
                                    <property name="dataType">string</property>
                                    <property name="columnName">Productname</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group8" id="273">
                    <property name="defaultHierarchy">NewTabularHierarchy8</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy8" id="274">
                            <property name="levels">
                                <tabular-level name="SerialNo" id="275">
                                    <property name="dataType">string</property>
                                    <property name="columnName">SerialNo</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group9" id="282">
                    <property name="defaultHierarchy">NewTabularHierarchy9</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy9" id="283">
                            <property name="levels">
                                <tabular-level name="version" id="284">
                                    <property name="dataType">string</property>
                                    <property name="columnName">Version</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group10" id="297">
                    <property name="defaultHierarchy">NewTabularHierarchy10</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy10" id="298">
                            <property name="levels">
                                <tabular-level name="Frequency" id="299">
                                    <property name="dataType">string</property>
                                    <property name="columnName">Frequency</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group11" id="755">
                    <property name="defaultHierarchy">NewTabularHierarchy11</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy11" id="756">
                            <property name="levels">
                                <tabular-level name="testproc" id="757">
                                    <property name="dataType">string</property>
                                    <property name="columnName">testproc</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group" id="1283">
                    <property name="defaultHierarchy">NewTabularHierarchy</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy" id="1284">
                            <property name="levels">
                                <tabular-level name="frequency2" id="1285">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequency2</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group12" id="1286">
                    <property name="defaultHierarchy">NewTabularHierarchy12</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy12" id="1287">
                            <property name="levels">
                                <tabular-level name="frequency3" id="1288">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequency3</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group13" id="1464">
                    <property name="defaultHierarchy">NewTabularHierarchy13</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy13" id="1465">
                            <property name="levels">
                                <tabular-level name="frequency4" id="1466">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequency4</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group14" id="1467">
                    <property name="defaultHierarchy">NewTabularHierarchy14</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy14" id="1468">
                            <property name="levels">
                                <tabular-level name="frequency5" id="1469">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequency5</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group15" id="1470">
                    <property name="defaultHierarchy">NewTabularHierarchy15</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy15" id="1471">
                            <property name="levels">
                                <tabular-level name="frequency6" id="1472">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequency6</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group16" id="1473">
                    <property name="defaultHierarchy">NewTabularHierarchy16</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy16" id="1474">
                            <property name="levels">
                                <tabular-level name="frequency7" id="1475">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequency7</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group17" id="1476">
                    <property name="defaultHierarchy">NewTabularHierarchy17</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy17" id="1477">
                            <property name="levels">
                                <tabular-level name="frequency8" id="1478">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequency8</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group18" id="1479">
                    <property name="defaultHierarchy">NewTabularHierarchy18</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy18" id="1480">
                            <property name="levels">
                                <tabular-level name="frequency9" id="1481">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequency9</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Group19" id="1482">
                    <property name="defaultHierarchy">NewTabularHierarchy19</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy19" id="1483">
                            <property name="levels">
                                <tabular-level name="frequency10" id="1484">
                                    <property name="dataType">string</property>
                                    <property name="columnName">frequency10</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
            </property>
            <property name="dataSet">Data SetGrid</property>
        </tabular-cube>
    </cubes>
    <styles>
        <style name="report" id="4">
            <property name="fontFamily">sans-serif</property>
            <property name="fontSize">10pt</property>
        </style>
        <style name="NewStyle" id="1122">
            <property name="height">1cm</property>
        </style>
        <style name="borderstylegrid" id="1351">
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">thin</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">thin</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">thin</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">thin</property>
        </style>
        <style name="table-cell" id="1352">
            <property name="backgroundColor">#FFFFFF</property>
            <property name="borderBottomColor">#000000</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1px</property>
            <property name="borderLeftColor">#000000</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1px</property>
            <property name="borderRightColor">#000000</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1px</property>
            <property name="borderTopColor">#000000</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1px</property>
        </style>
        <style name="table" id="1353">
            <property name="backgroundColor">#FFFFFF</property>
            <property name="borderBottomColor">#000000</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1px</property>
            <property name="borderLeftColor">#000000</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1px</property>
            <property name="borderRightColor">#000000</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1px</property>
            <property name="borderTopColor">#000000</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1px</property>
        </style>
        <style name="BorderStyle" id="1354">
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">thin</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">thin</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">thin</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">thin</property>
        </style>
    </styles>
    <page-setup>
        <simple-master-page name="Simple MasterPage" id="2">
            <property name="leftMargin">0.2604166666666667in</property>
            <property name="rightMargin">0.22916666666666666in</property>
            <page-header>
                <text-data id="1126">
                    <property name="style">NewStyle</property>
                    <property name="fontFamily">sans-serif</property>
                    <property name="fontSize">12pt</property>
                    <property name="fontWeight">bold</property>
                    <property name="borderBottomStyle">none</property>
                    <property name="borderLeftStyle">none</property>
                    <property name="borderRightStyle">none</property>
                    <property name="borderTopStyle">none</property>
                    <property name="textAlign">center</property>
                    <expression name="valueExpr">params["rpth"].value</expression>
                    <property name="contentType">html</property>
                </text-data>
            </page-header>
            <page-footer>
                <grid id="1266">
                    <property name="borderBottomStyle">none</property>
                    <property name="borderLeftStyle">none</property>
                    <property name="borderRightStyle">none</property>
                    <property name="borderTopStyle">none</property>
                    <property name="canShrink">false</property>
                    <column id="1267"/>
                    <row id="1268">
                        <cell id="1269">
                            <grid id="1272">
                                <column id="1273">
                                    <property name="width">1.9in</property>
                                </column>
                                <column id="1274">
                                    <property name="width">4.3in</property>
                                </column>
                                <column id="4916">
                                    <property name="width">1.9in</property>
                                </column>
                                <row id="1275">
                                    <cell id="1276">
                                        <text id="1278">
                                            <property name="width">6cm</property>
                                            <property name="contentType">html</property>
                                            <text-property name="content"><![CDATA[<html>
<body>
<style>
.outer{
  text-align: center;
}
.outer img{
  display: inline-block;
}
</style>
<table>
<tr>
<td>
<div class="outer">

<img src="\img\Verdantlogo.png" height="50px" width="200px" align="baseline" name="myimage">

</div>
</td>
</tr>
</table>
</body>
</html>]]></text-property>
                                        </text>
                                    </cell>
                                    <cell id="1277">
                                        <text-data id="1279">
                                            <property name="fontWeight">normal</property>
                                            <property name="textAlign">center</property>
                                            <expression name="valueExpr">params["rptf"].value</expression>
                                            <property name="contentType">html</property>
                                        </text-data>
                                        <text-data id="4917">
                                            <property name="textAlign">center</property>
                                            <expression name="valueExpr">"Verdant Telemetry and Antenna Systems Pvt. Ltd., Cochin, India"</expression>
                                            <property name="contentType">html</property>
                                        </text-data>
                                    </cell>
                                    <cell id="4915"/>
                                </row>
                            </grid>
                        </cell>
                    </row>
                    <row id="1270">
                        <cell id="1271"/>
                    </row>
                </grid>
            </page-footer>
        </simple-master-page>
    </page-setup>
    <body>
        <label id="1356">
            <property name="fontWeight">bold</property>
            <property name="textAlign">left</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["omni"].value!='yes'</expression>
                </structure>
            </list-property>
            <text-property name="text">Omni Deviation</text-property>
        </label>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="2651">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="2652">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="2653">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View20" id="2654">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2655">
                                            <property name="content">
                                                <data name="testproc2" id="2656">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2657">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View82" id="2658">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2659">
                                            <property name="content">
                                                <data name="TestDesc12" id="2660">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2661">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View92" id="2662">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2663">
                                            <property name="content">
                                                <data name="instruments12" id="2664">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2665">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View102" id="2666">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2667">
                                            <property name="content">
                                                <data name="calibration12" id="2668">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2669">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View112" id="2670">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2671">
                                            <property name="content">
                                                <data name="testcenter12" id="2672">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2673">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View122" id="2674">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2675">
                                            <property name="content">
                                                <data name="Productname2" id="2676">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2677">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View132" id="2678">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2679">
                                            <property name="content">
                                                <data name="version2" id="2680">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2681">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View142" id="2682">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2683">
                                            <property name="content">
                                                <data name="SerialNo2" id="2684">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="2689">
                    <property name="content">
                        <label id="2690">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2691">
                    <property name="content">
                        <label id="2692">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2693">
                    <property name="content">
                        <label id="2694">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2695">
                    <property name="content">
                        <label id="2696">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2697">
                    <property name="content">
                        <label id="2698">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2699">
                    <property name="content">
                        <label id="2700">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2701">
                    <property name="content">
                        <label id="2702">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2705">
                    <property name="content">
                        <label id="2706">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">auto</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["omni"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="861">
            <property name="canShrink">true</property>
            <property name="width">7.9375in</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["omni"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="862">
                <property name="width">7.9375in</property>
            </column>
            <row id="863">
                <cell id="864">
                    <label id="885">
                        <property name="fontWeight">bold</property>
                        <property name="borderBottomStyle">solid</property>
                        <property name="borderBottomWidth">medium</property>
                        <property name="borderLeftStyle">solid</property>
                        <property name="borderLeftWidth">medium</property>
                        <property name="borderRightStyle">solid</property>
                        <property name="borderRightWidth">medium</property>
                        <property name="borderTopStyle">solid</property>
                        <property name="borderTopWidth">medium</property>
                        <property name="textAlign">center</property>
                        <text-property name="text">Omni Deviation(dB)</text-property>
                    </label>
                </cell>
            </row>
            <row id="865">
                <cell id="866">
                    <table id="4885">
                        <property name="dataSet">CPOmniDeviation</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">Frequency</property>
                                <text-property name="displayName">frequency</text-property>
                                <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">Homni</property>
                                <text-property name="displayName">Homni</text-property>
                                <expression name="expression" type="javascript">dataSetRow["Homni"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                            <structure>
                                <property name="name">Vomni</property>
                                <text-property name="displayName">Vomni</text-property>
                                <expression name="expression" type="javascript">dataSetRow["Vomni"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="4898"/>
                        <column id="4899"/>
                        <column id="4900"/>
                        <header>
                            <row id="4886">
                                <cell id="4887">
                                    <label id="4901">
                                        <text-property name="text">frequency</text-property>
                                    </label>
                                </cell>
                                <cell id="4888">
                                    <label id="4903">
                                        <text-property name="text">HP</text-property>
                                    </label>
                                </cell>
                                <cell id="4889">
                                    <label id="4905">
                                        <text-property name="text">VP</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="4890">
                                <cell id="4891">
                                    <data id="4902">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">Frequency</property>
                                    </data>
                                </cell>
                                <cell id="4892">
                                    <data id="4904">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">Homni</property>
                                    </data>
                                </cell>
                                <cell id="4893">
                                    <data id="4906">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">Vomni</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="4894">
                                <cell id="4895"/>
                                <cell id="4896"/>
                                <cell id="4897"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <label id="1456">
            <property name="fontWeight">bold</property>
            <property name="pageBreakBefore">always</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <text-property name="text">Polar Plot</text-property>
        </label>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="232">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="240">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="758">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View" id="759">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="760">
                                            <property name="content">
                                                <data name="testproc" id="762">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="246">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View8" id="247">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="248">
                                            <property name="content">
                                                <data name="TestDesc1" id="250">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="252">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View9" id="253">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="254">
                                            <property name="content">
                                                <data name="instruments1" id="256">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="258">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View10" id="259">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="260">
                                            <property name="content">
                                                <data name="calibration1" id="262">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="264">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View11" id="265">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="266">
                                            <property name="content">
                                                <data name="testcenter1" id="268">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="276">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View12" id="277">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="278">
                                            <property name="content">
                                                <data name="Productname" id="280">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="285">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View13" id="286">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="287">
                                            <property name="content">
                                                <data name="version" id="289">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="291">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View14" id="292">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="293">
                                            <property name="content">
                                                <data name="SerialNo" id="295">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="300">
                            <property name="dimension">Group10</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View15" id="301">
                                    <property name="level">Group10/Frequency</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="302">
                                            <property name="content">
                                                <data name="Frequency" id="304">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Frequency</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                            <property name="width">357px</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="761">
                    <property name="content">
                        <label id="763">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="249">
                    <property name="content">
                        <label id="251">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="255">
                    <property name="content">
                        <label id="257">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="261">
                    <property name="content">
                        <label id="263">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="267">
                    <property name="content">
                        <label id="269">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="279">
                    <property name="content">
                        <label id="281">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="288">
                    <property name="content">
                        <label id="290">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="294">
                    <property name="content">
                        <label id="296">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="303">
                    <property name="content">
                        <label id="305">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">auto</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq1"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression">dimension["Group10"]["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="9">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGYAW.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
    <Cursor>
      <Type>Auto</Type>
    </Cursor>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX1&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN1&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
/*&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
	if(title==&quot;no&quot;)&#xD;
	{&#xD;
	block.setBackground(null)&#xD;
	}&#xD;
	else&#xD;
	{}&#xD;
}*/</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq1"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2511">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq1"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2512"/>
            <row id="2513">
                <cell id="2514">
                    <table id="2515">
                        <property name="dataSet">PolarGrid1</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">OmniDeviation</property>
                                <text-property name="displayName">OmniDeviation</text-property>
                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2755"/>
                        <column id="2522"/>
                        <header>
                            <row id="2516">
                                <cell id="2752"/>
                                <cell id="2517">
                                    <label id="2523">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">Omni Deviation(dB)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2518">
                                <cell id="2753">
                                    <text-data id="2756">
                                        <property name="fontWeight">bold</property>
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">Data SetGrid</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">GridHPVPTYPE</property>
                                                <text-property name="displayName">GridHPVPTYPE</text-property>
                                                <expression name="expression" type="javascript">dataSetRow["GridHPVPTYPE"]</expression>
                                                <property name="dataType">string</property>
                                            </structure>
                                        </list-property>
                                        <expression name="valueExpr">if(row["GridHPVPTYPE"]=='H')&#13;
{&#13;
	row["GridHPVPTYPE"]='HP'&#13;
}&#13;
else&#13;
{&#13;
row["GridHPVPTYPE"]='VP'&#13;
}</expression>
                                        <property name="contentType">html</property>
                                    </text-data>
                                </cell>
                                <cell id="2519">
                                    <data id="2524">
                                        <property name="textAlign">center</property>
                                        <property name="resultSetColumn">OmniDeviation</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2520">
                                <cell id="2754"/>
                                <cell id="2521"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1494">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1495">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1496">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1" id="1497">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1498">
                                            <property name="content">
                                                <data name="testproc1" id="1499">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1500">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View81" id="1501">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1502">
                                            <property name="content">
                                                <data name="TestDesc11" id="1503">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1504">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View91" id="1505">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1506">
                                            <property name="content">
                                                <data name="instruments11" id="1507">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1508">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View101" id="1509">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1510">
                                            <property name="content">
                                                <data name="calibration11" id="1511">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1512">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View111" id="1513">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1514">
                                            <property name="content">
                                                <data name="testcenter11" id="1515">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1516">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View121" id="1517">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1518">
                                            <property name="content">
                                                <data name="Productname1" id="1519">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1520">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View131" id="1521">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1522">
                                            <property name="content">
                                                <data name="version1" id="1523">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1524">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View141" id="1525">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1526">
                                            <property name="content">
                                                <data name="SerialNo1" id="1527">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1551">
                            <property name="dimension">Group</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View2" id="1552">
                                    <property name="level">Group/frequency2</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1553">
                                            <property name="content">
                                                <data name="frequency2" id="1555">
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frequency2</property>
                                                </data>
                                            </property>
                                            <property name="style">BorderStyle</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1532">
                    <property name="content">
                        <label id="1533">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1534">
                    <property name="content">
                        <label id="1535">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1536">
                    <property name="content">
                        <label id="1537">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1538">
                    <property name="content">
                        <label id="1539">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1540">
                    <property name="content">
                        <label id="1541">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1542">
                    <property name="content">
                        <label id="1543">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1544">
                    <property name="content">
                        <label id="1545">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1548">
                    <property name="content">
                        <label id="1549">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1554">
                    <property name="content">
                        <label id="1556">
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq2"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency2</property>
                    <expression name="expression">dimension["Group"]["frequency2"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="1550">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGYAW.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX2&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN2&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
/*&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}*/</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset2</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq2"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2525">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq2"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2526"/>
            <row id="2527">
                <cell id="2528">
                    <table id="2529">
                        <property name="dataSet">PolarGrid2</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">OmniDeviation</property>
                                <text-property name="displayName">OmniDeviation</text-property>
                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2750"/>
                        <column id="2538"/>
                        <header>
                            <row id="2530">
                                <cell id="2747"/>
                                <cell id="2531">
                                    <label id="2532">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">Omni Deviation(dB)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2533">
                                <cell id="2748">
                                    <text-data id="2751">
                                        <property name="fontWeight">bold</property>
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">Data SetGrid</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">GridHPVPTYPE</property>
                                                <text-property name="displayName">GridHPVPTYPE</text-property>
                                                <expression name="expression" type="javascript">dataSetRow["GridHPVPTYPE"]</expression>
                                                <property name="dataType">string</property>
                                            </structure>
                                        </list-property>
                                        <expression name="valueExpr">if(row["GridHPVPTYPE"]=='H')&#13;
{&#13;
	row["GridHPVPTYPE"]='HP'&#13;
}&#13;
else&#13;
{&#13;
row["GridHPVPTYPE"]='VP'&#13;
}</expression>
                                        <property name="contentType">html</property>
                                    </text-data>
                                </cell>
                                <cell id="2534">
                                    <data id="2535">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid2</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">OmniDeviation</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2536">
                                <cell id="2749"/>
                                <cell id="2537"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1557">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1558">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1559">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View16" id="1560">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1561">
                                            <property name="content">
                                                <data name="testproc11" id="1562">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1563">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View811" id="1564">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1565">
                                            <property name="content">
                                                <data name="TestDesc111" id="1566">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1567">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View911" id="1568">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1569">
                                            <property name="content">
                                                <data name="instruments111" id="1570">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1571">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1011" id="1572">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1573">
                                            <property name="content">
                                                <data name="calibration111" id="1574">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1575">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1111" id="1576">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1577">
                                            <property name="content">
                                                <data name="testcenter111" id="1578">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1579">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1211" id="1580">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1581">
                                            <property name="content">
                                                <data name="Productname11" id="1582">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1583">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1311" id="1584">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1585">
                                            <property name="content">
                                                <data name="version11" id="1586">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1587">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1411" id="1588">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1589">
                                            <property name="content">
                                                <data name="SerialNo11" id="1590">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1614">
                            <property name="dimension">Group12</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View3" id="1615">
                                    <property name="level">Group12/frequency3</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1616">
                                            <property name="content">
                                                <data name="frequency3" id="1618">
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frequency3</property>
                                                </data>
                                            </property>
                                            <property name="style">BorderStyle</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1595">
                    <property name="content">
                        <label id="1596">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1597">
                    <property name="content">
                        <label id="1598">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1599">
                    <property name="content">
                        <label id="1600">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1601">
                    <property name="content">
                        <label id="1602">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1603">
                    <property name="content">
                        <label id="1604">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1605">
                    <property name="content">
                        <label id="1606">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1607">
                    <property name="content">
                        <label id="1608">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1611">
                    <property name="content">
                        <label id="1612">
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1617">
                    <property name="content">
                        <label id="1619">
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq3"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency3</property>
                    <expression name="expression">dimension["Group12"]["frequency3"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="1613">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGYAW.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX3&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN3&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
/*&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}*/</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset3</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq3"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2539">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq3"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2540"/>
            <row id="2541">
                <cell id="2542">
                    <table id="2543">
                        <property name="dataSet">PolarGrid3</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">OmniDeviation</property>
                                <text-property name="displayName">OmniDeviation</text-property>
                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2745"/>
                        <column id="2552"/>
                        <header>
                            <row id="2544">
                                <cell id="2742"/>
                                <cell id="2545">
                                    <label id="2546">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">Omni Deviation(dB)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2547">
                                <cell id="2743">
                                    <text-data id="2746">
                                        <property name="fontWeight">bold</property>
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">Data SetGrid</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">GridHPVPTYPE</property>
                                                <text-property name="displayName">GridHPVPTYPE</text-property>
                                                <expression name="expression" type="javascript">dataSetRow["GridHPVPTYPE"]</expression>
                                                <property name="dataType">string</property>
                                            </structure>
                                        </list-property>
                                        <expression name="valueExpr">if(row["GridHPVPTYPE"]=='H')&#13;
{&#13;
	row["GridHPVPTYPE"]='HP'&#13;
}&#13;
else&#13;
{&#13;
row["GridHPVPTYPE"]='VP'&#13;
}</expression>
                                        <property name="contentType">html</property>
                                    </text-data>
                                </cell>
                                <cell id="2548">
                                    <data id="2549">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid3</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">OmniDeviation</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2550">
                                <cell id="2744"/>
                                <cell id="2551"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1620">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1621">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1622">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View161" id="1623">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1624">
                                            <property name="content">
                                                <data name="testproc111" id="1625">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1626">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View8111" id="1627">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1628">
                                            <property name="content">
                                                <data name="TestDesc1111" id="1629">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1630">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View9111" id="1631">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1632">
                                            <property name="content">
                                                <data name="instruments1111" id="1633">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1634">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View10111" id="1635">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1636">
                                            <property name="content">
                                                <data name="calibration1111" id="1637">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1638">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View11111" id="1639">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1640">
                                            <property name="content">
                                                <data name="testcenter1111" id="1641">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1642">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View12111" id="1643">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1644">
                                            <property name="content">
                                                <data name="Productname111" id="1645">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1646">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View13111" id="1647">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1648">
                                            <property name="content">
                                                <data name="version111" id="1649">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1650">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View14111" id="1651">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1652">
                                            <property name="content">
                                                <data name="SerialNo111" id="1653">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1677">
                            <property name="dimension">Group13</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View4" id="1678">
                                    <property name="level">Group13/frequency4</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1679">
                                            <property name="content">
                                                <data name="frequency4" id="1681">
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frequency4</property>
                                                </data>
                                            </property>
                                            <property name="style">BorderStyle</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1658">
                    <property name="content">
                        <label id="1659">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1660">
                    <property name="content">
                        <label id="1661">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1662">
                    <property name="content">
                        <label id="1663">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1664">
                    <property name="content">
                        <label id="1665">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1666">
                    <property name="content">
                        <label id="1667">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1668">
                    <property name="content">
                        <label id="1669">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1670">
                    <property name="content">
                        <label id="1671">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1674">
                    <property name="content">
                        <label id="1675">
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1680">
                    <property name="content">
                        <label id="1682">
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq4"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency4</property>
                    <expression name="expression">dimension["Group13"]["frequency4"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="1676">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGYAW.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX4&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN4&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
/*&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}*/</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset4</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq4"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2553">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq4"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2554"/>
            <row id="2555">
                <cell id="2556">
                    <table id="2557">
                        <property name="dataSet">PolarGrid4</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">OmniDeviation</property>
                                <text-property name="displayName">OmniDeviation</text-property>
                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2740"/>
                        <column id="2566"/>
                        <header>
                            <row id="2558">
                                <cell id="2737"/>
                                <cell id="2559">
                                    <label id="2560">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">Omni Deviation(dB)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2561">
                                <cell id="2738">
                                    <text-data id="2741">
                                        <property name="fontWeight">bold</property>
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">Data SetGrid</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">GridHPVPTYPE</property>
                                                <text-property name="displayName">GridHPVPTYPE</text-property>
                                                <expression name="expression" type="javascript">dataSetRow["GridHPVPTYPE"]</expression>
                                                <property name="dataType">string</property>
                                            </structure>
                                        </list-property>
                                        <expression name="valueExpr">if(row["GridHPVPTYPE"]=='H')&#13;
{&#13;
	row["GridHPVPTYPE"]='HP'&#13;
}&#13;
else&#13;
{&#13;
row["GridHPVPTYPE"]='VP'&#13;
}</expression>
                                        <property name="contentType">html</property>
                                    </text-data>
                                </cell>
                                <cell id="2562">
                                    <data id="2563">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid4</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">OmniDeviation</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2564">
                                <cell id="2739"/>
                                <cell id="2565"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1683">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1684">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1685">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1611" id="1686">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1687">
                                            <property name="content">
                                                <data name="testproc1111" id="1688">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1689">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View81111" id="1690">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1691">
                                            <property name="content">
                                                <data name="TestDesc11111" id="1692">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1693">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View91111" id="1694">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1695">
                                            <property name="content">
                                                <data name="instruments11111" id="1696">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1697">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View101111" id="1698">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1699">
                                            <property name="content">
                                                <data name="calibration11111" id="1700">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1701">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View111111" id="1702">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1703">
                                            <property name="content">
                                                <data name="testcenter11111" id="1704">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1705">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View121111" id="1706">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1707">
                                            <property name="content">
                                                <data name="Productname1111" id="1708">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1709">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View131111" id="1710">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1711">
                                            <property name="content">
                                                <data name="version1111" id="1712">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1713">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View141111" id="1714">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1715">
                                            <property name="content">
                                                <data name="SerialNo1111" id="1716">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1740">
                            <property name="dimension">Group14</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View5" id="1741">
                                    <property name="level">Group14/frequency5</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1742">
                                            <property name="content">
                                                <data name="frequency5" id="1744">
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frequency5</property>
                                                </data>
                                            </property>
                                            <property name="style">BorderStyle</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1721">
                    <property name="content">
                        <label id="1722">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1723">
                    <property name="content">
                        <label id="1724">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1725">
                    <property name="content">
                        <label id="1726">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1727">
                    <property name="content">
                        <label id="1728">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1729">
                    <property name="content">
                        <label id="1730">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1731">
                    <property name="content">
                        <label id="1732">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1733">
                    <property name="content">
                        <label id="1734">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1737">
                    <property name="content">
                        <label id="1738">
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1743">
                    <property name="content">
                        <label id="1745">
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq5"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency5</property>
                    <expression name="expression">dimension["Group14"]["frequency5"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="1739">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGYAW.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX5&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN5&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
/*&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}*/</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset5</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq5"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2567">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq5"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2568"/>
            <row id="2569">
                <cell id="2570">
                    <table id="2571">
                        <property name="dataSet">PolarGrid5</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">OmniDeviation</property>
                                <text-property name="displayName">OmniDeviation</text-property>
                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2735"/>
                        <column id="2580"/>
                        <header>
                            <row id="2572">
                                <cell id="2732"/>
                                <cell id="2573">
                                    <label id="2574">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">Omni Deviation(dB)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2575">
                                <cell id="2733">
                                    <text-data id="2736">
                                        <property name="fontWeight">bold</property>
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">Data SetGrid</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">GridHPVPTYPE</property>
                                                <text-property name="displayName">GridHPVPTYPE</text-property>
                                                <expression name="expression" type="javascript">dataSetRow["GridHPVPTYPE"]</expression>
                                                <property name="dataType">string</property>
                                            </structure>
                                        </list-property>
                                        <expression name="valueExpr">if(row["GridHPVPTYPE"]=='H')&#13;
{&#13;
	row["GridHPVPTYPE"]='HP'&#13;
}&#13;
else&#13;
{&#13;
row["GridHPVPTYPE"]='VP'&#13;
}</expression>
                                        <property name="contentType">html</property>
                                    </text-data>
                                </cell>
                                <cell id="2576">
                                    <data id="2577">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid5</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">OmniDeviation</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2578">
                                <cell id="2734"/>
                                <cell id="2579"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1746">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1747">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1748">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View16111" id="1749">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1750">
                                            <property name="content">
                                                <data name="testproc11111" id="1751">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1752">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View811111" id="1753">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1754">
                                            <property name="content">
                                                <data name="TestDesc111111" id="1755">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1756">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View911111" id="1757">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1758">
                                            <property name="content">
                                                <data name="instruments111111" id="1759">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1760">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1011111" id="1761">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1762">
                                            <property name="content">
                                                <data name="calibration111111" id="1763">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1764">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1111111" id="1765">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1766">
                                            <property name="content">
                                                <data name="testcenter111111" id="1767">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1768">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1211111" id="1769">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1770">
                                            <property name="content">
                                                <data name="Productname11111" id="1771">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1772">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1311111" id="1773">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1774">
                                            <property name="content">
                                                <data name="version11111" id="1775">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1776">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1411111" id="1777">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1778">
                                            <property name="content">
                                                <data name="SerialNo11111" id="1779">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1803">
                            <property name="dimension">Group15</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View6" id="1804">
                                    <property name="level">Group15/frequency6</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1805">
                                            <property name="content">
                                                <data name="frequency6" id="1807">
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frequency6</property>
                                                </data>
                                            </property>
                                            <property name="style">BorderStyle</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1784">
                    <property name="content">
                        <label id="1785">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1786">
                    <property name="content">
                        <label id="1787">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1788">
                    <property name="content">
                        <label id="1789">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1790">
                    <property name="content">
                        <label id="1791">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1792">
                    <property name="content">
                        <label id="1793">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1794">
                    <property name="content">
                        <label id="1795">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1796">
                    <property name="content">
                        <label id="1797">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1800">
                    <property name="content">
                        <label id="1801">
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1806">
                    <property name="content">
                        <label id="1808">
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq6"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency6</property>
                    <expression name="expression">dimension["Group15"]["frequency6"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="1802">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGYAW.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX6&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN6&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
/*&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}*/</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset6</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq6"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2581">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq6"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2582"/>
            <row id="2583">
                <cell id="2584">
                    <table id="2585">
                        <property name="dataSet">PolarGrid6</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">OmniDeviation</property>
                                <text-property name="displayName">OmniDeviation</text-property>
                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2730"/>
                        <column id="2594"/>
                        <header>
                            <row id="2586">
                                <cell id="2727"/>
                                <cell id="2587">
                                    <label id="2588">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">Omni Deviation(dB)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2589">
                                <cell id="2728">
                                    <text-data id="2731">
                                        <property name="fontWeight">bold</property>
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">Data SetGrid</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">GridHPVPTYPE</property>
                                                <text-property name="displayName">GridHPVPTYPE</text-property>
                                                <expression name="expression" type="javascript">dataSetRow["GridHPVPTYPE"]</expression>
                                                <property name="dataType">string</property>
                                            </structure>
                                        </list-property>
                                        <expression name="valueExpr">if(row["GridHPVPTYPE"]=='H')&#13;
{&#13;
	row["GridHPVPTYPE"]='HP'&#13;
}&#13;
else&#13;
{&#13;
row["GridHPVPTYPE"]='VP'&#13;
}</expression>
                                        <property name="contentType">html</property>
                                    </text-data>
                                </cell>
                                <cell id="2590">
                                    <data id="2591">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid6</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">OmniDeviation</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2592">
                                <cell id="2729"/>
                                <cell id="2593"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1809">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1810">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1811">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View161111" id="1812">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1813">
                                            <property name="content">
                                                <data name="testproc111111" id="1814">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1815">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View8111111" id="1816">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1817">
                                            <property name="content">
                                                <data name="TestDesc1111111" id="1818">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1819">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View9111111" id="1820">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1821">
                                            <property name="content">
                                                <data name="instruments1111111" id="1822">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1823">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View10111111" id="1824">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1825">
                                            <property name="content">
                                                <data name="calibration1111111" id="1826">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1827">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View11111111" id="1828">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1829">
                                            <property name="content">
                                                <data name="testcenter1111111" id="1830">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1831">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View12111111" id="1832">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1833">
                                            <property name="content">
                                                <data name="Productname111111" id="1834">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1835">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View13111111" id="1836">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1837">
                                            <property name="content">
                                                <data name="version111111" id="1838">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1839">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View14111111" id="1840">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1841">
                                            <property name="content">
                                                <data name="SerialNo111111" id="1842">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1866">
                            <property name="dimension">Group16</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View7" id="1867">
                                    <property name="level">Group16/frequency7</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1868">
                                            <property name="content">
                                                <data name="frequency7" id="1870">
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frequency7</property>
                                                </data>
                                            </property>
                                            <property name="style">BorderStyle</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1847">
                    <property name="content">
                        <label id="1848">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1849">
                    <property name="content">
                        <label id="1850">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1851">
                    <property name="content">
                        <label id="1852">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1853">
                    <property name="content">
                        <label id="1854">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1855">
                    <property name="content">
                        <label id="1856">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1857">
                    <property name="content">
                        <label id="1858">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1859">
                    <property name="content">
                        <label id="1860">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1863">
                    <property name="content">
                        <label id="1864">
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1869">
                    <property name="content">
                        <label id="1871">
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq7"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency7</property>
                    <expression name="expression">dimension["Group16"]["frequency7"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="1865">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGYAW.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX7&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN7&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
/*&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}*/</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset7</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq7"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2595">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq7"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2596"/>
            <row id="2597">
                <cell id="2598">
                    <table id="2599">
                        <property name="dataSet">PolarGrid7</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">OmniDeviation</property>
                                <text-property name="displayName">OmniDeviation</text-property>
                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2725"/>
                        <column id="2608"/>
                        <header>
                            <row id="2600">
                                <cell id="2722"/>
                                <cell id="2601">
                                    <label id="2602">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">Omni Deviation(dB)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2603">
                                <cell id="2723">
                                    <text-data id="2726">
                                        <property name="fontWeight">bold</property>
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">Data SetGrid</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">GridHPVPTYPE</property>
                                                <text-property name="displayName">GridHPVPTYPE</text-property>
                                                <expression name="expression" type="javascript">dataSetRow["GridHPVPTYPE"]</expression>
                                                <property name="dataType">string</property>
                                            </structure>
                                        </list-property>
                                        <expression name="valueExpr">if(row["GridHPVPTYPE"]=='H')&#13;
{&#13;
	row["GridHPVPTYPE"]='HP'&#13;
}&#13;
else&#13;
{&#13;
row["GridHPVPTYPE"]='VP'&#13;
}</expression>
                                        <property name="contentType">html</property>
                                    </text-data>
                                </cell>
                                <cell id="2604">
                                    <data id="2605">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid7</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">OmniDeviation</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2606">
                                <cell id="2724"/>
                                <cell id="2607"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1872">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1873">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1874">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1611111" id="1875">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1876">
                                            <property name="content">
                                                <data name="testproc1111111" id="1877">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1878">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View81111111" id="1879">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1880">
                                            <property name="content">
                                                <data name="TestDesc11111111" id="1881">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1882">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View91111111" id="1883">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1884">
                                            <property name="content">
                                                <data name="instruments11111111" id="1885">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1886">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View101111111" id="1887">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1888">
                                            <property name="content">
                                                <data name="calibration11111111" id="1889">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1890">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View111111111" id="1891">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1892">
                                            <property name="content">
                                                <data name="testcenter11111111" id="1893">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1894">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View121111111" id="1895">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1896">
                                            <property name="content">
                                                <data name="Productname1111111" id="1897">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1898">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View131111111" id="1899">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1900">
                                            <property name="content">
                                                <data name="version1111111" id="1901">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1902">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View141111111" id="1903">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1904">
                                            <property name="content">
                                                <data name="SerialNo1111111" id="1905">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1929">
                            <property name="dimension">Group17</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View17" id="1930">
                                    <property name="level">Group17/frequency8</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1931">
                                            <property name="content">
                                                <data name="frequency8" id="1933">
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frequency8</property>
                                                </data>
                                            </property>
                                            <property name="style">BorderStyle</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1910">
                    <property name="content">
                        <label id="1911">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1912">
                    <property name="content">
                        <label id="1913">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1914">
                    <property name="content">
                        <label id="1915">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1916">
                    <property name="content">
                        <label id="1917">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1918">
                    <property name="content">
                        <label id="1919">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1920">
                    <property name="content">
                        <label id="1921">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1922">
                    <property name="content">
                        <label id="1923">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1926">
                    <property name="content">
                        <label id="1927">
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1932">
                    <property name="content">
                        <label id="1934">
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq8"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency8</property>
                    <expression name="expression">dimension["Group17"]["frequency8"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="1928">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGYAW.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX8&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN8&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
/*&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}*/</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset8</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq8"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2609">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq8"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2610"/>
            <row id="2611">
                <cell id="2612">
                    <table id="2613">
                        <property name="dataSet">PolarGrid8</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">OmniDeviation</property>
                                <text-property name="displayName">OmniDeviation</text-property>
                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2720"/>
                        <column id="2622"/>
                        <header>
                            <row id="2614">
                                <cell id="2717"/>
                                <cell id="2615">
                                    <label id="2616">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">Omni Deviation(dB)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2617">
                                <cell id="2718">
                                    <text-data id="2721">
                                        <property name="fontWeight">bold</property>
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">Data SetGrid</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">GridHPVPTYPE</property>
                                                <text-property name="displayName">GridHPVPTYPE</text-property>
                                                <expression name="expression" type="javascript">dataSetRow["GridHPVPTYPE"]</expression>
                                                <property name="dataType">string</property>
                                            </structure>
                                        </list-property>
                                        <expression name="valueExpr">if(row["GridHPVPTYPE"]=='H')&#13;
{&#13;
	row["GridHPVPTYPE"]='HP'&#13;
}&#13;
else&#13;
{&#13;
row["GridHPVPTYPE"]='VP'&#13;
}</expression>
                                        <property name="contentType">html</property>
                                    </text-data>
                                </cell>
                                <cell id="2618">
                                    <data id="2619">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid8</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">OmniDeviation</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2620">
                                <cell id="2719"/>
                                <cell id="2621"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1935">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1936">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="1937">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View16111111" id="1938">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1939">
                                            <property name="content">
                                                <data name="testproc11111111" id="1940">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1941">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View811111111" id="1942">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1943">
                                            <property name="content">
                                                <data name="TestDesc111111111" id="1944">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1945">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View911111111" id="1946">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1947">
                                            <property name="content">
                                                <data name="instruments111111111" id="1948">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1949">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1011111111" id="1950">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1951">
                                            <property name="content">
                                                <data name="calibration111111111" id="1952">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1953">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1111111111" id="1954">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1955">
                                            <property name="content">
                                                <data name="testcenter111111111" id="1956">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1957">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1211111111" id="1958">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1959">
                                            <property name="content">
                                                <data name="Productname11111111" id="1960">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1961">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1311111111" id="1962">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1963">
                                            <property name="content">
                                                <data name="version11111111" id="1964">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1965">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1411111111" id="1966">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1967">
                                            <property name="content">
                                                <data name="SerialNo11111111" id="1968">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="1992">
                            <property name="dimension">Group18</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View18" id="1993">
                                    <property name="level">Group18/frequency9</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="1994">
                                            <property name="content">
                                                <data name="frequency9" id="1996">
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frequency9</property>
                                                </data>
                                            </property>
                                            <property name="style">BorderStyle</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="1973">
                    <property name="content">
                        <label id="1974">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1975">
                    <property name="content">
                        <label id="1976">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1977">
                    <property name="content">
                        <label id="1978">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1979">
                    <property name="content">
                        <label id="1980">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1981">
                    <property name="content">
                        <label id="1982">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1983">
                    <property name="content">
                        <label id="1984">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1985">
                    <property name="content">
                        <label id="1986">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1989">
                    <property name="content">
                        <label id="1990">
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="1995">
                    <property name="content">
                        <label id="1997">
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq9"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency9</property>
                    <expression name="expression">dimension["Group18"]["frequency9"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="1991">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGYAW.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX9&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN9&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
/*&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}*/</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset9</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq9"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2623">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq9"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2624"/>
            <row id="2625">
                <cell id="2626">
                    <table id="2627">
                        <property name="dataSet">PolarGrid9</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">OmniDeviation</property>
                                <text-property name="displayName">OmniDeviation</text-property>
                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2715"/>
                        <column id="2636"/>
                        <header>
                            <row id="2628">
                                <cell id="2712"/>
                                <cell id="2629">
                                    <label id="2630">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">Omni Deviation(dB)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2631">
                                <cell id="2713">
                                    <text-data id="2716">
                                        <property name="fontWeight">bold</property>
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">Data SetGrid</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">GridHPVPTYPE</property>
                                                <text-property name="displayName">GridHPVPTYPE</text-property>
                                                <expression name="expression" type="javascript">dataSetRow["GridHPVPTYPE"]</expression>
                                                <property name="dataType">string</property>
                                            </structure>
                                        </list-property>
                                        <expression name="valueExpr">if(row["GridHPVPTYPE"]=='H')&#13;
{&#13;
	row["GridHPVPTYPE"]='HP'&#13;
}&#13;
else&#13;
{&#13;
row["GridHPVPTYPE"]='VP'&#13;
}</expression>
                                        <property name="contentType">html</property>
                                    </text-data>
                                </cell>
                                <cell id="2632">
                                    <data id="2633">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid9</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">OmniDeviation</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2634">
                                <cell id="2714"/>
                                <cell id="2635"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" id="1998">
            <property name="cube">Data CubeTestGrid</property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="1999">
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="2000">
                            <property name="dimension">Group11</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View161111111" id="2001">
                                    <property name="level">Group11/testproc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2002">
                                            <property name="content">
                                                <data name="testproc111111111" id="2003">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testproc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2004">
                            <property name="dimension">Group1</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View8111111111" id="2005">
                                    <property name="level">Group1/TestDesc</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2006">
                                            <property name="content">
                                                <data name="TestDesc1111111111" id="2007">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">TestDesc</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2008">
                            <property name="dimension">Group5</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View9111111111" id="2009">
                                    <property name="level">Group5/instruments</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2010">
                                            <property name="content">
                                                <data name="instruments1111111111" id="2011">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">instruments</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2012">
                            <property name="dimension">Group4</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View10111111111" id="2013">
                                    <property name="level">Group4/calibration</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2014">
                                            <property name="content">
                                                <data name="calibration1111111111" id="2015">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">calibration</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2016">
                            <property name="dimension">Group6</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View11111111111" id="2017">
                                    <property name="level">Group6/testcenter</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2018">
                                            <property name="content">
                                                <data name="testcenter1111111111" id="2019">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">testcenter</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2020">
                            <property name="dimension">Group7</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View12111111111" id="2021">
                                    <property name="level">Group7/Productname</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2022">
                                            <property name="content">
                                                <data name="Productname111111111" id="2023">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">Productname</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2024">
                            <property name="dimension">Group9</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View13111111111" id="2025">
                                    <property name="level">Group9/version</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2026">
                                            <property name="content">
                                                <data name="version111111111" id="2027">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">version</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2028">
                            <property name="dimension">Group8</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View14111111111" id="2029">
                                    <property name="level">Group8/SerialNo</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2030">
                                            <property name="content">
                                                <data name="SerialNo111111111" id="2031">
                                                    <property name="fontSize">12px</property>
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">SerialNo</property>
                                                </data>
                                            </property>
                                            <property name="borderTopStyle">solid</property>
                                            <property name="borderTopWidth">thin</property>
                                            <property name="borderLeftStyle">solid</property>
                                            <property name="borderLeftWidth">thin</property>
                                            <property name="borderBottomStyle">solid</property>
                                            <property name="borderBottomWidth">thin</property>
                                            <property name="borderRightStyle">solid</property>
                                            <property name="borderRightWidth">thin</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="2055">
                            <property name="dimension">Group19</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View19" id="2056">
                                    <property name="level">Group19/frequency10</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="2057">
                                            <property name="content">
                                                <data name="frequency10" id="2059">
                                                    <property name="textAlign">left</property>
                                                    <property name="resultSetColumn">frequency10</property>
                                                </data>
                                            </property>
                                            <property name="style">BorderStyle</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="2036">
                    <property name="content">
                        <label id="2037">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Procedure</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2038">
                    <property name="content">
                        <label id="2039">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Description</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2040">
                    <property name="content">
                        <label id="2041">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Instruments Used</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2042">
                    <property name="content">
                        <label id="2043">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Calibration Status</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2044">
                    <property name="content">
                        <label id="2045">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Test Center</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2046">
                    <property name="content">
                        <label id="2047">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Title</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2048">
                    <property name="content">
                        <label id="2049">
                            <property name="fontSize">12px</property>
                            <property name="textAlign">left</property>
                            <text-property name="text">Product Part No.</text-property>
                        </label>
                    </property>
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="borderLeftStyle">solid</property>
                    <property name="borderLeftWidth">thin</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="borderRightStyle">solid</property>
                    <property name="borderRightWidth">thin</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2052">
                    <property name="content">
                        <label id="2053">
                            <property name="textAlign">left</property>
                            <text-property name="text">Serial No.</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
                <extended-item extensionName="CrosstabCell" id="2058">
                    <property name="content">
                        <label id="2060">
                            <property name="textAlign">left</property>
                            <text-property name="text">Frequency</text-property>
                        </label>
                    </property>
                    <property name="style">BorderStyle</property>
                </extended-item>
            </property>
            <property name="pageBreakBefore">always</property>
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq10"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">TestDesc</property>
                    <expression name="expression">dimension["Group1"]["TestDesc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">instruments</property>
                    <expression name="expression">dimension["Group5"]["instruments"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">calibration</property>
                    <expression name="expression">dimension["Group4"]["calibration"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testcenter</property>
                    <expression name="expression">dimension["Group6"]["testcenter"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Productname</property>
                    <expression name="expression">dimension["Group7"]["Productname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">version</property>
                    <expression name="expression">dimension["Group9"]["version"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">SerialNo</property>
                    <expression name="expression">dimension["Group8"]["SerialNo"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">testproc</property>
                    <expression name="expression">dimension["Group11"]["testproc"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">frequency10</property>
                    <expression name="expression">dimension["Group19"]["frequency10"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="2054">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGYAW.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX10&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN10&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
/*&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}*/</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset10</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq10"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Test_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Test_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
        </extended-item>
        <grid id="2637">
            <property name="canShrink">true</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">params["freq10"].value=='-1' || params["polar"].value!='yes'</expression>
                </structure>
            </list-property>
            <column id="2638"/>
            <row id="2639">
                <cell id="2640">
                    <table id="2641">
                        <property name="dataSet">PolarGrid10</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">OmniDeviation</property>
                                <text-property name="displayName">OmniDeviation</text-property>
                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                <property name="dataType">decimal</property>
                            </structure>
                        </list-property>
                        <column id="2710"/>
                        <column id="2650"/>
                        <header>
                            <row id="2642">
                                <cell id="2707"/>
                                <cell id="2643">
                                    <label id="2644">
                                        <property name="fontWeight">bold</property>
                                        <text-property name="text">Omni Deviation(dB)</text-property>
                                    </label>
                                </cell>
                            </row>
                        </header>
                        <detail>
                            <row id="2645">
                                <cell id="2708">
                                    <text-data id="2711">
                                        <property name="fontWeight">bold</property>
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">Data SetGrid</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">GridHPVPTYPE</property>
                                                <text-property name="displayName">GridHPVPTYPE</text-property>
                                                <expression name="expression" type="javascript">dataSetRow["GridHPVPTYPE"]</expression>
                                                <property name="dataType">string</property>
                                            </structure>
                                        </list-property>
                                        <expression name="valueExpr">if(row["GridHPVPTYPE"]=='H')&#13;
{&#13;
	row["GridHPVPTYPE"]='HP'&#13;
}&#13;
else&#13;
{&#13;
row["GridHPVPTYPE"]='VP'&#13;
}</expression>
                                        <property name="contentType">html</property>
                                    </text-data>
                                </cell>
                                <cell id="2646">
                                    <data id="2647">
                                        <property name="textAlign">center</property>
                                        <property name="dataSet">PolarGrid10</property>
                                        <list-property name="boundDataColumns">
                                            <structure>
                                                <property name="name">3Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">3Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["3Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BW_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BW_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">10Db_BS_BMax</property>
                                                <expression name="expression" type="javascript">dataSetRow["10Db_BS_BMax"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">BackLobe</property>
                                                <expression name="expression" type="javascript">dataSetRow["BackLobe"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">CPGain</property>
                                                <expression name="expression" type="javascript">dataSetRow["CPGain"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">AR_0</property>
                                                <expression name="expression" type="javascript">dataSetRow["AR_0"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                            <structure>
                                                <property name="name">OmniDeviation</property>
                                                <expression name="expression" type="javascript">dataSetRow["OmniDeviation"]</expression>
                                                <property name="dataType">decimal</property>
                                            </structure>
                                        </list-property>
                                        <property name="resultSetColumn">OmniDeviation</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                        <footer>
                            <row id="2648">
                                <cell id="2709"/>
                                <cell id="2649"/>
                            </row>
                        </footer>
                    </table>
                </cell>
            </row>
        </grid>
    </body>
</report>
