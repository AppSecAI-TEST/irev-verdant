<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.eclipse.org/birt/2005/design" version="3.2.23" id="1">
    <property name="author">iReveal Technologies 2016</property>
    <property name="createdBy">Eclipse BIRT Designer Version 4.3.2.v20140211-1400 Build &lt;4.3.2.v20140218-1056></property>
    <text-property name="title">Polar Radiation Pattern</text-property>
    <property name="units">in</property>
    <method name="initialize"><![CDATA[//reportContext.getDesignHandle().setProperty("title", "mytitle");
]]></method>
    <property name="iconFile">/templates/blank_report.gif</property>
    <property name="layoutPreference">fixed layout</property>
    <property name="bidiLayoutOrientation">ltr</property>
    <property name="imageDPI">96</property>
    <parameters>
        <scalar-parameter name="freq1" id="10">
            <property name="hidden">true</property>
            <text-property name="helpText">Enter the frequency</text-property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">decimal</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">10000</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="testid" id="12">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">3</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="max" id="764">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">-40</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="min" id="765">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">-60</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="type" id="767">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">H</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="serialid" id="768">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">integer</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">6</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="img" id="1028">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">yes</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="rpth" id="1124">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">dfds</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="rptf" id="1125">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">dfd</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="scale" id="1128">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">yes</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="pc" id="1357">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">integer</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">2</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="vdatatype" id="1358">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">A</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="concealValue">false</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq2" id="1414">
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq3" id="1415">
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq4" id="1416">
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="freq5" id="1417">
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
    </parameters>
    <data-sources>
        <oda-data-source extensionID="org.eclipse.birt.report.data.oda.jdbc" name="VerdantProfile" id="7">
            <list-property name="privateDriverProperties">
                <ex-property>
                    <name>metadataBidiFormatStr</name>
                    <value>ILYNN</value>
                </ex-property>
                <ex-property>
                    <name>disabledMetadataBidiFormatStr</name>
                </ex-property>
                <ex-property>
                    <name>contentBidiFormatStr</name>
                    <value>ILYNN</value>
                </ex-property>
                <ex-property>
                    <name>disabledContentBidiFormatStr</name>
                </ex-property>
            </list-property>
            <property name="odaDriverClass">com.mysql.jdbc.Driver</property>
            <property name="odaURL">jdbc:mysql://localhost:3306/verdant</property>
            <property name="odaUser">root</property>
            <property name="OdaConnProfileName">VerdantProfile</property>
            <property name="OdaConnProfileStorePath">VerdantProfile</property>
        </oda-data-source>
    </data-sources>
    <data-sets>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.SPSelectDataSet" name="HnVdataset" id="766">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression">row["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression">row["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression">params["img"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression">params["scale"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MXU</property>
                    <expression name="expression">params["max"].value</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MNU</property>
                    <expression name="expression">params["min"].value</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints"/>
            <list-property name="parameters">
                <structure>
                    <property name="name">testid</property>
                    <property name="paramName">testid</property>
                    <property name="nativeName">testid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">1</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">freqparm</property>
                    <property name="paramName">freq1</property>
                    <property name="nativeName">freqparm</property>
                    <property name="dataType">decimal</property>
                    <property name="nativeDataType">3</property>
                    <property name="position">2</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">typ</property>
                    <property name="paramName">type</property>
                    <property name="nativeName">typ</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">3</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">vdatatype</property>
                    <property name="paramName">vdatatype</property>
                    <property name="nativeName">vdatatype</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                    <property name="position">4</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">serialid</property>
                    <property name="paramName">serialid</property>
                    <property name="nativeName">serialid</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">5</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
                <structure>
                    <property name="name">prec</property>
                    <property name="paramName">pc</property>
                    <property name="nativeName">prec</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                    <property name="position">6</property>
                    <property name="isOptional">true</property>
                    <property name="allowNull">true</property>
                    <property name="isInput">true</property>
                    <property name="isOutput">false</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">Angle</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">Amplitude</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">Frequency</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">Prodserial_id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">strmaxvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">strminvalue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">MX</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">MN</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">showimage</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">scaleparam</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">11</property>
                        <property name="name">MXU</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">12</property>
                        <property name="name">MNU</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[reportContext.setPersistentGlobalVariable("MX1", dataSetRow["strmaxvalue"]);
reportContext.setPersistentGlobalVariable("MN1", dataSetRow["strminvalue"]);
reportContext.setPersistentGlobalVariable("MXU1", dataSetRow["MXU"]);
reportContext.setPersistentGlobalVariable("MNU1", dataSetRow["MNU"]);
reportContext.setPersistentGlobalVariable("showimage", dataSetRow["showimage"]);
reportContext.setPersistentGlobalVariable("scaleparam", dataSetRow["scaleparam"]);
//reportContext.setPersistentGlobalVariable("ErrorHandler", dataSetRow["ErH"]);]]></method>
            <property name="dataSource">VerdantProfile</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">Angle</property>
                    <property name="nativeName">Angle</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">Amplitude</property>
                    <property name="nativeName">Amplitude</property>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">Frequency</property>
                    <property name="nativeName">Frequency</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">Prodserial_id</property>
                    <property name="nativeName">Prodserial_id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">strmaxvalue</property>
                    <property name="nativeName">strmaxvalue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">strminvalue</property>
                    <property name="nativeName">strminvalue</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[{call spPVPolarPlot(?,?,?,?,?,?)} ]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <DataSetParameters>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>testid</design:name>
            <design:position>1</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>freqparm</design:name>
            <design:position>2</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>3</design:nativeDataTypeCode>
          <design:precision>40</design:precision>
          <design:scale>20</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>typ</design:name>
            <design:position>3</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>vdatatype</design:name>
            <design:position>4</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
          <design:precision>5</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>serialid</design:name>
            <design:position>5</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
    <parameter>
      <design:ParameterDefinition>
        <design:inOutMode>In</design:inOutMode>
        <design:attributes>
          <design:identifier>
            <design:name>prec</design:name>
            <design:position>6</design:position>
          </design:identifier>
          <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
          <design:precision>10</design:precision>
          <design:scale>0</design:scale>
          <design:nullability>Nullable</design:nullability>
        </design:attributes>
        <design:inputAttributes>
          <design:elementAttributes>
            <design:optional>true</design:optional>
          </design:elementAttributes>
        </design:inputAttributes>
      </design:ParameterDefinition>
    </parameter>
  </DataSetParameters>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
    </data-sets>
    <styles>
        <style name="report" id="4">
            <property name="fontFamily">sans-serif</property>
            <property name="fontSize">10pt</property>
        </style>
        <style name="NewStyle" id="1122">
            <property name="height">1cm</property>
        </style>
        <style name="table-cell" id="1411">
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">thin</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">thin</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">thin</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">thin</property>
        </style>
    </styles>
    <page-setup>
        <simple-master-page name="Simple MasterPage" id="2">
            <property name="leftMargin">0.2604166666666667in</property>
            <property name="rightMargin">0.22916666666666666in</property>
            <page-header>
                <text-data id="1126">
                    <property name="style">NewStyle</property>
                    <property name="backgroundColor">#E9E9E9</property>
                    <property name="fontFamily">serif</property>
                    <property name="fontSize">14pt</property>
                    <property name="fontWeight">bold</property>
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">thin</property>
                    <property name="textAlign">center</property>
                    <expression name="valueExpr">params["rpth"].value</expression>
                    <property name="contentType">html</property>
                </text-data>
            </page-header>
            <page-footer>
                <grid id="1266">
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">thin</property>
                    <property name="canShrink">false</property>
                    <column id="1267"/>
                    <row id="1268">
                        <cell id="1269">
                            <grid id="1272">
                                <property name="fontFamily">serif</property>
                                <property name="fontSize">11pt</property>
                                <column id="1273"/>
                                <column id="1274"/>
                                <column id="1423"/>
                                <row id="1275">
                                    <cell id="1276">
                                        <text id="1278">
                                            <property name="width">6cm</property>
                                            <property name="contentType">html</property>
                                            <text-property name="content"><![CDATA[<html>
<body>
<style>
.outer{
  text-align: center;
}
.outer img{
  display: inline-block;
}
</style>
<table>
<tr>
<td>
<div class="outer">

<img src="\img\Verdantlogo.png" height="50px" width="200px" align="baseline" name="myimage">

</div>
</td>
</tr>
</table>
</body>
</html>]]></text-property>
                                        </text>
                                    </cell>
                                    <cell id="1277">
                                        <text-data id="1279">
                                            <property name="fontWeight">normal</property>
                                            <property name="textAlign">center</property>
                                            <expression name="valueExpr">params["rptf"].value</expression>
                                            <property name="contentType">html</property>
                                        </text-data>
                                    </cell>
                                    <cell id="1422"/>
                                </row>
                            </grid>
                        </cell>
                    </row>
                    <row id="1270">
                        <cell id="1271">
                            <text-data id="1280">
                                <property name="textAlign">center</property>
                                <expression name="valueExpr">"Verdant Telemetry and Antenna Systems Pvt. Ltd., Cochin, India"</expression>
                                <property name="contentType">html</property>
                            </text-data>
                        </cell>
                    </row>
                </grid>
            </page-footer>
        </simple-master-page>
    </page-setup>
    <body>
        <text-data id="1412">
            <property name="fontFamily">serif</property>
            <property name="fontSize">12pt</property>
            <property name="fontWeight">bold</property>
            <property name="textAlign">center</property>
            <expression name="valueExpr">if(params["vdatatype"].value=='A')&#13;
{&#13;
	'Azimuth Radiation Pattern';&#13;
}&#13;
else&#13;
{&#13;
	'Elevation Radiation Pattern';&#13;
}</expression>
            <property name="contentType">html</property>
        </text-data>
        <extended-item extensionName="Chart" id="1413">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGNeG.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX1&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN1&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">row["Aggregation"]==0</expression>
                </structure>
            </list-property>
            <list-property name="paramBindings">
                <structure>
                    <property name="paramName">testid</property>
                    <simple-property-list name="expression">
                        <value>params["testid"].value</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="paramName">freqparm</property>
                    <simple-property-list name="expression">
                        <value>params["freq1"].value</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="paramName">typ</property>
                    <simple-property-list name="expression">
                        <value>params["type"].value</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="paramName">vdatatype</property>
                    <simple-property-list name="expression">
                        <value>params["vdatatype"].value</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="paramName">serialid</property>
                    <simple-property-list name="expression">
                        <value>params["serialid"].value</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="paramName">prec</property>
                    <simple-property-list name="expression">
                        <value>params["pc"].value</value>
                    </simple-property-list>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Prodserial_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Prodserial_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MXU</property>
                    <expression name="expression" type="javascript">dataSetRow["MXU"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MNU</property>
                    <expression name="expression" type="javascript">dataSetRow["MNU"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Aggregation</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">COUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value" type="javascript">row["Angle"]</expression>
                        </structure>
                    </list-property>
                    <property name="allowExport">true</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="1418">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGNeG.png</URL>
      <Data>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optMd1WQqKoS499t1fteCmuWSfZ8FPv1KpFW3Qf/7//+T/F9MfjG9yq4jL9DaI/nBFVi1gKxgkBtaS9ZO+esNiIiougW+SBF97KCBBUz1t4bLSdr9b5HUTXaE0p0j58jU055v1G8s/wSdZKnApq9wGb8HT+PopuOqHWsxkCsqEBtLQiz2oiIiKJbRC4U9GOmexRzNUlzbI5CRY+32aL+obBWvnH52vrdVrfH0Yf/9ddfv2ERWfvetSZLa82Yxu94FxoviYiIolvknWb0iY8iu0TgmNksv3hlvGdF91dffbUpMBGWy8oaTBTFv7zWxOUhCe69koF7lo3lxMeR2s/sp7L18PM4sjA7EVJERBTdIvIWWGa6RxGIsEMs1+eW9pIjVVH4u1/96levPvroozeWzSTAUWAirquyxrJxyxkRvCWMZy0Tt7LRZJ/3yvDtieDl/q71raojZeuBvRbrim4REUW3iLwDonut0yD8+c9/vvOHr33uqD2hLBFMwBw/zyTAUWAitDslDlk3suP1HVXPfFxX3quJoKNdY0vEHslGb9VD3xP59bs10T2OJii6RURE0S3yHonuLSE+kx3eKnH4zTff/ERg/vOf/7xr9b70KlN5429/+9vhbo/lXx6/c2nNQMiPVV5Gu8be9tzKRo+Z7r1qIGv7eG1kYRTwa9uwt2wnPIqIKLpF5ANnKbqZmDkKzFFgHxGYa4yZ7vKIU9qQ78G7XlnkKq24lzneE91jNnr826qHfkRwVxZ+ObJQP9fnzo4siIiIoltEPkC2rCt/+tOf3hCYWyUOZ0U3ovrvf//761boiORxUuis6F5mo8e/rWBB+4eIiCi6ReStie8j/++I01F0L/3Q1Kle2kv2sul7PvdbwYL2DxERUXSLyIMQ3Xsi9Kw4XRPIleHeql09m00XERFRdIuIwv4iYS8iIqLoFhERERFRdIuIiIiIiKJbRERERETRLSIiIiKi6BYREREREUW3iIiIiIiiW0REREREFN0iIiIiIopuERERERFFt4iIiIiIKLpFRERERBTdIiIiIiKKbhERERERUXSLiIiIiCi6RUREREQU3SIiIiIiougWEREREVF0i4iIiIiIoltERERERNEtIiIiIqLoFhERERERRbeIiIiIiKJbRERERETRLSIiIiIiim4REREREUW3iIiIiIgoukVEREREFN0iIiIiIopuERERERFRdIuIiIiIKLpFRERERBTdIiIiIiKi6BYRERERUXSLiIiIiCi6RURERERE0S0iIiIiougWERERERFFt4iIiIiIoltERERERNEtIiIiIiKKbhERERERRbeIiIiIiKJbREREREQU3SIiIiIiim4REREREVF0i4iIiIgoukVEREREFN0iIiIiIqLoFhERERFRdIuIiIiIKLpFRERERKTB/wMkp0buLvXj9QAAAABJRU5ErkJggg==</Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX1&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN1&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakBefore">always</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">row["Aggregation"]==0</expression>
                </structure>
            </list-property>
            <list-property name="paramBindings">
                <structure>
                    <property name="paramName">testid</property>
                    <simple-property-list name="expression">
                        <value>params["testid"].value</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="paramName">freqparm</property>
                    <simple-property-list name="expression">
                        <value>params["freq2"].value</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="paramName">typ</property>
                    <simple-property-list name="expression">
                        <value>params["type"].value</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="paramName">vdatatype</property>
                    <simple-property-list name="expression">
                        <value>params["vdatatype"].value</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="paramName">serialid</property>
                    <simple-property-list name="expression">
                        <value>params["serialid"].value</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="paramName">prec</property>
                    <simple-property-list name="expression">
                        <value>params["pc"].value</value>
                    </simple-property-list>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Prodserial_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Prodserial_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MXU</property>
                    <expression name="expression" type="javascript">dataSetRow["MXU"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MNU</property>
                    <expression name="expression" type="javascript">dataSetRow["MNU"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Aggregation</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">COUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value" type="javascript">row["Angle"]</expression>
                        </structure>
                    </list-property>
                    <property name="allowExport">true</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="1419">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGNeG.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX1&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN1&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakBefore">always</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">row["Aggregation"]==0</expression>
                </structure>
            </list-property>
            <list-property name="paramBindings">
                <structure>
                    <property name="paramName">testid</property>
                    <simple-property-list name="expression">
                        <value>params["testid"].value</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="paramName">freqparm</property>
                    <simple-property-list name="expression">
                        <value>params["freq3"].value</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="paramName">typ</property>
                    <simple-property-list name="expression">
                        <value>params["type"].value</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="paramName">vdatatype</property>
                    <simple-property-list name="expression">
                        <value>params["vdatatype"].value</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="paramName">serialid</property>
                    <simple-property-list name="expression">
                        <value>params["serialid"].value</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="paramName">prec</property>
                    <simple-property-list name="expression">
                        <value>params["pc"].value</value>
                    </simple-property-list>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Prodserial_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Prodserial_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MXU</property>
                    <expression name="expression" type="javascript">dataSetRow["MXU"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MNU</property>
                    <expression name="expression" type="javascript">dataSetRow["MNU"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Aggregation</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">COUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value" type="javascript">row["Angle"]</expression>
                        </structure>
                    </list-property>
                    <property name="allowExport">true</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="1420">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGNeG.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX1&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN1&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakBefore">always</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">row["Aggregation"]==0</expression>
                </structure>
            </list-property>
            <list-property name="paramBindings">
                <structure>
                    <property name="paramName">testid</property>
                    <simple-property-list name="expression">
                        <value>params["testid"].value</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="paramName">freqparm</property>
                    <simple-property-list name="expression">
                        <value>params["freq4"].value</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="paramName">typ</property>
                    <simple-property-list name="expression">
                        <value>params["type"].value</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="paramName">vdatatype</property>
                    <simple-property-list name="expression">
                        <value>params["vdatatype"].value</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="paramName">serialid</property>
                    <simple-property-list name="expression">
                        <value>params["serialid"].value</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="paramName">prec</property>
                    <simple-property-list name="expression">
                        <value>params["pc"].value</value>
                    </simple-property-list>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Prodserial_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Prodserial_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MXU</property>
                    <expression name="expression" type="javascript">dataSetRow["MXU"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MNU</property>
                    <expression name="expression" type="javascript">dataSetRow["MNU"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Aggregation</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">COUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value" type="javascript">row["Angle"]</expression>
                        </structure>
                    </list-property>
                    <property name="allowExport">true</property>
                </structure>
            </list-property>
        </extended-item>
        <extended-item extensionName="Chart" id="1421">
            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithoutAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/RadarChartModelType">
  <Version>2.6.1</Version>
  <Type>Radar Chart</Type>
  <SubType>Standard Radar Chart</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Polar Chart</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value>Frequency</Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:EmbeddedImage">
      <URL>FINALBGNeG.png</URL>
      <Data></Data>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Script>var numberofpoints;&#xD;
&#xD;
var show;&#xD;
/*function afterDataSetFilled(series, dataSet, icsc)&#xD;
{&#xD;
&#xD;
&#xD;
icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(550);&#xD;
 			}*/&#xD;
 			&#xD;
 			&#xD;
//called before scripts below&#xD;
function afterDataSetFilled( series, dataSet, icsc )&#xD;
{&#xD;
var list = dataSet.getValues();&#xD;
numberofpoints = list.length;&#xD;
if(numberofpoints!=null &amp;&amp; numberofpoints>0)&#xD;
    	{&#xD;
    	show=1;&#xD;
    	}&#xD;
&#xD;
&#xD;
}&#xD;
&#xD;
function beforeGeneration( chart, icsc )&#xD;
{&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.type.impl );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.attribute );&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.component.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type.impl);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.examples.radar.model.type);&#xD;
	importPackage( Packages.org.eclipse.birt.chart.model.impl );&#xD;
	importPackage( Packages.java.math );	&#xD;
	if( chart.getClass() == ChartWithoutAxesImpl ){&#xD;
		seriesDef = chart.getSeriesDefinitions().get(0);&#xD;
		catRunSeries = seriesDef.getRunTimeSeries();&#xD;
		valSeriesDef = seriesDef.getSeriesDefinitions().get(0);&#xD;
		var series = valSeriesDef.getSeries().get(0);&#xD;
		&#xD;
			//series.setPlotSteps(BigInteger.valueOf(5));&#xD;
			scaleparam=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;scaleparam&quot;);&#xD;
			&#xD;
			&#xD;
			MaxAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MX1&quot;);&#xD;
			MinAmp=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MN1&quot;);&#xD;
			&#xD;
			//MaxAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MXU1&quot;);&#xD;
			//MinAmpU=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;MNU1&quot;);&#xD;
			&#xD;
			if(show==1)&#xD;
			{&#xD;
				if(scaleparam==&quot;yes&quot;)&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmp);&#xD;
					series.setWebLabelMax(MaxAmp);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					series.setWebLabelMin(MinAmpU);&#xD;
					series.setWebLabelMax(MaxAmpU);&#xD;
					&#xD;
				}&#xD;
				series.setRadarAutoScale(false);&#xD;
			}&#xD;
			//series.setWebLabelMin(-67);&#xD;
			//series.setWebLabelMax(-47);&#xD;
			}&#xD;
&#xD;
&#xD;
			icsc.getChartInstance().getBlock().getBounds().setWidth(550);&#xD;
 			icsc.getChartInstance().getBlock().getBounds().setHeight(450);&#xD;
}&#xD;
&#xD;
&#xD;
/**&#xD;
 * Called before drawing each block.&#xD;
 * &#xD;
 * @param block&#xD;
 *            Block&#xD;
 * @param icsc&#xD;
 *            IChartScriptContext&#xD;
 */&#xD;
&#xD;
function beforeDrawBlock( block, icsc )&#xD;
{&#xD;
title=icsc.getExternalContext().getScriptable().getPersistentGlobalVariable(&quot;showimage&quot;);&#xD;
if(title==&quot;no&quot;)&#xD;
{&#xD;
//block.setBackground(null)&#xD;
}&#xD;
else&#xD;
{}&#xD;
}</Script>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity/>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>true</Visible>
  </EmptyMessage>
  <SeriesDefinitions>
    <Query>
      <Definition></Definition>
    </Query>
    <SeriesPalette>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>166</Green>
        <Blue>218</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>242</Red>
        <Green>88</Green>
        <Blue>106</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>232</Red>
        <Green>172</Green>
        <Blue>57</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>64</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>170</Red>
        <Green>85</Green>
        <Blue>85</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>192</Red>
        <Green>192</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>192</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>7</Red>
        <Green>146</Green>
        <Blue>94</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>128</Green>
        <Blue>192</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>64</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>80</Red>
        <Green>240</Green>
        <Blue>120</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>0</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>0</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>64</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>128</Red>
        <Green>128</Green>
        <Blue>128</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>64</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Entries>
      <Entries xsi:type="attribute:ColorDefinition">
        <Transparency>255</Transparency>
        <Red>255</Red>
        <Green>128</Green>
        <Blue>0</Blue>
      </Entries>
    </SeriesPalette>
    <SeriesDefinitions>
      <Query>
        <Definition>row[&quot;Frequency&quot;]</Definition>
        <Grouping>
          <GroupType>Text</GroupType>
        </Grouping>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series xsi:type="type:RadarSeries">
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;Amplitude&quot;]</Definition>
          <Grouping>
            <GroupType>Text</GroupType>
            <AggregateExpression>Sum</AggregateExpression>
          </Grouping>
        </DataDefinition>
        <SeriesIdentifier>Series 1</SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
        <Triggers>
          <Condition>onmouseover</Condition>
          <Action>
            <Type>Show_Tooltip</Type>
            <Value xsi:type="attribute:TooltipValue">
              <Text></Text>
              <Delay>200</Delay>
            </Value>
          </Action>
        </Triggers>
        <Marker>
          <Type>Box</Type>
          <Size>0</Size>
          <Visible>true</Visible>
          <Outline>
            <Visible>false</Visible>
          </Outline>
        </Marker>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Visible>true</Visible>
        </LineAttributes>
        <PaletteLineColor>true</PaletteLineColor>
        <WebLineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Color>
          <Visible>false</Visible>
        </WebLineAttributes>
        <ShowWebLabels>true</ShowWebLabels>
        <ShowCatLabels>false</ShowCatLabels>
        <RadarAutoScale>true</RadarAutoScale>
        <ConnectEndpoints>true</ConnectEndpoints>
        <WebLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>9.0</Size>
              <Alignment/>
            </Font>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>128</Green>
              <Blue>0</Blue>
            </Color>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>50.0</Left>
            <Bottom>0.0</Bottom>
            <Right>0.0</Right>
          </Insets>
          <Visible>true</Visible>
        </WebLabel>
        <CatLabel>
          <Caption>
            <Value></Value>
            <Font>
              <Size>8.0</Size>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>true</Visible>
        </CatLabel>
        <WebLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>##</Pattern>
        </WebLabelFormatSpecifier>
        <CatLabelFormatSpecifier xsi:type="attribute:JavaNumberFormatSpecifier">
          <Pattern>#</Pattern>
        </CatLabelFormatSpecifier>
        <PlotSteps>5</PlotSteps>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey/>
    </SeriesDefinitions>
    <Series>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Label>
      <DataDefinition>
        <Definition>row[&quot;Angle&quot;]</Definition>
      </DataDefinition>
      <SeriesIdentifier></SeriesIdentifier>
      <DataPoint>
        <Components>
          <Type>Orthogonal_Value</Type>
        </Components>
        <Separator>, </Separator>
      </DataPoint>
      <LabelPosition>Outside</LabelPosition>
      <Stacked>false</Stacked>
    </Series>
    <Grouping>
      <Enabled>false</Enabled>
      <GroupingInterval>5.0</GroupingInterval>
      <GroupType>Numeric</GroupType>
      <AggregateExpression>Average</AggregateExpression>
      <AggregateParameters></AggregateParameters>
    </Grouping>
    <SortKey/>
  </SeriesDefinitions>
</model:ChartWithoutAxes>
]]></xml-property>
            <property name="outputFormat">SVG</property>
            <property name="inheritColumns">true</property>
            <property name="pageBreakBefore">always</property>
            <property name="pageBreakAfter">auto</property>
            <property name="height">130pt</property>
            <property name="width">212pt</property>
            <property name="dataSet">HnVdataset</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">row["Aggregation"]==0</expression>
                </structure>
            </list-property>
            <list-property name="paramBindings">
                <structure>
                    <property name="paramName">testid</property>
                    <simple-property-list name="expression">
                        <value>params["testid"].value</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="paramName">freqparm</property>
                    <simple-property-list name="expression">
                        <value>params["freq5"].value</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="paramName">typ</property>
                    <simple-property-list name="expression">
                        <value>params["type"].value</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="paramName">vdatatype</property>
                    <simple-property-list name="expression">
                        <value>params["vdatatype"].value</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="paramName">serialid</property>
                    <simple-property-list name="expression">
                        <value>params["serialid"].value</value>
                    </simple-property-list>
                </structure>
                <structure>
                    <property name="paramName">prec</property>
                    <simple-property-list name="expression">
                        <value>params["pc"].value</value>
                    </simple-property-list>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Angle</property>
                    <expression name="expression" type="javascript">dataSetRow["Angle"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Amplitude</property>
                    <expression name="expression" type="javascript">dataSetRow["Amplitude"]</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">Frequency</property>
                    <expression name="expression" type="javascript">dataSetRow["Frequency"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Prodserial_id</property>
                    <expression name="expression" type="javascript">dataSetRow["Prodserial_id"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">strmaxvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strmaxvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">strminvalue</property>
                    <expression name="expression" type="javascript">dataSetRow["strminvalue"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MX</property>
                    <expression name="expression" type="javascript">dataSetRow["MX"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MN</property>
                    <expression name="expression" type="javascript">dataSetRow["MN"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">showimage</property>
                    <expression name="expression" type="javascript">dataSetRow["showimage"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">scaleparam</property>
                    <expression name="expression" type="javascript">dataSetRow["scaleparam"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MXU</property>
                    <expression name="expression" type="javascript">dataSetRow["MXU"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">MNU</property>
                    <expression name="expression" type="javascript">dataSetRow["MNU"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Aggregation</property>
                    <property name="dataType">integer</property>
                    <property name="aggregateFunction">COUNT</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value" type="javascript">row["Angle"]</expression>
                        </structure>
                    </list-property>
                    <property name="allowExport">true</property>
                </structure>
            </list-property>
        </extended-item>
    </body>
</report>
